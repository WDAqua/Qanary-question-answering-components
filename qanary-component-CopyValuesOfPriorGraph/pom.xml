<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>eu.wdaqua.qanary.component</groupId>
	<artifactId>qanary-component-CopyValuesOfPriorGraph</artifactId>
	<version>0.1.3</version>

	<parent>
		<groupId>eu.wdaqua.qanary</groupId>
		<artifactId>qa.qanarycomponent-parent</artifactId>
		<version>[0.1.0,1.0.0)</version>
	</parent>
	<properties>
		<java.version>17</java.version>
		<qanary.version>[3.7.6,4.0.0)</qanary.version>
		<spring-boot-admin.version>2.7.10</spring-boot-admin.version>
		<docker.image.prefix>qanary</docker.image.prefix>
		<!-- Replace the name of the docker image to be generated -->
		<!-- if there is an error demanding a lower-case name, then you picked 
			an artifactId not following the naming conventions, (c.f., https://maven.apache.org/guides/mini/guide-naming-conventions.html) -->
		<docker.image.name>qanary-component-copyvaluesofpriorgraph</docker.image.name>
		<dockerfile-maven-version>1.4.13</dockerfile-maven-version>
		<springdoc.version>1.7.0</springdoc.version>
	</properties>

	<!-- META INFORMATION, required due to inheritance from component-parent as parent -->
	<!-- The name tag is inherited and a composition of the groupID and artifactID -->
	<url>https://github.com/WDAqua/Qanary-question-answering-components</url>
	<description>CopyValuesOfPriorGraph is a Qanary component for copying data from a prior process (i.e., prior graph of the Qanary triplestore)</description>
	<licenses>
		<license>
			<name>The Apache License, Version 2.0</name> <!-- Example for Apache2 Licence -->
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url> <!-- Example for Apache2 Licence -->
		</license>
	</licenses>
	<developers>
		<developer>
			<name>Andreas Both</name>
			<email>andreas.both@htwk-leipzig.de</email>
			<organization>WDAqua</organization>
			<organizationUrl>http://wdaqua.eu/</organizationUrl>
		</developer>
	</developers>

	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-data-rest -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-data-rest</artifactId>
			<version>${springdoc.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.springdoc/springdoc-openapi-ui -->
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-ui</artifactId>
			<exclusions>
				<exclusion>
					<groupId>io.swagger.core.v3</groupId>
					<artifactId>swagger-annotations</artifactId>
				</exclusion>
			</exclusions>
		</dependency>		
		<!-- https://mvnrepository.com/artifact/io.swagger.core.v3/swagger-core-jakarta -->
		<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-core-jakarta</artifactId>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path-assert</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<mainClass>eu.wdaqua.qanary.component.copyvaluesofpriorgraph.Application</mainClass>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- https://github.com/spotify/dockerfile-maven -->
			<!-- build Docker image: mvn dockerfile:build -->
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>${dockerfile-maven-version}</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
							<goal>push</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<repository>${docker.image.name}</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
