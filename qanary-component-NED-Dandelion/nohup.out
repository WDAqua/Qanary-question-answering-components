Error: Unable to access jarfile target/*.jar

[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mDandelionNED -- DandelionNED is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 12:01:32.777[0;39m [32m INFO[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 7849 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion)
[2m2023-10-27 12:01:32.784[0;39m [32mDEBUG[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 12:01:32.802[0;39m [32m INFO[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 12:01:39.411[0;39m [33m WARN[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 12:01:39.579[0;39m [33m WARN[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 12:01:39.628[0;39m [33m WARN[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dandelionNED' defined in URL [jar:file:/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar!/BOOT-INF/classes!/eu/wdaqua/qanary/component/dandelion/ned/DandelionNED.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [eu.wdaqua.qanary.component.dandelion.ned.DandelionNED]: Constructor threw exception; nested exception is eu.wdaqua.qanary.component.dandelion.ned.exception.ApiTokenIsNullOrEmptyException
[2m2023-10-27 12:01:39.856[0;39m [31mERROR[0;39m [35m7849[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.boot.SpringApplication              [0;39m [2m:[0;39m Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'dandelionNED' defined in URL [jar:file:/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar!/BOOT-INF/classes!/eu/wdaqua/qanary/component/dandelion/ned/DandelionNED.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [eu.wdaqua.qanary.component.dandelion.ned.DandelionNED]: Constructor threw exception; nested exception is eu.wdaqua.qanary.component.dandelion.ned.exception.ApiTokenIsNullOrEmptyException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:315) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:296) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.19.jar!/:5.3.19]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.19.jar!/:5.3.19]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1312) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at eu.wdaqua.qanary.component.dandelion.ned.Application.main(Application.java:50) ~[classes!/:3.4.0]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49) ~[qanary-component-NED-Dandelion-3.4.0.jar:3.4.0]
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108) ~[qanary-component-NED-Dandelion-3.4.0.jar:3.4.0]
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58) ~[qanary-component-NED-Dandelion-3.4.0.jar:3.4.0]
	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88) ~[qanary-component-NED-Dandelion-3.4.0.jar:3.4.0]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [eu.wdaqua.qanary.component.dandelion.ned.DandelionNED]: Constructor threw exception; nested exception is eu.wdaqua.qanary.component.dandelion.ned.exception.ApiTokenIsNullOrEmptyException
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:117) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:311) ~[spring-beans-5.3.19.jar!/:5.3.19]
	... 25 common frames omitted
Caused by: eu.wdaqua.qanary.component.dandelion.ned.exception.ApiTokenIsNullOrEmptyException: null
	at eu.wdaqua.qanary.component.dandelion.ned.DandelionNED.<init>(DandelionNED.java:64) ~[classes!/:3.4.0]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[na:na]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.19.jar!/:5.3.19]
	... 27 common frames omitted


[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mDandelionNED -- DandelionNED is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 12:03:53.665[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 8575 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion)
[2m2023-10-27 12:03:53.669[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 12:03:53.669[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 12:03:55.932[0;39m [33m WARN[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 12:03:55.993[0;39m [33m WARN[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 12:03:56.007[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b5966e1
[2m2023-10-27 12:03:56.009[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:03:56.025[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:03:56.032[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:03:56.035[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:03:56.040[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 12:03:56.542[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@66d57c1b
[2m2023-10-27 12:03:56.544[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:03:56.547[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 12:03:56.550[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:03:56.585[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T10:03:56.513"}
[2m2023-10-27 12:03:56.589[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 12:03:56.589[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 12:03:56.589[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 12:03:56.589[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 12:03:56.589[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 12:03:56.589[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 12:03:56.589[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:03:56.604[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b9c69a9
[2m2023-10-27 12:03:56.604[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:03:56.604[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:03:56.605[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:03:56.605[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:03:56.605[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 12:03:56.664[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6622a690
[2m2023-10-27 12:03:56.665[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:03:56.665[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 12:03:56.665[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:03:56.666[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T10:03:56.636"}
[2m2023-10-27 12:03:56.667[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 12:03:56.667[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 12:03:56.667[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 12:03:56.667[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 12:03:56.667[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 12:03:56.667[0;39m [32mDEBUG[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 12:03:56.667[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:03:56.668[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.dandelion.ned.DandelionNED@497570fb
[2m2023-10-27 12:03:56.672[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8088
spring.application.name                  = DandelionNED
spring.application.description           = DandelionNED is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 12:03:56.683[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl
[2m2023-10-27 12:03:57.107[0;39m [33m WARN[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 12:03:57.118[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 12:03:57.985[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Started Application in 4.85 seconds (JVM running for 5.445)
[2m2023-10-27 12:03:58.117[0;39m [32m INFO[0;39m [35m8575[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Application registered itself as f1fddc3c27f7
[2m2023-10-27 12:08:47.994[0;39m [33m WARN[0;39m [35m8575[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Failed to register application as Application(name=DandelionNED, managementUrl=http://0.0.0.0:8088/actuator, healthUrl=http://0.0.0.0:8088/actuator/health, serviceUrl=http://0.0.0.0:8088/) at spring-boot-admin ([http://localhost:8080/instances]): I/O error on POST request for "http://localhost:8080/instances": Connect to localhost:8080 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8080 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused. Further attempts are logged on DEBUG level

[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mDandelionNED -- DandelionNED is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 12:09:22.439[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 9646 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion)
[2m2023-10-27 12:09:22.466[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 12:09:22.469[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 12:09:41.537[0;39m [33m WARN[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 12:09:42.172[0;39m [33m WARN[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 12:09:42.302[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@65e61854
[2m2023-10-27 12:09:42.310[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:09:42.426[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:09:42.484[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:09:42.488[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:09:42.525[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 12:09:44.644[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@27494e46
[2m2023-10-27 12:09:44.648[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:09:44.673[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 12:09:44.689[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:09:44.970[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T10:09:44.614"}
[2m2023-10-27 12:09:44.993[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 12:09:44.993[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 12:09:44.993[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 12:09:45.008[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 12:09:45.008[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 12:09:45.008[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 12:09:45.009[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:09:45.100[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6622a690
[2m2023-10-27 12:09:45.100[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:09:45.100[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:09:45.108[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:09:45.109[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:09:45.109[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 12:09:45.191[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@30b9eadd
[2m2023-10-27 12:09:45.191[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:09:45.192[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 12:09:45.192[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:09:45.198[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T10:09:45.166"}
[2m2023-10-27 12:09:45.202[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 12:09:45.202[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 12:09:45.202[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 12:09:45.202[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 12:09:45.202[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 12:09:45.202[0;39m [32mDEBUG[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 12:09:45.202[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:09:45.203[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.dandelion.ned.DandelionNED@412c995d
[2m2023-10-27 12:09:45.230[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8088
spring.application.name                  = DandelionNED
spring.application.description           = DandelionNED is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 12:09:45.295[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl
[2m2023-10-27 12:09:48.877[0;39m [33m WARN[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 12:09:48.998[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 12:09:55.814[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Started Application in 38.036 seconds (JVM running for 44.925)
[2m2023-10-27 12:09:56.485[0;39m [33m WARN[0;39m [35m9646[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Failed to register application as Application(name=DandelionNED, managementUrl=http://0.0.0.0:8088/actuator, healthUrl=http://0.0.0.0:8088/actuator/health, serviceUrl=http://0.0.0.0:8088/) at spring-boot-admin ([http://localhost:8080/instances]): I/O error on POST request for "http://localhost:8080/instances": Connect to localhost:8080 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8080 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused. Further attempts are logged on DEBUG level
[2m2023-10-27 12:10:06.244[0;39m [32m INFO[0;39m [35m9646[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Application registered itself as f1fddc3c27f7

[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mDandelionNED -- DandelionNED is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 12:15:50.866[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 11759 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion)
[2m2023-10-27 12:15:50.878[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 12:15:50.923[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 12:16:17.974[0;39m [33m WARN[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 12:16:18.759[0;39m [33m WARN[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 12:16:18.914[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@65e61854
[2m2023-10-27 12:16:18.944[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:16:19.166[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:16:19.217[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:16:19.240[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:16:19.332[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 12:16:22.845[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@27494e46
[2m2023-10-27 12:16:22.888[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:16:22.914[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 12:16:22.978[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:16:23.508[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T10:16:22.810"}
[2m2023-10-27 12:16:23.519[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 12:16:23.521[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 12:16:23.522[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 12:16:23.524[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 12:16:23.524[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 12:16:23.529[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 12:16:23.530[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:16:23.725[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6622a690
[2m2023-10-27 12:16:23.725[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:16:23.726[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:16:23.726[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:16:23.740[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:16:23.743[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 12:16:23.809[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@30b9eadd
[2m2023-10-27 12:16:23.809[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:16:23.810[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 12:16:23.810[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 12:16:23.826[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T10:16:23.789"}
[2m2023-10-27 12:16:23.827[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 12:16:23.827[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 12:16:23.828[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 12:16:23.828[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 12:16:23.828[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 12:16:23.828[0;39m [32mDEBUG[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 12:16:23.828[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:16:23.835[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.dandelion.ned.DandelionNED@412c995d
[2m2023-10-27 12:16:23.919[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8088
spring.application.name                  = DandelionNED
spring.application.description           = DandelionNED is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 12:16:24.232[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl
[2m2023-10-27 12:16:29.657[0;39m [33m WARN[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 12:16:29.822[0;39m [32m INFO[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 12:16:39.633[0;39m [33m WARN[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8088 is already in use
[2m2023-10-27 12:16:40.698[0;39m [31mERROR[0;39m [35m11759[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.d.LoggingFailureAnalysisReporter  [0;39m [2m:[0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8088 was already in use.

Action:

Identify and stop the process that's listening on port 8088 or configure this application to listen on another port.


[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mDandelionNED -- DandelionNED is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 13:37:49.534[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 28726 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion)
[2m2023-10-27 13:37:49.573[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 13:37:49.610[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 13:38:09.974[0;39m [33m WARN[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 13:38:10.709[0;39m [33m WARN[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 13:38:10.969[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b5966e1
[2m2023-10-27 13:38:10.987[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:38:11.218[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:38:11.353[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:38:11.372[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:38:11.417[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 13:38:13.821[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@66d57c1b
[2m2023-10-27 13:38:13.849[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:38:13.901[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:38:13.909[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:38:14.357[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T11:38:13.780"}
[2m2023-10-27 13:38:14.417[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 13:38:14.417[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 13:38:14.418[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 13:38:14.420[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 13:38:14.421[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 13:38:14.421[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 13:38:14.422[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:38:14.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b9c69a9
[2m2023-10-27 13:38:14.596[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:38:14.597[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:38:14.597[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:38:14.603[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:38:14.603[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 13:38:14.656[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6622a690
[2m2023-10-27 13:38:14.656[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:38:14.656[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:38:14.657[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:38:14.658[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T11:38:14.633"}
[2m2023-10-27 13:38:14.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 13:38:14.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 13:38:14.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 13:38:14.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 13:38:14.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 13:38:14.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 13:38:14.663[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:38:14.672[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.dandelion.ned.DandelionNED@497570fb
[2m2023-10-27 13:38:14.706[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8088
spring.application.name                  = DandelionNED
spring.application.description           = DandelionNED is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 13:38:14.854[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl
[2m2023-10-27 13:38:18.882[0;39m [33m WARN[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 13:38:19.110[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 13:38:29.615[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Started Application in 46.386 seconds (JVM running for 52.407)
[2m2023-10-27 13:38:30.372[0;39m [33m WARN[0;39m [35m28726[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Failed to register application as Application(name=DandelionNED, managementUrl=http://0.0.0.0:8088/actuator, healthUrl=http://0.0.0.0:8088/actuator/health, serviceUrl=http://0.0.0.0:8088/) at spring-boot-admin ([http://localhost:8080/instances]): I/O error on POST request for "http://localhost:8080/instances": Connect to localhost:8080 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused; nested exception is org.apache.http.conn.HttpHostConnectException: Connect to localhost:8080 [localhost/127.0.0.1, localhost/0:0:0:0:0:0:0:1] failed: Connection refused. Further attempts are logged on DEBUG level
[2m2023-10-27 13:38:39.699[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Application registered itself as f1fddc3c27f7

[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mDandelionNED -- DandelionNED is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 13:38:52.992[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 30117 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/target/qanary-component-NED-Dandelion-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion)
[2m2023-10-27 13:38:53.014[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 13:38:53.027[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 13:39:16.593[0;39m [33m WARN[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 13:39:17.487[0;39m [33m WARN[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 13:39:17.658[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b5966e1
[2m2023-10-27 13:39:17.661[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:39:17.712[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:39:17.724[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:39:17.731[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:39:17.744[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 13:39:21.230[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@66d57c1b
[2m2023-10-27 13:39:21.235[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:39:21.303[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:39:21.349[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:39:21.850[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T11:39:21.183"}
[2m2023-10-27 13:39:21.915[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 13:39:21.915[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 13:39:21.919[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 13:39:21.925[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 13:39:21.925[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 13:39:21.930[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 13:39:21.931[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:39:22.078[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b9c69a9
[2m2023-10-27 13:39:22.078[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:39:22.079[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:39:22.079[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:39:22.079[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:39:22.079[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2115841900
[2m2023-10-27 13:39:22.135[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6622a690
[2m2023-10-27 13:39:22.136[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:39:22.136[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:39:22.137[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+birthplace+of+Albert+Einstein%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:39:22.138[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":22,"spot":"birthplace","confidence":0.6254,"id":11206044,"title":"Place of birth","uri":"http://en.wikipedia.org/wiki/Place_of_birth","abstract":"The place of birth (POB) or birthplace is the place where a person was born. This place is often used in legal documents, together with name and date of birth, to uniquely identify a person. Practice regarding whether this place should be a country, a territory or a city/town/locality differs in different countries, but often city or territory is used for native-born citizen passports and countries for foreign-born ones.","label":"POB","categories":["Birthplaces","Human migration","Nationality law"],"types":[]},{"start":26,"end":41,"spot":"Albert Einstein","confidence":0.8922,"id":736,"title":"Albert Einstein","uri":"http://en.wikipedia.org/wiki/Albert_Einstein","abstract":"Albert Einstein (14 March 1879 – 18 April 1955) was a German-born theoretical physicist, widely held to be one of the greatest and most influential scientists of all time. Best known for developing the theory of relativity, he also made important contributions to quantum mechanics, and was thus a central figure in the revolutionary reshaping of the scientific understanding of nature that modern physics accomplished in the first decades of the twentieth century. His mass–energy equivalence formula, which arises from relativity theory, has been called \"the world's most famous equation\". He received the 1921 Nobel Prize in Physics \"for his services to theoretical physics, and especially for his discovery of the law of the photoelectric effect\", a pivotal step in the development of quantum theory. His work is also known for its influence on the philosophy of science. In a 1999 poll of 130 leading physicists worldwide by the British journal Physics World, Einstein was ranked the greatest physicist of all time. His intellectual achievements and originality have made Einstein synonymous with genius.","label":"Albert Einstein","categories":["1879 births","1955 deaths","19th-century German Jews","20th-century American engineers","20th-century American inventors","20th-century American physicists","20th-century American writers","20th-century Swiss inventors","Albert Einstein","American Ashkenazi Jews","American Nobel laureates","American Zionists","American agnostics","American democratic socialists","American humanists","American letter writers","American pacifists","American relativity theorists","American science writers","Charles University faculty","Deaths from abdominal aortic aneurysm","Denaturalized citizens of Germany","ETH Zurich alumni","ETH Zurich faculty","Einstein family","European democratic socialists","German Ashkenazi Jews","German Nobel laureates","German agnostics","German emigrants to Switzerland","German humanists","German relativity theorists","Institute for Advanced Study faculty","Jewish American physicists","Jewish agnostics","Jewish emigrants from Nazi Germany to the United States","Jewish physicists","Members of the Royal Netherlands Academy of Arts and Sciences","Members of the United States National Academy of Sciences","Naturalised citizens of Austria","Naturalised citizens of Switzerland","Naturalized citizens of the United States","New Jersey Hall of Fame inductees","Nobel laureates in Physics","Pantheists","Patent examiners","People who lost German citizenship","Philosophers of mathematics","Philosophers of science","Philosophy of science","Quantum physicists","Scientists from Munich","Spinozists","Stateless people","Swiss Ashkenazi Jews","Swiss Nobel laureates","Swiss agnostics","Swiss cosmologists","Swiss emigrants to the United States","Swiss physicists","University of Bern faculty","University of Zurich alumni","University of Zurich faculty","Winners of the Max Planck Medal","Württemberger emigrants to the United States"],"types":["http://dbpedia.org/ontology/Scientist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":0.518,"timestamp":"2023-10-27T11:39:22.113"}
[2m2023-10-27 13:39:22.139[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 13:39:22.139[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 22
[2m2023-10-27 13:39:22.143[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Place_of_birth
[2m2023-10-27 13:39:22.143[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 13:39:22.143[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 13:39:22.143[0;39m [32mDEBUG[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Albert_Einstein
[2m2023-10-27 13:39:22.143[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:39:22.144[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.dandelion.ned.DandelionNED@497570fb
[2m2023-10-27 13:39:22.166[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8088
spring.application.name                  = DandelionNED
spring.application.description           = DandelionNED is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 13:39:22.361[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl
[2m2023-10-27 13:39:26.826[0;39m [33m WARN[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NED-Dandelion/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 13:39:27.009[0;39m [32m INFO[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 13:39:35.106[0;39m [33m WARN[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8088 is already in use
[2m2023-10-27 13:39:35.446[0;39m [31mERROR[0;39m [35m30117[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.d.LoggingFailureAnalysisReporter  [0;39m [2m:[0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8088 was already in use.

Action:

Identify and stop the process that's listening on port 8088 or configure this application to listen on another port.

[2m2023-10-27 13:51:55.977[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18","outGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18"}
[2m2023-10-27 13:51:55.992[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18","outGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18"}
[2m2023-10-27 13:51:56.083[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18"},"inGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18","outGraph":"urn:graph:0025b33f-5860-475c-b315-98d75dc69c18"}
[2m2023-10-27 13:51:56.230[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@8890f1c
[2m2023-10-27 13:51:56.349[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@506a6d77
[2m2023-10-27 13:51:56.376[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:51:56.706[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:51:56.708[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:51:56.961[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6
[2m2023-10-27 13:51:56.962[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6 found in urn:graph:0025b33f-5860-475c-b315-98d75dc69c18 at http://localhost:8080/sparql
[2m2023-10-27 13:51:56.972[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many countries are on the continent of South America ? 
[2m2023-10-27 13:51:56.973[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question How many countries are on the continent of South America ?
[2m2023-10-27 13:51:56.976[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+countries+are+on+the+continent+of+South+America+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:51:56.977[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+countries+are+on+the+continent+of+South+America+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:51:56.977[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:51:57.075[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1903797592
[2m2023-10-27 13:51:57.339[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@70e9d57d
[2m2023-10-27 13:51:57.339[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:51:57.340[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:51:57.340[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+countries+are+on+the+continent+of+South+America+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:51:57.340[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":9,"end":18,"spot":"countries","confidence":0.7148,"id":21754,"title":"Nation","uri":"http://en.wikipedia.org/wiki/Nation","abstract":"A nation is a large type of social organization where a collective identity has emerged from a combination of shared features across a given population, such as language, history, ethnicity, culture, territory and/or society. Some nations are constructed around ethnicity (see ethnic nationalism) while others are bound by political constitutions (see civic nationalism and multiculturalism).","label":"Nation","categories":["Ethnicity","Nation","Pages using page needed template with unknown parameters","Political geography","Political science terminology","Types of communities"],"types":[]},{"start":30,"end":39,"spot":"continent","confidence":0.7702,"id":19630739,"title":"Continent","uri":"http://en.wikipedia.org/wiki/Continent","abstract":"A continent is any of several large geographical regions. Continents are generally identified by convention rather than any strict criteria. A continent could be a single landmass or a part of a very large landmass, as in the case of Asia or Europe. Due to this, the number of continents varies; up to seven or as few as four geographical regions are commonly regarded as continents. Most English-speaking countries recognize seven regions as continents. In order from largest to smallest in area, these seven regions are Asia, Africa, North America, South America, Antarctica, Europe, and Australia. Different variations with fewer continents merge some of these regions; examples of this are merging North America and South America into America, Asia and Europe into Eurasia, and Africa, Asia, and Europe into Afro-Eurasia.","label":"Continent","categories":["Continents"],"types":[]},{"start":43,"end":56,"spot":"South America","confidence":0.817,"id":26769,"title":"South America","uri":"http://en.wikipedia.org/wiki/South_America","abstract":"South America is a continent entirely in the Western Hemisphere and mostly in the Southern Hemisphere, with a relatively small portion in the Northern Hemisphere at the northern tip of the continent. It can also be described as the southern subregion of a single continent called America.","label":"South America","categories":["Continents","South America"],"types":["http://dbpedia.org/ontology/Continent","http://dbpedia.org/ontology/PopulatedPlace","http://dbpedia.org/ontology/Place","http://dbpedia.org/ontology/Location"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:51:57.318"}
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 9
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 18
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Nation
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 30
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 39
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Continent
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 43
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 56
[2m2023-10-27 13:51:57.341[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/South_America
[2m2023-10-27 13:51:57.350[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6
[2m2023-10-27 13:51:57.350[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@55dfa4c9
[2m2023-10-27 13:51:57.350[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:51:57.364[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nation" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.364[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nation" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.365[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nation" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.376[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@50bc3239
[2m2023-10-27 13:51:57.377[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:51:57.380[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "30"^^xsd:nonNegativeInteger .
    _:b1 oa:end "40"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Continent" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.381[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "30"^^xsd:nonNegativeInteger .
    _:b1 oa:end "40"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Continent" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.381[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "30"^^xsd:nonNegativeInteger .
    _:b1 oa:end "40"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Continent" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.390[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5081279b
[2m2023-10-27 13:51:57.391[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:51:57.393[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "43"^^xsd:nonNegativeInteger .
    _:b1 oa:end "57"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/South_America" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.394[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "43"^^xsd:nonNegativeInteger .
    _:b1 oa:end "57"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/South_America" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.394[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:0025b33f-5860-475c-b315-98d75dc69c18> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43bddf4c-aa92-4123-886c-5c988690ecf6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "43"^^xsd:nonNegativeInteger .
    _:b1 oa:end "57"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/South_America" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:57.403[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 1415 ms
[2m2023-10-27 13:51:58.647[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8","outGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8"}
[2m2023-10-27 13:51:58.647[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8","outGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8"}
[2m2023-10-27 13:51:58.647[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8"},"inGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8","outGraph":"urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8"}
[2m2023-10-27 13:51:58.647[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@6328fe70
[2m2023-10-27 13:51:58.661[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@671766cd
[2m2023-10-27 13:51:58.675[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:51:58.677[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:51:58.679[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:51:58.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221
[2m2023-10-27 13:51:58.722[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221 found in urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8 at http://localhost:8080/sparql
[2m2023-10-27 13:51:58.725[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation For what literature prize was Simone de Beauvoir nominated? 
[2m2023-10-27 13:51:58.726[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question For what literature prize was Simone de Beauvoir nominated?
[2m2023-10-27 13:51:58.726[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=For+what+literature+prize+was+Simone+de+Beauvoir+nominated%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:51:58.726[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=For+what+literature+prize+was+Simone+de+Beauvoir+nominated%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:51:58.726[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:51:58.726[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1388700230
[2m2023-10-27 13:51:58.782[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@2215f44b
[2m2023-10-27 13:51:58.782[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:51:58.782[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:51:58.783[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=For+what+literature+prize+was+Simone+de+Beauvoir+nominated%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:51:58.783[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":9,"end":25,"spot":"literature prize","confidence":0.71,"id":23385442,"title":"Nobel Prize in Literature","uri":"http://en.wikipedia.org/wiki/Nobel_Prize_in_Literature","abstract":"The Nobel Prize in Literature (here meaning for literature) is a Swedish literature prize that is awarded annually, since 1901, to an author from any country who has, in the words of the will of Swedish industrialist Alfred Nobel, \"in the field of literature, produced the most outstanding work in an idealistic direction\" (original). Though individual works are sometimes cited as being particularly noteworthy, the award is based on an author's body of work as a whole. The Swedish Academy decides who, if anyone, will receive the prize. The academy announces the name of the laureate in early October. It is one of the five Nobel Prizes established by the will of Alfred Nobel in 1895. Literature is traditionally the final award presented at the Nobel Prize ceremony. On some occasions the award has been postponed to the following year, most recently in 2018 as of July 2023.","label":"Nobel Prize in Literature","categories":["International literary awards","Literary awards honoring writers","Nobel Prize","Nobel Prize in Literature","Swedish Academy"],"types":["http://dbpedia.org/ontology/Award"]},{"start":30,"end":48,"spot":"Simone de Beauvoir","confidence":0.9034,"id":62034,"title":"Simone de Beauvoir","uri":"http://en.wikipedia.org/wiki/Simone_de_Beauvoir","abstract":"Simone Lucie Ernestine Marie Bertrand de Beauvoir (9 January 1908 – 14 April 1986) was a French existentialist philosopher, writer, social theorist, and feminist activist. Though she did not consider herself a philosopher, nor was she considered one at the time of her death, she had a significant influence on both feminist existentialism and feminist theory.","label":"Simone de Beauvoir","categories":["1908 births","1986 deaths","20th-century French memoirists","20th-century French non-fiction writers","20th-century French novelists","20th-century French philosophers","20th-century French women writers","20th-century LGBT people","Atheist feminists","Atheist philosophers","Bisexual feminists","Bisexual women","Bisexual writers","Burials at Montparnasse Cemetery","Communist women writers","Continental philosophers","Critical theorists","Cultural critics","Deaths from pneumonia in France","Epistemologists","Existentialists","Feminist philosophers","Feminist studies scholars","Feminist theorists","Former Roman Catholics","French LGBT novelists","French Marxist writers","French Marxists","French abortion-rights activists","French anti-war activists","French atheists","French communists","French ethicists","French feminist writers","French literary critics","French magazine founders","French political philosophers","French social commentators","French socialist feminists","French socialists","French women critics","French women memoirists","French women non-fiction writers","French women novelists","French women philosophers","Jerusalem Prize recipients","LGBT memoirists","LGBT philosophers","Légion d'honneur refusals","Marxist feminists","Materialist feminists","Metaphysicians","Moral philosophers","Ontologists","Phenomenologists","Philosophers of art","Philosophers of culture","Philosophers of education","Philosophers of ethics and morality","Philosophers of literature","Philosophers of nihilism","Philosophers of sexuality","Political philosophers","Prix Goncourt winners","Signatories of the 1971 Manifesto of the 343","Simone de Beauvoir","Social critics","Social philosophers","University of Paris alumni","Women literary critics","Writers from Paris"],"types":["http://dbpedia.org/ontology/Philosopher","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:51:58.756"}
[2m2023-10-27 13:51:58.785[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 9
[2m2023-10-27 13:51:58.785[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 25
[2m2023-10-27 13:51:58.785[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Nobel_Prize_in_Literature
[2m2023-10-27 13:51:58.785[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 30
[2m2023-10-27 13:51:58.785[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 48
[2m2023-10-27 13:51:58.785[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Simone_de_Beauvoir
[2m2023-10-27 13:51:58.805[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221
[2m2023-10-27 13:51:58.805[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@37828751
[2m2023-10-27 13:51:58.805[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:51:58.812[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nobel_Prize_in_Literature" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:58.813[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nobel_Prize_in_Literature" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:58.813[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nobel_Prize_in_Literature" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:58.833[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@13fd34af
[2m2023-10-27 13:51:58.834[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:51:58.836[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "30"^^xsd:nonNegativeInteger .
    _:b1 oa:end "49"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Simone_de_Beauvoir" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:58.837[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "30"^^xsd:nonNegativeInteger .
    _:b1 oa:end "49"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Simone_de_Beauvoir" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:58.837[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ff28e353-7c7e-4a8f-8e10-2ab0e86c51c8> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d8576d33-c3ea-4658-bee6-96c95b479221> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "30"^^xsd:nonNegativeInteger .
    _:b1 oa:end "49"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Simone_de_Beauvoir" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:51:58.848[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 201 ms
[2m2023-10-27 13:52:06.446[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42","outGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42"}
[2m2023-10-27 13:52:06.446[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42","outGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42"}
[2m2023-10-27 13:52:06.446[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42"},"inGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42","outGraph":"urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42"}
[2m2023-10-27 13:52:06.446[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@4c57c324
[2m2023-10-27 13:52:06.490[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@429034de
[2m2023-10-27 13:52:06.490[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:52:06.492[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:06.493[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:06.502[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6
[2m2023-10-27 13:52:06.502[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6 found in urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42 at http://localhost:8080/sparql
[2m2023-10-27 13:52:06.504[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many Oscars did all the movies directed by Hayao Miyazaki combined win? 
[2m2023-10-27 13:52:06.505[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question How many Oscars did all the movies directed by Hayao Miyazaki combined win?
[2m2023-10-27 13:52:06.505[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+Oscars+did+all+the+movies+directed+by+Hayao+Miyazaki+combined+win%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:06.505[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+Oscars+did+all+the+movies+directed+by+Hayao+Miyazaki+combined+win%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:06.505[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:52:06.505[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=987631136
[2m2023-10-27 13:52:06.643[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3ad3ee5
[2m2023-10-27 13:52:06.643[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:52:06.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:52:06.644[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+Oscars+did+all+the+movies+directed+by+Hayao+Miyazaki+combined+win%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":9,"end":15,"spot":"Oscars","confidence":0.7615,"id":324,"title":"Academy Awards","uri":"http://en.wikipedia.org/wiki/Academy_Awards","abstract":"The Academy Awards, mainly known as the Oscars, are awards for artistic and technical merit for the film industry. They are presented annually by the Academy of Motion Picture Arts and Sciences (AMPAS), in recognition of excellence in cinematic achievements as assessed by the Academy's voting membership. The Academy Awards are regarded by many as the most prestigious, significant awards in the entertainment industry in the United States and worldwide. The Oscar statuette depicts a knight rendered in the Art Deco style.","label":"Academy Award","categories":["1929 establishments in California","Academy Awards","American annual television specials","American film awards","American live television shows","Annual events in Los Angeles County, California","Awards established in 1929","Cinema of Southern California","Culture of Hollywood, Los Angeles","Events in Los Angeles","Performing arts trophies"],"types":["http://dbpedia.org/ontology/Award"]},{"start":47,"end":61,"spot":"Hayao Miyazaki","confidence":0.907,"id":20312,"title":"Hayao Miyazaki","uri":"http://en.wikipedia.org/wiki/Hayao_Miyazaki","abstract":"is a Japanese animator, filmmaker, and manga artist. A co-founder of Studio Ghibli, he has attained international acclaim as a masterful storyteller and creator of Japanese animated feature films, and is widely regarded as one of the most accomplished filmmakers in the history of animation.","label":"Hayao Miyazaki","categories":["1941 births","Academy Honorary Award recipients","Anime character designers","Anime directors","Annie Award winners","Anti–nuclear power activists","Directors of Best Animated Feature Academy Award winners","Directors of Golden Bear winners","Ecofeminists","Environmental writers","Fantasy artists","Fantasy film directors","Feminist artists","Feminist writers","Gakushuin University alumni","Hayao Miyazaki","Inkpot Award winners","Japanese Shintoists","Japanese animated film directors","Japanese animated film producers","Japanese animators","Japanese cartoonists","Japanese environmentalists","Japanese feminists","Japanese pacifists","Japanese production designers","Japanese screenwriters","Japanese speculative fiction artists","Japanese storyboard artists","Living people","Male feminists","Manga artists","Nebula Award winners","People from Bunkyō","Persons of Cultural Merit","Science Fiction Hall of Fame inductees","Studio Ghibli people","Topcraft","World Masterpiece Theater series"],"types":["http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:52:06.618"}
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 9
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 15
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Academy_Awards
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 47
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 61
[2m2023-10-27 13:52:06.645[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Hayao_Miyazaki
[2m2023-10-27 13:52:06.655[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6
[2m2023-10-27 13:52:06.656[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@71118357
[2m2023-10-27 13:52:06.656[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:06.660[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Academy_Awards" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:06.661[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Academy_Awards" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:06.661[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Academy_Awards" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:06.670[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@32647f6f
[2m2023-10-27 13:52:06.670[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:06.673[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "47"^^xsd:nonNegativeInteger .
    _:b1 oa:end "62"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hayao_Miyazaki" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:06.674[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "47"^^xsd:nonNegativeInteger .
    _:b1 oa:end "62"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hayao_Miyazaki" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:06.674[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:bc7bd7da-e63b-4810-98d3-bd483babda42> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b1a79c7a-4106-461b-b919-cd5de1aec6c6> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "47"^^xsd:nonNegativeInteger .
    _:b1 oa:end "62"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hayao_Miyazaki" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:06.684[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 238 ms
[2m2023-10-27 13:52:15.010[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929","outGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929"}
[2m2023-10-27 13:52:15.010[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929","outGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929"}
[2m2023-10-27 13:52:15.010[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929"},"inGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929","outGraph":"urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929"}
[2m2023-10-27 13:52:15.010[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@70e9f86a
[2m2023-10-27 13:52:15.018[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7e2e0807
[2m2023-10-27 13:52:15.018[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:52:15.020[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:15.021[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:15.030[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_7562e139-8be2-4eca-a51f-e082c9c4ce91
[2m2023-10-27 13:52:15.030[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_7562e139-8be2-4eca-a51f-e082c9c4ce91 found in urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929 at http://localhost:8080/sparql
[2m2023-10-27 13:52:15.032[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Was Funny Games and its remake directed by different persons? 
[2m2023-10-27 13:52:15.032[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Was Funny Games and its remake directed by different persons?
[2m2023-10-27 13:52:15.033[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Was+Funny+Games+and+its+remake+directed+by+different+persons%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:15.033[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Was+Funny+Games+and+its+remake+directed+by+different+persons%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:15.033[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:52:15.033[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=59805812
[2m2023-10-27 13:52:15.172[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3f13023c
[2m2023-10-27 13:52:15.172[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:52:15.172[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:52:15.173[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Was+Funny+Games+and+its+remake+directed+by+different+persons%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:15.173[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":4,"end":15,"spot":"Funny Games","confidence":0.8609,"id":3870912,"title":"Funny Games (1997 film)","uri":"http://en.wikipedia.org/wiki/Funny_Games_%281997_film%29","abstract":"Funny Games is a 1997 Austrian psychological horror film written and directed by Michael Haneke, and starring Susanne Lothar, Ulrich Mühe, and Arno Frisch. The plot involves two young men who hold a family hostage and torture them with sadistic games in their vacation home. The film was entered into the 1997 Cannes Film Festival. A shot-for-shot remake, filmed and set in the United States, was released in 2007, also directed by Haneke, this time with an English-speaking cast and a mostly American crew.","label":"Funny Games","categories":["1990s French-language films","1990s German-language films","1990s psychological thriller films","1990s serial killer films","1990s thriller drama films","1997 crime thriller films","1997 drama films","1997 films","1997 independent films","1997 multilingual films","Austrian drama films","Austrian independent films","Austrian multilingual films","Films directed by Michael Haneke","Films set in Austria","Films set in country houses","Home invasions in film","Self-reflexive films","Torture in films"],"types":["http://dbpedia.org/ontology/Film","http://dbpedia.org/ontology/Work"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:52:15.151"}
[2m2023-10-27 13:52:15.174[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 4
[2m2023-10-27 13:52:15.174[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 15
[2m2023-10-27 13:52:15.174[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Funny_Games_%281997_film%29
[2m2023-10-27 13:52:15.182[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_7562e139-8be2-4eca-a51f-e082c9c4ce91
[2m2023-10-27 13:52:15.182[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6971c
[2m2023-10-27 13:52:15.182[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:15.185[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_7562e139-8be2-4eca-a51f-e082c9c4ce91> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Funny_Games_%281997_film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:15.186[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_7562e139-8be2-4eca-a51f-e082c9c4ce91> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Funny_Games_%281997_film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:15.186[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f5b6b467-5e47-4ed3-bb8d-882543cfa929> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_7562e139-8be2-4eca-a51f-e082c9c4ce91> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Funny_Games_%281997_film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:15.196[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 186 ms
[2m2023-10-27 13:52:22.203[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b","outGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b"}
[2m2023-10-27 13:52:22.203[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b","outGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b"}
[2m2023-10-27 13:52:22.204[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b"},"inGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b","outGraph":"urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b"}
[2m2023-10-27 13:52:22.204[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@5283ae27
[2m2023-10-27 13:52:22.216[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5c444a07
[2m2023-10-27 13:52:22.216[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:52:22.217[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:22.218[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:22.229[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_9c339a0f-8630-4f2e-858c-0f6e60ccdd72
[2m2023-10-27 13:52:22.229[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_9c339a0f-8630-4f2e-858c-0f6e60ccdd72 found in urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b at http://localhost:8080/sparql
[2m2023-10-27 13:52:22.231[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Where was K-pop star Lisa Manoban born? 
[2m2023-10-27 13:52:22.231[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Where was K-pop star Lisa Manoban born?
[2m2023-10-27 13:52:22.231[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Where+was+K-pop+star+Lisa+Manoban+born%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:22.231[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Where+was+K-pop+star+Lisa+Manoban+born%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:22.231[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:52:22.231[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=883534214
[2m2023-10-27 13:52:22.360[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@1d79403c
[2m2023-10-27 13:52:22.360[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:52:22.361[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:52:22.361[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Where+was+K-pop+star+Lisa+Manoban+born%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:22.361[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":0,"annotations":[{"start":10,"end":20,"spot":"K-pop star","confidence":0.7598,"id":34346577,"title":"K-pop Star","uri":"http://en.wikipedia.org/wiki/K-pop_Star","abstract":"Survival Audition K-pop Star is a South Korean reality TV competition series where three entertainment/talent agencies in South Korea hold worldwide auditions to find the next potential K-Pop stars. Preliminary auditions are held around the world in Asia, North America, South America, Europe, and Australia. The final winner debuts with the company of his or her choice, along with a cash prize of three hundred million won (approx. 300,000 U.S. dollars), two brand new vehicles, opportunities to become commercial models and casting in dramas, and many more benefits.","label":"K-pop Star","categories":["2011 South Korean television series debuts","2017 South Korean television series endings","K-pop Star","Korean-language television shows","Music competitions in South Korea","Singing talent shows","South Korean reality television series","Talent shows","Television series by Chorokbaem Media"],"types":["http://dbpedia.org/ontology/TelevisionShow","http://dbpedia.org/ontology/Work"]}],"lang":"en","langConfidence":0.5949,"timestamp":"2023-10-27T11:52:22.340"}
[2m2023-10-27 13:52:22.361[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 10
[2m2023-10-27 13:52:22.361[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 20
[2m2023-10-27 13:52:22.361[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/K-pop_Star
[2m2023-10-27 13:52:22.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_9c339a0f-8630-4f2e-858c-0f6e60ccdd72
[2m2023-10-27 13:52:22.369[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@52442722
[2m2023-10-27 13:52:22.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:22.371[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_9c339a0f-8630-4f2e-858c-0f6e60ccdd72> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "10"^^xsd:nonNegativeInteger .
    _:b1 oa:end "21"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/K-pop_Star" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:22.371[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_9c339a0f-8630-4f2e-858c-0f6e60ccdd72> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "10"^^xsd:nonNegativeInteger .
    _:b1 oa:end "21"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/K-pop_Star" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:22.371[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:6bad6003-8387-4fe9-8658-6938e77c679b> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_9c339a0f-8630-4f2e-858c-0f6e60ccdd72> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "10"^^xsd:nonNegativeInteger .
    _:b1 oa:end "21"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/K-pop_Star" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:22.380[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 177 ms
[2m2023-10-27 13:52:25.541[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb","outGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb"}
[2m2023-10-27 13:52:25.542[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb","outGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb"}
[2m2023-10-27 13:52:25.542[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb"},"inGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb","outGraph":"urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb"}
[2m2023-10-27 13:52:25.542[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@63a0a07c
[2m2023-10-27 13:52:25.549[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@76de75a7
[2m2023-10-27 13:52:25.549[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:52:25.550[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:25.550[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:25.557[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1
[2m2023-10-27 13:52:25.558[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1 found in urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb at http://localhost:8080/sparql
[2m2023-10-27 13:52:25.560[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Did Joe Cocker play at the Woodstock festival? 
[2m2023-10-27 13:52:25.561[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Did Joe Cocker play at the Woodstock festival?
[2m2023-10-27 13:52:25.561[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Did+Joe+Cocker+play+at+the+Woodstock+festival%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:25.561[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Did+Joe+Cocker+play+at+the+Woodstock+festival%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:25.561[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:52:25.561[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-567531903
[2m2023-10-27 13:52:25.610[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@26edb921
[2m2023-10-27 13:52:25.610[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:52:25.610[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:52:25.611[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Did+Joe+Cocker+play+at+the+Woodstock+festival%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":4,"end":14,"spot":"Joe Cocker","confidence":0.9391,"id":88371,"title":"Joe Cocker","uri":"http://en.wikipedia.org/wiki/Joe_Cocker","abstract":"John Robert \"Joe\" Cocker (20 May 1944 – 22 December 2014) was an English singer known for his gritty, bluesy voice and dynamic stage performances that featured expressive body movements. Most of his best known singles, such as.","label":"Joe Cocker","categories":["1944 births","2014 deaths","20th-century English singers","21st-century English singers","A&M Records artists","Capitol Records artists","DJM Records artists","Deaths from cancer in Colorado","Deaths from lung cancer","English baritones","English expatriates in the United States","English pop singers","English rock singers","English soul singers","Gasfitters","Grammy Award winners","Island Records artists","Joe Cocker","Musicians from Sheffield","Officers of the Order of the British Empire","People deported from Australia","Rocket Records artists","The Grease Band members"],"types":["http://dbpedia.org/ontology/MusicalArtist","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Artist","http://dbpedia.org/ontology/Animal"]},{"start":15,"end":19,"spot":"play","confidence":0.6715,"id":52086,"title":"Word play","uri":"http://en.wikipedia.org/wiki/Word_play","abstract":"Word play or wordplay (also: play-on-words) is a literary technique and a form of wit in which words used become the main subject of the work, primarily for the purpose of intended effect or amusement. Examples of word play include puns, phonetic mix-ups such as spoonerisms, obscure words and meanings, clever rhetorical excursions, oddly formed sentences, double entendres, and telling character names (such as in the play The Importance of Being Earnest, Ernest being a given name that sounds exactly like the adjective earnest).","label":"Word play","categories":["Comedy genres","Rhetoric","Word games","Word play"],"types":[]},{"start":27,"end":45,"spot":"Woodstock festival","confidence":0.9108,"id":33884,"title":"Woodstock","uri":"http://en.wikipedia.org/wiki/Woodstock","abstract":"Woodstock Music and Art Fair, commonly referred to as Woodstock, was a music festival held during August 15–18, 1969, on Max Yasgur's dairy farm in Bethel, New York, United States, southwest of the town of Woodstock. Billed as \"an Aquarian Exposition: 3 Days of Peace & Music\" and alternatively referred to as the Woodstock Rock Festival, it attracted more than 400,000 attendees. Thirty-two acts performed outdoors despite sporadic rain. It was one of the largest music festivals in history.","label":"Woodstock","categories":["1969 festivals","1969 in American music","1969 in New York (state)","1969 in music","1969 music festivals","August 1969 events in the United States","Catskills","Commemorative stamps","Concerts in the United States","Counterculture festivals","Counterculture of the 1960s","Free festivals","Hippie movement","Jam band festivals","Mass media franchises","Music festivals established in 1969","National Register of Historic Places in Sullivan County, New York","Riots and civil disorder in New York (state)","Rock festivals in the United States","Timeline of 1960s counterculture","Tourist attractions in Sullivan County, New York","Woodstock Festival"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:52:25.591"}
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 4
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 14
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Joe_Cocker
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 15
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 19
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Word_play
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 27
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 45
[2m2023-10-27 13:52:25.611[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Woodstock
[2m2023-10-27 13:52:25.617[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1
[2m2023-10-27 13:52:25.618[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2132d272
[2m2023-10-27 13:52:25.618[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:25.620[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Joe_Cocker" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.621[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Joe_Cocker" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.621[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Joe_Cocker" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.631[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@47f73568
[2m2023-10-27 13:52:25.631[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:25.633[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "15"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Word_play" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.633[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "15"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Word_play" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.633[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "15"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Word_play" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.639[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4281037c
[2m2023-10-27 13:52:25.641[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:25.644[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "46"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Woodstock" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.644[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "46"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Woodstock" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:619f4313-47d2-4cdf-a4e2-c6b97de0c7fb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_04d8a21e-f3a7-4db1-93ab-47d03ee149d1> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "46"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Woodstock" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:25.650[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 108 ms
[2m2023-10-27 13:52:29.513[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb","outGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb"}
[2m2023-10-27 13:52:29.514[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb","outGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb"}
[2m2023-10-27 13:52:29.514[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb"},"inGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb","outGraph":"urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb"}
[2m2023-10-27 13:52:29.514[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@694c14e2
[2m2023-10-27 13:52:29.527[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@784880a8
[2m2023-10-27 13:52:29.528[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:52:29.529[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:29.529[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:29.537[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_2a50f0b8-7640-4f89-ad2b-61d6b80426e2
[2m2023-10-27 13:52:29.537[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_2a50f0b8-7640-4f89-ad2b-61d6b80426e2 found in urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb at http://localhost:8080/sparql
[2m2023-10-27 13:52:29.539[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation When did Allen Ginsberg die? 
[2m2023-10-27 13:52:29.539[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question When did Allen Ginsberg die?
[2m2023-10-27 13:52:29.539[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=When+did+Allen+Ginsberg+die%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:29.539[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=When+did+Allen+Ginsberg+die%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:29.539[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:52:29.539[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1710231881
[2m2023-10-27 13:52:29.587[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@58efdeae
[2m2023-10-27 13:52:29.587[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:52:29.587[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:52:29.587[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=When+did+Allen+Ginsberg+die%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:29.588[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":9,"end":23,"spot":"Allen Ginsberg","confidence":0.8609,"id":37352,"title":"Allen Ginsberg","uri":"http://de.wikipedia.org/wiki/Allen_Ginsberg","abstract":"Irwin Allen Ginsberg (* 3. Juni 1926 in Paterson, New Jersey; † 5. April 1997 in New York) war ein US-amerikanischer Dichter der Beat Generation. Er gilt als Vater der Flower-Power-Bewegung.","label":"Allen Ginsberg","categories":["Autor","Beat Generation","Geboren 1926","Gestorben 1997","Homosexualität in der Literatur","LGBT-Aktivist (Vereinigte Staaten)","Literatur (20. Jahrhundert)","Literatur (Englisch)","Literatur (Vereinigte Staaten)","Lyrik","Mann","Mitglied der American Academy of Arts and Letters","Mitglied der American Academy of Arts and Sciences","Person (Hippiebewegung)","Person (New York)","Person des Anarchismus","Person des Vajrayana-Buddhismus","Person des tibetischen Buddhismus","Träger des National Book Award","US-Amerikaner"],"types":["http://dbpedia.org/ontology/WrittenWork","http://dbpedia.org/ontology/Work"]}],"lang":"de","langConfidence":0.6424,"timestamp":"2023-10-27T11:52:29.569"}
[2m2023-10-27 13:52:29.588[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 9
[2m2023-10-27 13:52:29.588[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 23
[2m2023-10-27 13:52:29.588[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Allen_Ginsberg
[2m2023-10-27 13:52:29.595[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_2a50f0b8-7640-4f89-ad2b-61d6b80426e2
[2m2023-10-27 13:52:29.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1144b
[2m2023-10-27 13:52:29.595[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:29.597[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2a50f0b8-7640-4f89-ad2b-61d6b80426e2> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Allen_Ginsberg" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:29.597[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2a50f0b8-7640-4f89-ad2b-61d6b80426e2> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Allen_Ginsberg" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:29.597[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:43d594f1-1d01-4af0-851c-f687f8d160bb> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2a50f0b8-7640-4f89-ad2b-61d6b80426e2> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Allen_Ginsberg" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:29.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 90 ms
[2m2023-10-27 13:52:33.601[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43","outGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43"}
[2m2023-10-27 13:52:33.601[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43","outGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43"}
[2m2023-10-27 13:52:33.601[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43"},"inGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43","outGraph":"urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43"}
[2m2023-10-27 13:52:33.601[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@7bd7ad0e
[2m2023-10-27 13:52:33.608[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@280684a8
[2m2023-10-27 13:52:33.609[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:52:33.610[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:33.610[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:52:33.616[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b
[2m2023-10-27 13:52:33.617[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b found in urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43 at http://localhost:8080/sparql
[2m2023-10-27 13:52:33.618[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What brand uses petroleum jelly? 
[2m2023-10-27 13:52:33.618[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question What brand uses petroleum jelly?
[2m2023-10-27 13:52:33.619[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+brand+uses+petroleum+jelly%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:33.619[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+brand+uses+petroleum+jelly%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:33.619[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:52:33.619[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1866798781
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@4237b4cc
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:52:33.699[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+brand+uses+petroleum+jelly%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":5,"end":10,"spot":"brand","confidence":0.7055,"id":18950900,"title":"Brand","uri":"http://en.wikipedia.org/wiki/Brand","abstract":"A brand is a name, term, design, symbol or any other feature that distinguishes one seller's good or service from those of other sellers. Brands are used in business, marketing, and advertising for recognition and, importantly, to create and store value as brand equity for the object identified, to the benefit of the brand's customers, its owners and shareholders. Brand names are sometimes distinguished from generic or store brands.","label":"Brand","categories":["Brand management","Branding terminology","Brands","Communication design","Graphic design","Intangible assets","Product management"],"types":[]},{"start":16,"end":31,"spot":"petroleum jelly","confidence":0.8928,"id":271860,"title":"Petroleum jelly","uri":"http://en.wikipedia.org/wiki/Petroleum_jelly","abstract":"Petroleum jelly, petrolatum, white petrolatum, soft paraffin, or multi-hydrocarbon, CAS number 8009-03-8, is a semi-solid mixture of hydrocarbons (with carbon numbers mainly higher than 25), originally promoted as a topical ointment for its healing properties. Vaseline has been a well-known American brand of petroleum jelly since 1870.","label":"Petroleum jelly","categories":["American inventions","Amorphous solids","Cosmetics chemicals","Dosage forms","Personal lubricants","Petroleum products"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:52:33.665"}
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 5
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 10
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Brand
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 16
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 31
[2m2023-10-27 13:52:33.699[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Petroleum_jelly
[2m2023-10-27 13:52:33.705[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b
[2m2023-10-27 13:52:33.705[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7fe05d2d
[2m2023-10-27 13:52:33.705[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:33.707[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "5"^^xsd:nonNegativeInteger .
    _:b1 oa:end "11"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Brand" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:33.707[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "5"^^xsd:nonNegativeInteger .
    _:b1 oa:end "11"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Brand" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:33.707[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "5"^^xsd:nonNegativeInteger .
    _:b1 oa:end "11"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Brand" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:33.714[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@39992002
[2m2023-10-27 13:52:33.715[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:52:33.716[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Petroleum_jelly" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:33.716[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Petroleum_jelly" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:33.716[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:09fb6f66-d368-40f6-88fc-7077bc4a0c43> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d04df65b-f42b-4906-8917-4bec7b66b02b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Petroleum_jelly" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:52:33.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 121 ms
[2m2023-10-27 13:53:35.695[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2","outGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2"}
[2m2023-10-27 13:53:35.695[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2","outGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2"}
[2m2023-10-27 13:53:35.695[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2"},"inGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2","outGraph":"urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2"}
[2m2023-10-27 13:53:35.695[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@ee6d92b
[2m2023-10-27 13:53:35.702[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@781912ae
[2m2023-10-27 13:53:35.702[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:53:35.703[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:53:35.703[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:53:35.714[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11
[2m2023-10-27 13:53:35.714[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11 found in urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2 at http://localhost:8080/sparql
[2m2023-10-27 13:53:35.716[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Which universities have more than 200000 students? 
[2m2023-10-27 13:53:35.716[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Which universities have more than 200000 students?
[2m2023-10-27 13:53:35.716[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+universities+have+more+than+200000+students%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:53:35.716[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Which+universities+have+more+than+200000+students%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:53:35.717[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:53:35.717[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-962009526
[2m2023-10-27 13:53:36.047[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@631d789b
[2m2023-10-27 13:53:36.047[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:53:36.047[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:53:36.047[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+universities+have+more+than+200000+students%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:53:36.047[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":0,"annotations":[{"start":6,"end":18,"spot":"universities","confidence":0.7669,"id":19725260,"title":"University","uri":"http://en.wikipedia.org/wiki/University","abstract":"A university is an institution of higher (or tertiary) education and research which awards academic degrees in several academic disciplines. Universities typically offer both undergraduate and postgraduate programs. In the United States, the designation is reserved for colleges that have a graduate school.","label":"University","categories":["Educational stages","Higher education","Types of university or college","Universities and colleges"],"types":[]},{"start":41,"end":49,"spot":"students","confidence":0.7604,"id":155526,"title":"Student","uri":"http://en.wikipedia.org/wiki/Student","abstract":"A student is a person enrolled in a school or other educational institution. In the United Kingdom and most commonwealth countries, a \"student\" attends a secondary school or higher (e.g., college or university); those in primary or elementary schools are \"pupils\".","label":"Student","categories":["Students"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:53:36.027"}
[2m2023-10-27 13:53:36.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 6
[2m2023-10-27 13:53:36.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 18
[2m2023-10-27 13:53:36.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/University
[2m2023-10-27 13:53:36.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 41
[2m2023-10-27 13:53:36.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 49
[2m2023-10-27 13:53:36.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Student
[2m2023-10-27 13:53:36.053[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11
[2m2023-10-27 13:53:36.053[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5b72c6ee
[2m2023-10-27 13:53:36.053[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:53:36.055[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "6"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/University" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:53:36.055[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "6"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/University" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:53:36.055[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "6"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/University" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:53:36.063[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1e1d3b8
[2m2023-10-27 13:53:36.063[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:53:36.065[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "41"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Student" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:53:36.065[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "41"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Student" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:53:36.065[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ebe2e010-199f-4d9b-89c6-20a67c105ca2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d23bfbf0-a419-4086-beff-fd6fd0fb4e11> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "41"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Student" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:53:36.071[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 376 ms
[2m2023-10-27 13:54:10.881[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"}
[2m2023-10-27 13:54:10.881[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"}
[2m2023-10-27 13:54:10.881[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"},"inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"}
[2m2023-10-27 13:54:10.881[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@96e9ebc
[2m2023-10-27 13:54:10.888[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3e786ca1
[2m2023-10-27 13:54:10.889[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:54:10.889[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:10.890[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:10.898[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236
[2m2023-10-27 13:54:10.898[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236 found in urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6 at http://localhost:8080/sparql
[2m2023-10-27 13:54:10.900[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Did Kobe Bryant leave the Lakers when LeBron James joined that team? 
[2m2023-10-27 13:54:10.900[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Did Kobe Bryant leave the Lakers when LeBron James joined that team?
[2m2023-10-27 13:54:10.900[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Did+Kobe+Bryant+leave+the+Lakers+when+LeBron+James+joined+that+team%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:54:10.900[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Did+Kobe+Bryant+leave+the+Lakers+when+LeBron+James+joined+that+team%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:54:10.900[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:54:10.900[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=321342393
[2m2023-10-27 13:54:11.035[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@776cd774
[2m2023-10-27 13:54:11.036[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:54:11.036[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:54:11.036[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Did+Kobe+Bryant+leave+the+Lakers+when+LeBron+James+joined+that+team%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:54:11.037[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":4,"end":15,"spot":"Kobe Bryant","confidence":0.9576,"id":246185,"title":"Kobe Bryant","uri":"http://en.wikipedia.org/wiki/Kobe_Bryant","abstract":"Kobe Bean Bryant (August 23, 1978 – January 26, 2020) was an American professional basketball player. A shooting guard, he spent his entire 20-year career with the Los Angeles Lakers in the National Basketball Association (NBA). Widely regarded as one of the greatest basketball players of all time, Bryant won five NBA championships, was an 18-time All-Star, a 15-time member of the All-NBA Team, a 12-time member of the All-Defensive Team, the 2008 NBA Most Valuable Player (MVP), and a two-time NBA Finals MVP. Bryant also led the NBA in scoring twice, and ranks fourth in league all-time regular season and postseason scoring. He was posthumously voted into the Naismith Memorial Basketball Hall of Fame in 2020 and named to the NBA 75th Anniversary Team in 2021.","label":"Kobe Bryant","categories":["1978 births","2020 deaths","Accidental deaths in California","African-American Catholics","African-American basketball players","American expatriate basketball people in Italy","American men's basketball players","American men podcasters","American philanthropists","American podcasters","Basketball players at the 2008 Summer Olympics","Basketball players at the 2012 Summer Olympics","Basketball players from Los Angeles","Basketball players from Philadelphia","Burials at Pacific View Memorial Park","Catholics from California","Catholics from Pennsylvania","Charlotte Hornets draft picks","Deaths from fire in the United States","Kobe Bryant","Los Angeles Lakers players","Lower Merion High School alumni","McDonald's High School All-Americans","Medalists at the 2008 Summer Olympics","Medalists at the 2012 Summer Olympics","Naismith Memorial Basketball Hall of Fame inductees","National Basketball Association All-Stars","National Basketball Association high school draftees","National Basketball Association players with retired numbers","Olympic gold medalists for the United States in basketball","Parade High School All-Americans (boys' basketball)","Philanthropists from California","Philanthropists from Pennsylvania","Producers who won the Best Animated Short Academy Award","Shooting guards","Sportspeople from Newport Beach, California","United States men's national basketball team players","Victims of aviation accidents or incidents in 2020","Victims of helicopter accidents or incidents in the United States"],"types":[]},{"start":26,"end":32,"spot":"Lakers","confidence":0.7934,"id":72893,"title":"Los Angeles Lakers","uri":"http://en.wikipedia.org/wiki/Los_Angeles_Lakers","abstract":"The Los Angeles Lakers are an American professional basketball team based in Los Angeles. The Lakers compete in the National Basketball Association (NBA) as a member of the league's Western Conference Pacific Division. The Lakers play their home games at Crypto.com Arena, an arena shared with the NBA's Los Angeles Clippers, the Los Angeles Sparks of the Women's National Basketball Association, and the Los Angeles Kings of the National Hockey League. The Lakers are one of the most successful teams in the history of the NBA, and have won 17 NBA championships, tied with the Boston Celtics for the most in NBA history.","label":"Los Angeles Lakers","categories":["1947 establishments in Minnesota","1960 establishments in California","Basketball teams established in 1947","Basketball teams in Los Angeles","Los Angeles Lakers","National Basketball Association teams","Relocated National Basketball Association teams"],"types":["http://dbpedia.org/ontology/BasketballTeam","http://dbpedia.org/ontology/SportsTeam","http://dbpedia.org/ontology/Organisation","http://dbpedia.org/ontology/Agent"]},{"start":38,"end":50,"spot":"LeBron James","confidence":0.9553,"id":240940,"title":"LeBron James","uri":"http://en.wikipedia.org/wiki/LeBron_James","abstract":"LeBron Raymone James Sr. (born December 30, 1984), also known as Bron for short, is an American professional basketball player for the Los Angeles Lakers of the National Basketball Association (NBA). Nicknamed \"King James\", he is widely regarded as one of the greatest players in the history of the sport and is often compared to Michael Jordan in debates over the greatest basketball player of all time. James is the all-time leading scorer in NBA history and ranks fourth in career assists. He has won four NBA championships (two with the Miami Heat, one each with the Lakers and Cleveland Cavaliers), and has competed in 10 NBA Finals, including eight consecutive Finals appearances from 2011 to 2018. He has also won four Most Valuable Player (MVP) Awards, four Finals MVP Awards, and two Olympic gold medals, and has been named an All-Star 19 times, selected to the All-NBA Team 19 times (including 13 First Team selections) and the All-Defensive Team six times, and was a runner-up for the NBA Defensive Player of the Year Award twice in his career.","label":"LeBron James","categories":["1984 births","2006 FIBA World Championship players","21st-century American male actors","African-American basketball players","African-American billionaires","African-American businesspeople","African-American film producers","African-American investors","African-American male actors","African-American television producers","Amateur Athletic Union men's basketball players","American film producers","American investors","American male film actors","American male television actors","American male voice actors","American men's basketball players","American philanthropists","American soccer chairmen and investors","Basketball players at the 2004 Summer Olympics","Basketball players at the 2008 Summer Olympics","Basketball players at the 2012 Summer Olympics","Basketball players from Akron, Ohio","Basketball players from Los Angeles","Businesspeople from Akron, Ohio","Businesspeople from Los Angeles","California Democrats","Cleveland Cavaliers draft picks","Cleveland Cavaliers players","Fenway Sports Group people","Film producers from California","Film producers from Ohio","Illeists","LeBron James","Liverpool F.C. chairmen and investors","Living people","Los Angeles Lakers players","Male actors from Akron, Ohio","Male actors from California","Male actors from Los Angeles","McDonald's High School All-Americans","Medalists at the 2004 Summer Olympics","Medalists at the 2008 Summer Olympics","Medalists at the 2012 Summer Olympics","Miami Heat players","National Basketball Association All-Stars","National Basketball Association high school draftees","Olympic bronze medalists for the United States in basketball","Olympic gold medalists for the United States in basketball","Parade High School All-Americans (boys' basketball)","People from Brentwood, Los Angeles","Power forwards (basketball)","Small forwards","St. Vincent–St. Mary High School alumni","Television producers from Ohio","United States men's national basketball team players"],"types":["http://dbpedia.org/ontology/BasketballPlayer","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Athlete","http://dbpedia.org/ontology/Animal"]},{"start":63,"end":67,"spot":"team","confidence":0.6687,"id":988407,"title":"Team sport","uri":"http://en.wikipedia.org/wiki/Team_sport","abstract":"A team sport includes any sport where individuals are organized into opposing teams which compete to win or cooperate to entertain their audience. Team members act together towards a shared objective. This can be done in a number of ways such as outscoring the opposing team. Team members set goals, make decisions, communicate, manage conflict, and solve problems in a supportive, trusting atmosphere in order to accomplish their objectives. Examples are basketball, volleyball, rugby, water polo, handball, lacrosse, cricket, baseball, and the various forms of football, and hockey. Team sports require internal coordination between members of the team in order to achieve success.","label":"Team sport","categories":["Sports terminology","Team activities","Team sports"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:54:11.015"}
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 4
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 15
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Kobe_Bryant
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 26
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 32
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Los_Angeles_Lakers
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 38
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 50
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/LeBron_James
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 63
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 67
[2m2023-10-27 13:54:11.038[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Team_sport
[2m2023-10-27 13:54:11.046[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236
[2m2023-10-27 13:54:11.046[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@a8ca05c
[2m2023-10-27 13:54:11.046[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:54:11.048[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Kobe_Bryant" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.048[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Kobe_Bryant" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.048[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "16"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Kobe_Bryant" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.054[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1857a2a4
[2m2023-10-27 13:54:11.054[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:54:11.056[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "26"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Los_Angeles_Lakers" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.056[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "26"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Los_Angeles_Lakers" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.056[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "26"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Los_Angeles_Lakers" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.064[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@43993fc2
[2m2023-10-27 13:54:11.064[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:54:11.065[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/LeBron_James" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.066[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/LeBron_James" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.066[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/LeBron_James" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.072[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@525f97b2
[2m2023-10-27 13:54:11.072[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:54:11.074[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "63"^^xsd:nonNegativeInteger .
    _:b1 oa:end "68"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Team_sport" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.074[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "63"^^xsd:nonNegativeInteger .
    _:b1 oa:end "68"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Team_sport" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.074[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "63"^^xsd:nonNegativeInteger .
    _:b1 oa:end "68"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Team_sport" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:11.081[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 200 ms
[2m2023-10-27 13:54:32.607[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4","outGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4"}
[2m2023-10-27 13:54:32.608[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4","outGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4"}
[2m2023-10-27 13:54:32.608[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4"},"inGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4","outGraph":"urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4"}
[2m2023-10-27 13:54:32.608[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@2526c05d
[2m2023-10-27 13:54:32.617[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5a4891e1
[2m2023-10-27 13:54:32.617[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:54:32.618[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:32.618[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:32.624[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_2a87f61f-e2e7-458d-9d57-7a8592fefb3c
[2m2023-10-27 13:54:32.624[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_2a87f61f-e2e7-458d-9d57-7a8592fefb3c found in urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4 at http://localhost:8080/sparql
[2m2023-10-27 13:54:32.628[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Does Bremerhaven's local dialing code start with 4? 
[2m2023-10-27 13:54:32.628[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Does Bremerhaven's local dialing code start with 4?
[2m2023-10-27 13:54:32.628[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Does+Bremerhaven%27s+local+dialing+code+start+with+4%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:54:32.628[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Does+Bremerhaven%27s+local+dialing+code+start+with+4%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:54:32.628[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:54:32.629[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1199248673
[2m2023-10-27 13:54:32.756[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@57d51b75
[2m2023-10-27 13:54:32.756[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:54:32.756[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:54:32.756[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Does+Bremerhaven%27s+local+dialing+code+start+with+4%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:54:32.756[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":5,"end":16,"spot":"Bremerhaven","confidence":0.8733,"id":18933240,"title":"Bremerhaven","uri":"http://en.wikipedia.org/wiki/Bremerhaven","abstract":"Bremerhaven is a city at the seaport of the Free Hanseatic City of Bremen, a state of the Federal Republic of Germany.","label":"Bremerhaven","categories":["1827 establishments in Bremen","Bremerhaven","Enclaves and exclaves","Populated coastal places in Germany (North Sea)","Port cities and towns in Germany","Port cities and towns of the North Sea"],"types":["http://dbpedia.org/ontology/City","http://dbpedia.org/ontology/Settlement","http://dbpedia.org/ontology/PopulatedPlace","http://dbpedia.org/ontology/Place","http://dbpedia.org/ontology/Location"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:54:32.736"}
[2m2023-10-27 13:54:32.756[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 5
[2m2023-10-27 13:54:32.757[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 16
[2m2023-10-27 13:54:32.757[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Bremerhaven
[2m2023-10-27 13:54:32.764[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_2a87f61f-e2e7-458d-9d57-7a8592fefb3c
[2m2023-10-27 13:54:32.764[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@44621dfa
[2m2023-10-27 13:54:32.764[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:54:32.766[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2a87f61f-e2e7-458d-9d57-7a8592fefb3c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "5"^^xsd:nonNegativeInteger .
    _:b1 oa:end "17"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Bremerhaven" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:32.766[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2a87f61f-e2e7-458d-9d57-7a8592fefb3c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "5"^^xsd:nonNegativeInteger .
    _:b1 oa:end "17"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Bremerhaven" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:32.766[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632770ed-12ff-49e8-ac69-52c11899f5c4> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2a87f61f-e2e7-458d-9d57-7a8592fefb3c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "5"^^xsd:nonNegativeInteger .
    _:b1 oa:end "17"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Bremerhaven" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:32.772[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 164 ms
[2m2023-10-27 13:57:36.290[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b","outGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b"}
[2m2023-10-27 13:57:36.291[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b","outGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b"}
[2m2023-10-27 13:57:36.292[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b"},"inGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b","outGraph":"urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b"}
[2m2023-10-27 13:57:36.292[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@6c722b81
[2m2023-10-27 13:57:36.336[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@62b5d87f
[2m2023-10-27 13:57:36.342[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:57:36.358[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:36.359[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:36.373[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_7dbf1239-13c3-4e64-b519-7d035728e915
[2m2023-10-27 13:57:36.373[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_7dbf1239-13c3-4e64-b519-7d035728e915 found in urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b at http://localhost:8080/sparql
[2m2023-10-27 13:57:36.392[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many people died due to the Great Leap Forward according to the highest estimate? 
[2m2023-10-27 13:57:36.392[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question How many people died due to the Great Leap Forward according to the highest estimate?
[2m2023-10-27 13:57:36.394[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+people+died+due+to+the+Great+Leap+Forward+according+to+the+highest+estimate%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:57:36.396[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+people+died+due+to+the+Great+Leap+Forward+according+to+the+highest+estimate%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:57:36.396[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:57:36.401[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1346854899
[2m2023-10-27 13:57:36.555[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@2388d244
[2m2023-10-27 13:57:36.556[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:57:36.556[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:57:36.556[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+people+died+due+to+the+Great+Leap+Forward+according+to+the+highest+estimate%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:57:36.556[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":32,"end":50,"spot":"Great Leap Forward","confidence":0.8609,"id":71262,"title":"Great Leap Forward","uri":"http://en.wikipedia.org/wiki/Great_Leap_Forward","abstract":"The Great Leap Forward of the People's Republic of China (PRC) was an economic and social campaign led by the Chinese Communist Party (CCP) from 1958 to 1962. CCP Chairman Mao Zedong launched the campaign to reconstruct the country from an agrarian economy into an industrialized society through the formation of people's communes. Mao decreed that efforts to multiply grain yields and bring industry to the countryside should be increased. Local officials were fearful of Anti-Rightist Campaigns and they competed to fulfill or over-fulfill quotas which were based on Mao's exaggerated claims, collecting non-existent \"surpluses\" and leaving farmers to starve to death. Higher officials did not dare to report the economic disaster which was being caused by these policies, and national officials, blaming bad weather for the decline in food output, took little or no action. Millions of people died in China during the Great Leap, with estimates ranging from 15 to 55 million, making the Great Chinese Famine the largest or second-largest famine in human history.","label":"Great Leap Forward","categories":["1950s in China","1950s neologisms","1958 in China","1959 in China","1960 in China","1960s in China","Campaigns of the Chinese Communist Party","Cold War history of China","Crimes against humanity","Economic collapses","Economic history of the People's Republic of China","Famines in China","Great Leap Forward","Incidents of cannibalism","Industrial history of China","Man-made disasters in China","Maoist terminology","Political controversies in China","Politicides"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:57:36.538"}
[2m2023-10-27 13:57:36.556[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 32
[2m2023-10-27 13:57:36.556[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 50
[2m2023-10-27 13:57:36.556[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Great_Leap_Forward
[2m2023-10-27 13:57:36.570[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_7dbf1239-13c3-4e64-b519-7d035728e915
[2m2023-10-27 13:57:36.571[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5e5bcb97
[2m2023-10-27 13:57:36.571[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:57:36.575[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_7dbf1239-13c3-4e64-b519-7d035728e915> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "32"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Great_Leap_Forward" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:36.576[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_7dbf1239-13c3-4e64-b519-7d035728e915> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "32"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Great_Leap_Forward" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:36.576[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:56a55ca9-16ad-4b7a-bde3-8b440c5fed8b> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_7dbf1239-13c3-4e64-b519-7d035728e915> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "32"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Great_Leap_Forward" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:36.598[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-4][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 307 ms
[2m2023-10-27 13:57:59.694[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9","outGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9"}
[2m2023-10-27 13:57:59.694[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9","outGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9"}
[2m2023-10-27 13:57:59.695[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9"},"inGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9","outGraph":"urn:graph:812639f4-ccf5-4456-8867-8046e13770c9"}
[2m2023-10-27 13:57:59.695[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@9329c7f
[2m2023-10-27 13:57:59.710[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6382c1aa
[2m2023-10-27 13:57:59.710[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:57:59.712[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:59.713[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:59.720[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61
[2m2023-10-27 13:57:59.720[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61 found in urn:graph:812639f4-ccf5-4456-8867-8046e13770c9 at http://localhost:8080/sparql
[2m2023-10-27 13:57:59.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation among the characters in the witcher, who has two unmarried partners, Yennefer of Vengerberg and Triss Merigold? 
[2m2023-10-27 13:57:59.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question among the characters in the witcher, who has two unmarried partners, Yennefer of Vengerberg and Triss Merigold?
[2m2023-10-27 13:57:59.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=among+the+characters+in+the+witcher%2C+who+has+two+unmarried+partners%2C+Yennefer+of+Vengerberg+and+Triss+Merigold%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:57:59.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=among+the+characters+in+the+witcher%2C+who+has+two+unmarried+partners%2C+Yennefer+of+Vengerberg+and+Triss+Merigold%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:57:59.722[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:57:59.723[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1780760583
[2m2023-10-27 13:57:59.854[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@ffa7610
[2m2023-10-27 13:57:59.854[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:57:59.854[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:57:59.854[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=among+the+characters+in+the+witcher%2C+who+has+two+unmarried+partners%2C+Yennefer+of+Vengerberg+and+Triss+Merigold%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":3,"annotations":[{"start":24,"end":35,"spot":"the witcher","confidence":0.8785,"id":33912861,"title":"The Witcher","uri":"http://en.wikipedia.org/wiki/The_Witcher","abstract":"The Witcher is a series of six fantasy novels and 15 short stories written by Polish author Andrzej Sapkowski. The series revolves around the eponymous \"witcher\", Geralt of Rivia. In Sapkowski's works, \"witchers\" are beast hunters who are given supernatural abilities at a young age to battle wild beasts and monsters. The Witcher began with a titular 1986 short story that Sapkowski entered into a competition held by Fantastyka magazine, marking his debut as an author. Due to reader demand, Sapkowski wrote 14 more stories before starting a series of novels in 1994. Known as The Witcher Saga, he wrote one book a year until the fifth and final installment in 1999. A standalone prequel novel, Season of Storms, was published in 2013.","label":"The Witcher","categories":["Book series introduced in 1986","Family saga novels","Novels adapted into comics","Novels adapted into video games","Polish fantasy","Polish novels","Polish novels adapted into films","Polish novels adapted into television shows","Polish short stories","Slavic mythology in popular culture","The Witcher"],"types":[]},{"start":69,"end":77,"spot":"Yennefer","confidence":0.7768,"id":64246707,"title":"Yennifer Toledo","uri":"http://en.wikipedia.org/wiki/Yennifer_Toledo","abstract":"Yennifer Amanda Toledo Abreu (born 1 October 2000) is a Cuban handball player for Villa Clara and the Cuban national team.","label":"Yennifer Toledo","categories":["2000 births","21st-century Cuban women","Central American and Caribbean Games bronze medalists for Cuba","Central American and Caribbean Games medalists in handball","Competitors at the 2018 Central American and Caribbean Games","Cuban female handball players","Handball players at the 2019 Pan American Games","Living people","Medalists at the 2019 Pan American Games","Pan American Games bronze medalists for Cuba","Pan American Games medalists in handball"],"types":["http://dbpedia.org/ontology/HandballPlayer","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Athlete","http://dbpedia.org/ontology/Animal"]},{"start":96,"end":101,"spot":"Triss","confidence":0.8054,"id":61317,"title":"Shannara","uri":"http://en.wikipedia.org/wiki/Shannara","abstract":"Shannara is a series of high fantasy novels written by Terry Brooks, beginning with The Sword of Shannara in 1977 and concluding with The Last Druid which was released in October 2020; there is also a prequel, First King of Shannara. The series blends magic and primitive technology and is set in the Four Lands, which are identified as Earth long after civilization was destroyed in a chemical and nuclear holocaust called the Great Wars. By the time of the prequel First King of Shannara, the world had reverted to a pre-industrial state and magic had re-emerged to supplement science.","label":"Shannara","categories":["American novels adapted into television shows","Book series introduced in 1977","High fantasy novels","Novels adapted into video games","Shannara"],"types":[]},{"start":102,"end":110,"spot":"Merigold","confidence":0.7486,"id":122224,"title":"Merigold, Mississippi","uri":"http://en.wikipedia.org/wiki/Merigold%2C_Mississippi","abstract":"Merigold (sometimes misspelled as Marigold or Merrigold) is a town in Bolivar County, Mississippi, United States. Per the 2020 census, the population was 379.","label":"Merigold","categories":["Mississippi Blues Trail","Towns in Bolivar County, Mississippi","Towns in Mississippi"],"types":["http://dbpedia.org/ontology/Town","http://dbpedia.org/ontology/Settlement","http://dbpedia.org/ontology/PopulatedPlace","http://dbpedia.org/ontology/Place","http://dbpedia.org/ontology/Location"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:57:59.833"}
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 24
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 35
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/The_Witcher
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 69
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 77
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Yennifer_Toledo
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 96
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 101
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Shannara
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 102
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 110
[2m2023-10-27 13:57:59.855[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Merigold%2C_Mississippi
[2m2023-10-27 13:57:59.861[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61
[2m2023-10-27 13:57:59.861[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1236d2f4
[2m2023-10-27 13:57:59.862[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:57:59.863[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "36"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/The_Witcher" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.864[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "36"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/The_Witcher" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "36"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/The_Witcher" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.870[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@67ccde89
[2m2023-10-27 13:57:59.870[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:57:59.872[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "69"^^xsd:nonNegativeInteger .
    _:b1 oa:end "78"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Yennifer_Toledo" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.872[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "69"^^xsd:nonNegativeInteger .
    _:b1 oa:end "78"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Yennifer_Toledo" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.872[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "69"^^xsd:nonNegativeInteger .
    _:b1 oa:end "78"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Yennifer_Toledo" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.881[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5e6c168b
[2m2023-10-27 13:57:59.881[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:57:59.882[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "96"^^xsd:nonNegativeInteger .
    _:b1 oa:end "102"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Shannara" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.883[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "96"^^xsd:nonNegativeInteger .
    _:b1 oa:end "102"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Shannara" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.883[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "96"^^xsd:nonNegativeInteger .
    _:b1 oa:end "102"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Shannara" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.890[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@27ab1a0
[2m2023-10-27 13:57:59.890[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:57:59.892[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "102"^^xsd:nonNegativeInteger .
    _:b1 oa:end "111"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Merigold%2C_Mississippi" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.892[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "102"^^xsd:nonNegativeInteger .
    _:b1 oa:end "111"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Merigold%2C_Mississippi" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.892[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:812639f4-ccf5-4456-8867-8046e13770c9> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_58738599-b40a-4333-a9d2-e2e9bf221d61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "102"^^xsd:nonNegativeInteger .
    _:b1 oa:end "111"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Merigold%2C_Mississippi" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:59.900[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 206 ms
[2m2023-10-27 13:58:43.865[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f","outGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f"}
[2m2023-10-27 13:58:43.865[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f","outGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f"}
[2m2023-10-27 13:58:43.865[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f"},"inGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f","outGraph":"urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f"}
[2m2023-10-27 13:58:43.865[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@2c2e5b1f
[2m2023-10-27 13:58:43.892[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2af962b0
[2m2023-10-27 13:58:43.892[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:58:43.893[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:58:43.893[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:58:43.902[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089
[2m2023-10-27 13:58:43.902[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089 found in urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f at http://localhost:8080/sparql
[2m2023-10-27 13:58:43.903[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Which actor starring in Free Guy also starred in Deadpool? 
[2m2023-10-27 13:58:43.903[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Which actor starring in Free Guy also starred in Deadpool?
[2m2023-10-27 13:58:43.903[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+actor+starring+in+Free+Guy+also+starred+in+Deadpool%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:58:43.903[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Which+actor+starring+in+Free+Guy+also+starred+in+Deadpool%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:58:43.904[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:58:43.904[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-612690955
[2m2023-10-27 13:58:44.087[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3979fc7b
[2m2023-10-27 13:58:44.087[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:58:44.088[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+actor+starring+in+Free+Guy+also+starred+in+Deadpool%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":24,"end":32,"spot":"Free Guy","confidence":0.9181,"id":60203476,"title":"Free Guy","uri":"http://en.wikipedia.org/wiki/Free_Guy","abstract":"Free Guy is a 2021 American action comedy film directed and produced by Shawn Levy from a screenplay by Matt Lieberman and Zak Penn, and a story by Lieberman. The film stars Ryan Reynolds, Jodie Comer, Lil Rel Howery, Utkarsh Ambudkar, Joe Keery, and Taika Waititi. It tells the story of a bank teller who discovers that he is a non-player character in a massively multiplayer online game who then partners with a player to find evidence that a gaming company's CEO stole the player's game's source code.","label":"Free Guy","categories":["2020s American films","2020s English-language films","2020s science fiction comedy films","2021 action comedy films","2021 films","2021 science fiction action films","20th Century Studios films","21 Laps Entertainment films","4DX films","American action comedy films","American science fiction action films","American science fiction comedy films","Films about video games","Films about virtual reality","Films directed by Shawn Levy","Films postponed due to the COVID-19 pandemic","Films produced by Greg Berlanti","Films produced by Ryan Reynolds","Films scored by Christophe Beck","Films set in the future","Films shot in Boston","Films shot in Massachusetts","IMAX films","Self-reflexive films","TSG Entertainment films","Works set in computers"],"types":["http://dbpedia.org/ontology/Film","http://dbpedia.org/ontology/Work"]},{"start":49,"end":57,"spot":"Deadpool","confidence":0.9265,"id":43867095,"title":"Deadpool (film)","uri":"http://en.wikipedia.org/wiki/Deadpool_%28film%29","abstract":"Deadpool is a 2016 American superhero film based on the Marvel Comics character of the same name. Distributed by 20th Century Fox, it is a spin-off in the X-Men film series and the eighth installment overall. Directed by Tim Miller (in his feature directorial debut) and written by Rhett Reese and Paul Wernick, it stars Ryan Reynolds in the title role alongside Morena Baccarin, Ed Skrein, T. J. Miller, Gina Carano, and Brianna Hildebrand. In the film, Wade Wilson hunts the man who gave him mutant abilities and a scarred physical appearance, becoming the antihero Deadpool.","label":"Deadpool","categories":["2010s American films","2010s English-language films","2010s superhero comedy films","2016 action comedy films","2016 black comedy films","2016 directorial debut films","2016 films","20th Century Fox films","American action comedy films","American black comedy films","American films about revenge","American superhero films","American vigilante films","Deadpool (film series)","Film spin-offs","Films directed by Tim Miller","Films produced by Lauren Shuler Donner","Films produced by Ryan Reynolds","Films produced by Simon Kinberg","Films scored by Junkie XL","Films set in Westchester County, New York","Films shot in Vancouver","Films using motion capture","Films with screenplays by Paul Wernick","Films with screenplays by Rhett Reese","Human experimentation in fiction","IMAX films","Live-action films based on Marvel Comics","Metafictional works","Self-reflexive films","Superhero black comedy films","TSG Entertainment films","X-Men (film series)"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:58:44.066"}
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 24
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 32
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Free_Guy
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 49
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 57
[2m2023-10-27 13:58:44.088[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Deadpool_%28film%29
[2m2023-10-27 13:58:44.093[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089
[2m2023-10-27 13:58:44.093[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1ed919e
[2m2023-10-27 13:58:44.093[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:58:44.095[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Free_Guy" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:44.096[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Free_Guy" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:44.096[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Free_Guy" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:44.103[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4894d42f
[2m2023-10-27 13:58:44.103[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:58:44.104[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "49"^^xsd:nonNegativeInteger .
    _:b1 oa:end "58"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Deadpool_%28film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:44.105[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "49"^^xsd:nonNegativeInteger .
    _:b1 oa:end "58"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Deadpool_%28film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:44.105[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ec44e0d9-ed20-43f0-b203-9e066b87411f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1d38dc87-3f4b-4869-9539-c582e471a089> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "49"^^xsd:nonNegativeInteger .
    _:b1 oa:end "58"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Deadpool_%28film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:44.111[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 246 ms
[2m2023-10-27 13:58:58.177[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6","outGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6"}
[2m2023-10-27 13:58:58.178[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6","outGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6"}
[2m2023-10-27 13:58:58.178[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6"},"inGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6","outGraph":"urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6"}
[2m2023-10-27 13:58:58.178[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@963ebad
[2m2023-10-27 13:58:58.187[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@351267e9
[2m2023-10-27 13:58:58.188[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:58:58.189[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:58:58.189[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:58:58.196[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090
[2m2023-10-27 13:58:58.196[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090 found in urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6 at http://localhost:8080/sparql
[2m2023-10-27 13:58:58.199[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What notes does a C major chord consist of? 
[2m2023-10-27 13:58:58.199[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question What notes does a C major chord consist of?
[2m2023-10-27 13:58:58.199[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+notes+does+a+C+major+chord+consist+of%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:58:58.199[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+notes+does+a+C+major+chord+consist+of%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:58:58.199[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:58:58.199[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-709828756
[2m2023-10-27 13:58:58.320[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@1b053829
[2m2023-10-27 13:58:58.320[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:58:58.321[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+notes+does+a+C+major+chord+consist+of%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":18,"end":25,"spot":"C major","confidence":0.7995,"id":421402,"title":"C major","uri":"http://en.wikipedia.org/wiki/C_major","abstract":"C major (or the key of C) is a major scale based on C, consisting of the pitches C, D, E, F, G, A, and B. C major is one of the most common keys used in music. Its key signature has no flats or sharps. Its relative minor is A minor and its parallel minor is C minor.","label":"C major","categories":["Compositions in C major","Major scales","Musical keys"],"types":[]},{"start":20,"end":31,"spot":"major chord","confidence":0.7794,"id":417032,"title":"Major chord","uri":"http://en.wikipedia.org/wiki/Major_chord","abstract":"In music theory, a major chord is a chord that has a root, a major third, and a perfect fifth. When a chord comprises only these three notes, it is called a major triad. For example, the major triad built on C, called a C major triad, has pitches C–E–G:","label":"Major chord","categories":["Chords"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:58:58.301"}
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 18
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 25
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/C_major
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 20
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 31
[2m2023-10-27 13:58:58.321[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Major_chord
[2m2023-10-27 13:58:58.327[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090
[2m2023-10-27 13:58:58.327[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@d2d9667
[2m2023-10-27 13:58:58.327[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:58:58.332[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "18"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/C_major" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:58.332[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "18"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/C_major" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:58.332[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "18"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/C_major" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:58.339[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2ba68504
[2m2023-10-27 13:58:58.340[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:58:58.342[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "20"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Major_chord" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:58.342[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "20"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Major_chord" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:58.342[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:632dfce3-e440-4e18-9e41-72d87f951eb6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4dd80ea2-7e69-4620-8cd4-b33d479c5090> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "20"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Major_chord" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:58.350[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 173 ms
[2m2023-10-27 13:59:03.901[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49","outGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49"}
[2m2023-10-27 13:59:03.901[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49","outGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49"}
[2m2023-10-27 13:59:03.903[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49"},"inGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49","outGraph":"urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49"}
[2m2023-10-27 13:59:03.903[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@5abb5b0e
[2m2023-10-27 13:59:03.950[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1870efcf
[2m2023-10-27 13:59:03.951[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:59:03.957[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:59:03.957[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:59:03.975[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f
[2m2023-10-27 13:59:03.975[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f found in urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49 at http://localhost:8080/sparql
[2m2023-10-27 13:59:03.979[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation in which language does the united stated have the shortest short name? 
[2m2023-10-27 13:59:03.979[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question in which language does the united stated have the shortest short name?
[2m2023-10-27 13:59:03.979[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=in+which+language+does+the+united+stated+have+the+shortest+short+name%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:59:03.979[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=in+which+language+does+the+united+stated+have+the+shortest+short+name%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:59:03.980[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:59:03.981[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-687015730
[2m2023-10-27 13:59:04.177[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@33d80dc0
[2m2023-10-27 13:59:04.177[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:59:04.178[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 13:59:04.179[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=in+which+language+does+the+united+stated+have+the+shortest+short+name%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 13:59:04.179[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":9,"end":17,"spot":"language","confidence":0.671,"id":6880370,"title":"Philosophy of language","uri":"http://en.wikipedia.org/wiki/Philosophy_of_language","abstract":"In analytic philosophy, philosophy of language investigates the nature of language and the relations between language, language users, and the world. Investigations may include inquiry into the nature of meaning, intentionality, reference, the constitution of sentences, concepts, learning, and thought.","label":"Philosophy of language","categories":["Analytic philosophy","Meaning (philosophy of language)","Philosophy of language","Semantics","Semiotics"],"types":[]},{"start":59,"end":69,"spot":"short name","confidence":0.6764,"id":53430,"title":"Nickname","uri":"http://en.wikipedia.org/wiki/Nickname","abstract":"A nickname or short name is a substitute for the proper name of a person, place or thing. It is commonly used to express affection, amusement, a character trait or defamation of character. It is distinct from a pseudonym, stage name or title, although the concepts can overlap. Also known as sobriquet, it is typically informal.","label":"Nickname","categories":["Nicknames"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T11:59:04.093"}
[2m2023-10-27 13:59:04.180[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 9
[2m2023-10-27 13:59:04.180[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 17
[2m2023-10-27 13:59:04.180[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Philosophy_of_language
[2m2023-10-27 13:59:04.180[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 59
[2m2023-10-27 13:59:04.180[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 69
[2m2023-10-27 13:59:04.180[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Nickname
[2m2023-10-27 13:59:04.190[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f
[2m2023-10-27 13:59:04.190[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@33bb539e
[2m2023-10-27 13:59:04.190[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:59:04.193[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "18"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Philosophy_of_language" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:59:04.194[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "18"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Philosophy_of_language" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:59:04.194[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "9"^^xsd:nonNegativeInteger .
    _:b1 oa:end "18"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Philosophy_of_language" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:59:04.206[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2caadcb1
[2m2023-10-27 13:59:04.206[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 13:59:04.208[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "59"^^xsd:nonNegativeInteger .
    _:b1 oa:end "70"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nickname" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:59:04.209[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "59"^^xsd:nonNegativeInteger .
    _:b1 oa:end "70"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nickname" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:59:04.209[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:f574c457-590d-48da-a1be-5cd3f0c72a49> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b204a306-bebe-45d5-966a-1eb915dac91f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "59"^^xsd:nonNegativeInteger .
    _:b1 oa:end "70"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Nickname" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:59:04.220[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 319 ms
[2m2023-10-27 14:00:07.442[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6","outGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6"}
[2m2023-10-27 14:00:07.442[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6","outGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6"}
[2m2023-10-27 14:00:07.443[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6"},"inGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6","outGraph":"urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6"}
[2m2023-10-27 14:00:07.443[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@5e7e97a3
[2m2023-10-27 14:00:07.474[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@562fe557
[2m2023-10-27 14:00:07.474[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:00:07.475[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:07.475[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:07.485[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_551f8cd6-c0de-45f0-8fe7-acb5bc58a521
[2m2023-10-27 14:00:07.486[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_551f8cd6-c0de-45f0-8fe7-acb5bc58a521 found in urn:graph:c11cf415-20ff-462e-ac4f-79fe04072bd6 at http://localhost:8080/sparql
[2m2023-10-27 14:00:07.487[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Which egyptian pyramid is the tallest? 
[2m2023-10-27 14:00:07.488[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Which egyptian pyramid is the tallest?
[2m2023-10-27 14:00:07.488[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+egyptian+pyramid+is+the+tallest%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:00:07.488[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Which+egyptian+pyramid+is+the+tallest%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:00:07.488[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:00:07.488[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1858310610
[2m2023-10-27 14:00:07.651[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@48090b40
[2m2023-10-27 14:00:07.651[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:00:07.651[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:00:07.651[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+egyptian+pyramid+is+the+tallest%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:00:07.651[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":0,"annotations":[],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:00:07.633"}
[2m2023-10-27 14:00:07.651[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 209 ms
[2m2023-10-27 14:00:22.407[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"}
[2m2023-10-27 14:00:22.407[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"}
[2m2023-10-27 14:00:22.407[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"},"inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"}
[2m2023-10-27 14:00:22.407[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@53c5a732
[2m2023-10-27 14:00:22.417[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@25a91315
[2m2023-10-27 14:00:22.417[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:00:22.418[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:22.418[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:22.423[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f
[2m2023-10-27 14:00:22.424[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f found in urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6 at http://localhost:8080/sparql
[2m2023-10-27 14:00:22.426[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What is the second letter in the Greek alphabet? 
[2m2023-10-27 14:00:22.426[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question What is the second letter in the Greek alphabet?
[2m2023-10-27 14:00:22.426[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+second+letter+in+the+Greek+alphabet%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:00:22.426[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+second+letter+in+the+Greek+alphabet%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:00:22.426[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:00:22.426[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1950581997
[2m2023-10-27 14:00:22.552[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@267e97d8
[2m2023-10-27 14:00:22.552[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:00:22.553[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+second+letter+in+the+Greek+alphabet%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":25,"spot":"second letter","confidence":0.7412,"id":8859979,"title":"Epistles (Plato)","uri":"http://en.wikipedia.org/wiki/Epistles_%28Plato%29","abstract":"The Epistles (Greek: Ἐπιστολαί; Latin: Epistolae) of Plato are a series of thirteen letters traditionally included in the Platonic corpus. With the exception of the Seventh Letter, they are generally considered to be forgeries, although many scholars even reject the seventh.They were \"generally accepted as genuine until modern times\"; but by the close of the nineteenth century, many philologists believed that none of the letters were actually written by Plato.","label":"Epistles","categories":["Epistles of Plato"],"types":[]},{"start":33,"end":47,"spot":"Greek alphabet","confidence":0.8974,"id":3598847,"title":"History of the Greek alphabet","uri":"http://en.wikipedia.org/wiki/History_of_the_Greek_alphabet","abstract":"The history of the Greek alphabet starts with the adoption of Phoenician letter forms in the 9th–8th centuries BC during early Archaic Greece and continues to the present day. The Greek alphabet was developed during the Iron Age, centuries after the loss of Linear B, the syllabic script that was used for writing Mycenaean Greek until the Late Bronze Age collapse and Greek Dark Age. This article concentrates on the development of the alphabet before the modern codification of the standard Greek alphabet.","label":"History of the Greek alphabet","categories":["Greek alphabet","History of writing","Iron Age Greece","Palaeography"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:00:22.533"}
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 25
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Epistles_%28Plato%29
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 33
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 47
[2m2023-10-27 14:00:22.553[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/History_of_the_Greek_alphabet
[2m2023-10-27 14:00:22.560[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f
[2m2023-10-27 14:00:22.560[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@58fc5812
[2m2023-10-27 14:00:22.560[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:00:22.562[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Epistles_%28Plato%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.562[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Epistles_%28Plato%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.562[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Epistles_%28Plato%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.570[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3520d9a3
[2m2023-10-27 14:00:22.570[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:00:22.571[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "48"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/History_of_the_Greek_alphabet" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.571[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "48"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/History_of_the_Greek_alphabet" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.571[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "48"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/History_of_the_Greek_alphabet" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.577[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 170 ms
[2m2023-10-27 14:02:10.707[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"}
[2m2023-10-27 14:02:10.710[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"}
[2m2023-10-27 14:02:10.710[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"},"inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"}
[2m2023-10-27 14:02:10.710[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@26ff7269
[2m2023-10-27 14:02:10.725[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2746c8a9
[2m2023-10-27 14:02:10.725[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:02:10.725[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:02:10.726[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:02:10.736[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d
[2m2023-10-27 14:02:10.736[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d found in urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d at http://localhost:8080/sparql
[2m2023-10-27 14:02:10.737[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Which started first: impressionism or expressionism (art movements)? 
[2m2023-10-27 14:02:10.737[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question Which started first: impressionism or expressionism (art movements)?
[2m2023-10-27 14:02:10.738[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+started+first%3A+impressionism+or+expressionism+%28art+movements%29%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:02:10.738[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=Which+started+first%3A+impressionism+or+expressionism+%28art+movements%29%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:02:10.738[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:02:10.738[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1694464597
[2m2023-10-27 14:02:10.863[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@4e800fb1
[2m2023-10-27 14:02:10.863[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:02:10.864[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=Which+started+first%3A+impressionism+or+expressionism+%28art+movements%29%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":21,"end":34,"spot":"impressionism","confidence":0.8851,"id":15169,"title":"Impressionism","uri":"http://en.wikipedia.org/wiki/Impressionism","abstract":"Impressionism was a 19th-century art movement characterized by relatively small, thin, yet visible brush strokes, open composition, emphasis on accurate depiction of light in its changing qualities (often accentuating the effects of the passage of time), ordinary subject matter, unusual visual angles, and inclusion of movement as a crucial element of human perception and experience. Impressionism originated with a group of Paris-based artists whose independent exhibitions brought them to prominence during the 1870s and 1880s.","label":"Impressionist","categories":["Art movements","Articles which contain graphical timelines","French art","Impressionism"],"types":[]},{"start":38,"end":51,"spot":"expressionism","confidence":0.8513,"id":102495,"title":"Expressionism","uri":"http://en.wikipedia.org/wiki/Expressionism","abstract":"Expressionism is a modernist movement, initially in poetry and painting, originating in Northern Europe around the beginning of the 20th century. Its typical trait is to present the world solely from a subjective perspective, distorting it radically for emotional effect in order to evoke moods or ideas. Expressionist artists have sought to express the meaning of emotional experience rather than physical reality.","label":"Expressionism","categories":["Expressionism","German literary movements"],"types":[]},{"start":53,"end":66,"spot":"art movements","confidence":0.751,"id":228568,"title":"Art movement","uri":"http://en.wikipedia.org/wiki/Art_movement","abstract":"An art movement is a tendency or style in art with a specific common philosophy or goal, followed by a group of artists during a specific period of time, (usually a few months, years or decades) or, at least, with the heyday of the movement defined within a number of years. Art movements were especially important in modern art, when each consecutive movement was considered a new avant-garde movement. Western art had been, from the Renaissance up to the middle of the 19th century, underpinned by the logic of perspective and an attempt to reproduce an illusion of visible reality (figurative art). By the end of the 19th century many artists felt a need to create a new style which would encompass the fundamental changes taking place in technology, science and philosophy (abstract art).","label":"Art movement","categories":["Art history","Art movements","Style","Visual arts"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:02:10.844"}
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 21
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 34
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Impressionism
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 38
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 51
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Expressionism
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 53
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 66
[2m2023-10-27 14:02:10.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Art_movement
[2m2023-10-27 14:02:10.870[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d
[2m2023-10-27 14:02:10.872[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@13b14032
[2m2023-10-27 14:02:10.872[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:02:10.874[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "21"^^xsd:nonNegativeInteger .
    _:b1 oa:end "35"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Impressionism" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.874[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "21"^^xsd:nonNegativeInteger .
    _:b1 oa:end "35"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Impressionism" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.874[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "21"^^xsd:nonNegativeInteger .
    _:b1 oa:end "35"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Impressionism" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.882[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2a3d16d
[2m2023-10-27 14:02:10.882[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:02:10.883[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "52"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Expressionism" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.884[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "52"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Expressionism" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.884[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "52"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Expressionism" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.889[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@19cc4fc7
[2m2023-10-27 14:02:10.890[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:02:10.891[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "67"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Art_movement" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.891[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "67"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Art_movement" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.891[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "67"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Art_movement" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:10.897[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 187 ms
[2m2023-10-27 14:04:56.850[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"}
[2m2023-10-27 14:04:56.850[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"}
[2m2023-10-27 14:04:56.850[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"},"inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"}
[2m2023-10-27 14:04:56.850[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@57ff36c8
[2m2023-10-27 14:04:56.864[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4e564cd5
[2m2023-10-27 14:04:56.864[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:04:56.866[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:04:56.866[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:04:56.872[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f
[2m2023-10-27 14:04:56.872[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f found in urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2 at http://localhost:8080/sparql
[2m2023-10-27 14:04:56.875[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What is the capital of the prefecture Tokyo ? 
[2m2023-10-27 14:04:56.875[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question What is the capital of the prefecture Tokyo ?
[2m2023-10-27 14:04:56.875[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+capital+of+the+prefecture+Tokyo+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:04:56.875[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+capital+of+the+prefecture+Tokyo+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:04:56.875[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:04:56.875[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1800000773
[2m2023-10-27 14:04:57.056[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@547306af
[2m2023-10-27 14:04:57.056[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:04:57.056[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:04:57.056[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+is+the+capital+of+the+prefecture+Tokyo+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:04:57.056[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":19,"spot":"capital","confidence":0.6717,"id":41188263,"title":"Madrid","uri":"http://en.wikipedia.org/wiki/Madrid","abstract":"Madrid is the capital and most populous city of Spain. The city has almost 3.4 million inhabitants and a metropolitan area population of approximately 6.7 million. It is the second-largest city in the European Union (EU), and its  metropolitan area is the second-largest in the EU. The municipality covers geographical area. Madrid lies on the River Manzanares in the central part of the Iberian Peninsula. Capital city of both Spain (almost without interruption since 1561) and the surrounding autonomous community of Madrid (since 1983), it is also the political, economic and cultural centre of the country. The city is situated on an elevated plain about from the closest seaside location. The climate of Madrid features hot summers and cool winters.","label":"Madrid","categories":["9th-century establishments in Spain","Capitals in Europe","Madrid","Municipalities in the Community of Madrid","Populated places established in the 9th century"],"types":["http://dbpedia.org/ontology/City","http://dbpedia.org/ontology/Settlement","http://dbpedia.org/ontology/PopulatedPlace","http://dbpedia.org/ontology/Place","http://dbpedia.org/ontology/Location"]},{"start":38,"end":43,"spot":"Tokyo","confidence":0.8144,"id":30057,"title":"Tokyo","uri":"http://en.wikipedia.org/wiki/Tokyo","abstract":"Tokyo, officially the Tokyo Metropolis, is the capital and most populous city of Japan. Tokyo's metropolitan area (including neighboring prefectures) is the most populous in the world, with an estimated 37.468 million residents; although this number has been gradually decreasing since then, the prefecture itself has a population of 14.09 million people while the city's central 23 special wards have a population of 9.73 million. Located at the head of Tokyo Bay, the prefecture forms part of the Kantō region on the central coast of Honshu, Japan's largest island. Tokyo serves as Japan's economic center and is the seat of both the Japanese government and the Emperor of Japan.","label":"Tokyo","categories":["1457 establishments in Asia","15th-century establishments in Japan","Capitals in Asia","Kantō region","Populated coastal places in Japan","Populated places established in the 1450s","Port settlements in Japan","States and territories established in the 1450s","Tokyo"],"types":["http://dbpedia.org/ontology/City","http://dbpedia.org/ontology/Settlement","http://dbpedia.org/ontology/PopulatedPlace","http://dbpedia.org/ontology/Place","http://dbpedia.org/ontology/Location"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:04:57.037"}
[2m2023-10-27 14:04:57.057[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 14:04:57.057[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 19
[2m2023-10-27 14:04:57.057[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Madrid
[2m2023-10-27 14:04:57.057[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 38
[2m2023-10-27 14:04:57.057[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 43
[2m2023-10-27 14:04:57.057[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Tokyo
[2m2023-10-27 14:04:57.062[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f
[2m2023-10-27 14:04:57.062[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6e5b3458
[2m2023-10-27 14:04:57.062[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:04:57.064[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Madrid" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.064[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Madrid" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.064[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Madrid" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.071[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3f2c5368
[2m2023-10-27 14:04:57.071[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:04:57.072[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "44"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Tokyo" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.073[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "44"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Tokyo" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.073[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "44"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Tokyo" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.079[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 229 ms
[2m2023-10-27 14:06:40.228[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3","outGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3"}
[2m2023-10-27 14:06:40.228[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3","outGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3"}
[2m2023-10-27 14:06:40.228[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3"},"inGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3","outGraph":"urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3"}
[2m2023-10-27 14:06:40.229[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@4f801913
[2m2023-10-27 14:06:40.237[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1b83bcda
[2m2023-10-27 14:06:40.238[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:06:40.238[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:06:40.238[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:06:40.244[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53
[2m2023-10-27 14:06:40.244[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53 found in urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3 at http://localhost:8080/sparql
[2m2023-10-27 14:06:40.246[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many female Chinese Empresses have there been? 
[2m2023-10-27 14:06:40.246[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question How many female Chinese Empresses have there been?
[2m2023-10-27 14:06:40.246[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+female+Chinese+Empresses+have+there+been%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:06:40.246[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+female+Chinese+Empresses+have+there+been%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:06:40.246[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:06:40.246[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1612962465
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@46743587
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:06:40.385[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=How+many+female+Chinese+Empresses+have+there+been%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":16,"end":23,"spot":"Chinese","confidence":0.7501,"id":5760,"title":"History of China","uri":"http://en.wikipedia.org/wiki/History_of_China","abstract":"The history of China spans several millennia across a wide geographical area. The notion of \"China\" can be understood under many diverse historiographical, cultural, geographic, and political lenses, and has evolved tremendously over time. Each region now understood to be part of the Chinese world has alternated between many periods of unity, fracture, prosperity, and hardship. Classical Chinese civilization first emerged in the Yellow River valley, which along with the Yangtze and Pearl valleys now constitute the geographic core of China and have for the majority of its imperial history. China maintains a rich diversity of ethnic and linguistic people groups. The traditional lens for viewing Chinese history is the dynastic cycle: imperial dynasties rise and fall, and are ascribed certain achievements. Throughout pervades the narrative that Chinese civilization can be traced as an unbroken thread many thousands of years into the past, making it one of the cradles of civilization. At various times, states representative of a dominant Chinese culture have directly controlled areas stretching as far west as the Tian Shan, the Tarim Basin, and the Himalayas, as far north as the Sayan Mountains, and as far south as the delta of the Red River.","label":"Chinese","categories":["History of China"],"types":[]},{"start":24,"end":33,"spot":"Empresses","confidence":0.716,"id":10111,"title":"Emperor","uri":"http://en.wikipedia.org/wiki/Emperor","abstract":"The word emperor (from, via) can mean the male absolute ruler of an empire. Empress, the female equivalent, may indicate an emperor's wife (empress consort), mother/grandmother (empress dowager/grand empress dowager), or a woman who rules in her own right and name (empress regnant). Emperors are generally recognized to be of the highest monarchic honor and rank, surpassing kings. In Europe, the title of Emperor has been used since the Middle Ages, considered in those times equal or almost equal in dignity to that of Pope due to the latter's position as visible head of the Church and spiritual leader of the Catholic part of Western Europe. The emperor of Japan is the only currently reigning monarch whose title is translated into English as \"Emperor\".","label":"Emperor","categories":["Emperors","Gendered occupations","Heads of state","Imperial titles","Political philosophy"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:06:40.363"}
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 16
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 23
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/History_of_China
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 24
[2m2023-10-27 14:06:40.385[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 33
[2m2023-10-27 14:06:40.386[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Emperor
[2m2023-10-27 14:06:40.391[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53
[2m2023-10-27 14:06:40.392[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2a19f008
[2m2023-10-27 14:06:40.392[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:06:40.393[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/History_of_China" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:40.393[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/History_of_China" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:40.393[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/History_of_China" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:40.399[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2c7afcfd
[2m2023-10-27 14:06:40.400[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:06:40.401[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "34"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Emperor" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:40.401[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "34"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Emperor" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:40.401[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:84cf4c50-bdfb-4f28-8f9b-03bce3466be3> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_d5c4bb4c-8f4b-43b6-b33d-8b91e2801a53> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "34"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Emperor" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:40.407[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 179 ms
[2m2023-10-27 14:07:12.408[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f","outGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f"}
[2m2023-10-27 14:07:12.408[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f","outGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f"}
[2m2023-10-27 14:07:12.408[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f"},"inGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f","outGraph":"urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f"}
[2m2023-10-27 14:07:12.408[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@306fa53a
[2m2023-10-27 14:07:12.414[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7ce59be6
[2m2023-10-27 14:07:12.414[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:07:12.415[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:07:12.415[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:07:12.421[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c
[2m2023-10-27 14:07:12.421[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c found in urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f at http://localhost:8080/sparql
[2m2023-10-27 14:07:12.422[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation can i play don't starve on play station 4? 
[2m2023-10-27 14:07:12.422[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question can i play don't starve on play station 4?
[2m2023-10-27 14:07:12.422[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=can+i+play+don%27t+starve+on+play+station+4%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:07:12.422[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=can+i+play+don%27t+starve+on+play+station+4%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:07:12.422[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:07:12.422[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1532633591
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@79552b5
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:07:12.604[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=can+i+play+don%27t+starve+on+play+station+4%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":11,"end":23,"spot":"don't starve","confidence":0.891,"id":37858394,"title":"Don't Starve","uri":"http://en.wikipedia.org/wiki/Don%27t_Starve","abstract":"Don't Starve is a survival video game developed by the Canadian indie video game developer Klei Entertainment. The game was initially released for Microsoft Windows, OS X, and Linux on April 23, 2013. A PlayStation 4 port, renamed Don't Starve: Giant Edition, became available the following year (with PlayStation Vita and PlayStation 3 versions released in September 2014 and June 2015 respectively, and an Xbox One version released in August 2015). Don't Starve for iOS, renamed Don't Starve: Pocket Edition was released on July 9, 2015. An Android version was released on October 20, 2016. Downloadable content titled Reign of Giants was released on April 30, 2014, and a multiplayer standalone expansion called Don't Starve Together became free for existing users on June 3, 2015. On Steam, this game is able to be purchased with a free copy for a friend. A Nintendo Switch port came out on April 12, 2018.","label":"Don't Starve","categories":["2013 video games","505 Games games","Action-adventure games","Android (operating system) games","Game jam video games","IOS games","Indie video games","Klei Entertainment games","Linux games","Lua (programming language)-scripted video games","MacOS games","Multiplayer and single-player video games","Nintendo Switch games","Open-world video games","PlayStation 3 games","PlayStation 4 games","PlayStation Network games","PlayStation Vita games","Single-player video games","Survival video games","Video games developed in Canada","Video games using procedural generation","Video games with Steam Workshop support","Video games with expansion packs","Wii U eShop games","Wii U games","Windows games","Xbox Cloud Gaming games","Xbox One games"],"types":["http://dbpedia.org/ontology/VideoGame","http://dbpedia.org/ontology/Work","http://dbpedia.org/ontology/Software"]},{"start":27,"end":41,"spot":"play station 4","confidence":0.9078,"id":35723752,"title":"PlayStation 4","uri":"http://en.wikipedia.org/wiki/PlayStation_4","abstract":"The PlayStation 4 (PS4) is a home video game console developed by Sony Interactive Entertainment. Announced as the successor to the PlayStation 3 in February 2013, it was launched on November 15, 2013, in North America, November 29, 2013 in Europe, South America and Australia, and on February 22, 2014 in Japan. A console of the eighth generation, it competes with Microsoft's Xbox One and Nintendo's Wii U and Switch.","label":"PlayStation 4","categories":["2010s toys","2013 in video gaming","Computer-related introductions in 2013","Eighth-generation video game consoles","Home video game consoles","PlayStation (brand)","PlayStation 4","Products introduced in 2013","Regionless game consoles","Sony consoles","X86-based game consoles"],"types":["http://dbpedia.org/ontology/InformationAppliance","http://dbpedia.org/ontology/Device"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:07:12.583"}
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 11
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 23
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Don%27t_Starve
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 27
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 41
[2m2023-10-27 14:07:12.604[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/PlayStation_4
[2m2023-10-27 14:07:12.610[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c
[2m2023-10-27 14:07:12.610[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@9de55e5
[2m2023-10-27 14:07:12.610[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:07:12.611[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "11"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Don%27t_Starve" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:12.612[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "11"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Don%27t_Starve" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:12.612[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "11"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Don%27t_Starve" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:12.618[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5cb38eea
[2m2023-10-27 14:07:12.618[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:07:12.620[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "42"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/PlayStation_4" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:12.620[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "42"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/PlayStation_4" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:12.620[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e8036fd9-b30d-474f-aea4-299185d7735f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_43fb8d32-7519-4947-8e23-405b58541c5c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "42"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/PlayStation_4" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:12.630[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 222 ms
[2m2023-10-27 14:07:22.626[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"}
[2m2023-10-27 14:07:22.626[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"}
[2m2023-10-27 14:07:22.626[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"},"inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"}
[2m2023-10-27 14:07:22.626[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@7430d977
[2m2023-10-27 14:07:22.634[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7af73981
[2m2023-10-27 14:07:22.636[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:07:22.637[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:07:22.638[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:07:22.643[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827
[2m2023-10-27 14:07:22.643[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827 found in urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351 at http://localhost:8080/sparql
[2m2023-10-27 14:07:22.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation In how many movies did Carey Mulligan and Ryan Gosling star together? 
[2m2023-10-27 14:07:22.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question In how many movies did Carey Mulligan and Ryan Gosling star together?
[2m2023-10-27 14:07:22.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=In+how+many+movies+did+Carey+Mulligan+and+Ryan+Gosling+star+together%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:07:22.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=In+how+many+movies+did+Carey+Mulligan+and+Ryan+Gosling+star+together%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:07:22.644[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:07:22.645[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-711100201
[2m2023-10-27 14:07:22.779[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3bca33ba
[2m2023-10-27 14:07:22.779[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:07:22.779[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:07:22.779[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=In+how+many+movies+did+Carey+Mulligan+and+Ryan+Gosling+star+together%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":2,"annotations":[{"start":12,"end":18,"spot":"movies","confidence":0.6759,"id":21555729,"title":"Film","uri":"http://en.wikipedia.org/wiki/Film","abstract":"A film also called a movie, motion picture, moving picture, picture, photoplay or (slang) flick is a work of visual art that simulates experiences and otherwise communicates ideas, stories, perceptions, feelings, beauty, or atmosphere through the use of moving images. These images are generally accompanied by sound and, more rarely, other sensory stimulations. The word \"cinema\", short for cinematography, is often used to refer to filmmaking and the film industry, and the art form that is the result of it.","label":"Film","categories":["19th-century inventions","Articles containing video clips","Film","French inventions","Media formats","Visual arts media"],"types":[]},{"start":23,"end":37,"spot":"Carey Mulligan","confidence":0.9381,"id":4311446,"title":"Carey Mulligan","uri":"http://en.wikipedia.org/wiki/Carey_Mulligan","abstract":"Carey Hannah Mulligan (born 28 May 1985) is an English actress. She has received various accolades, including a British Academy Film Award, in addition to nominations for two Academy Awards, three Golden Globe Awards, and a Tony Award.","label":"Carey Mulligan","categories":["1985 births","21st-century English actresses","Actresses from London","Audiobook narrators","Best Actress BAFTA Award winners","English expatriates in the United States","English film actresses","English health activists","English people of Irish descent","English people of Welsh descent","English radio actresses","English stage actresses","English television actresses","English voice actresses","Independent Spirit Award for Best Female Lead winners","Living people","People educated at Woldingham School","Sexual abuse victim advocates","WFTV Award winners"],"types":["http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]},{"start":42,"end":54,"spot":"Ryan Gosling","confidence":0.9383,"id":891226,"title":"Ryan Gosling","uri":"http://en.wikipedia.org/wiki/Ryan_Gosling","abstract":"Ryan Thomas Gosling (born November 12, 1980) is a Canadian actor. Prominent in both independent film and major studio features of varying genres, his films have accrued a worldwide box office gross of over 1.9 billion USD. He has received various accolades, including a Golden Globe Award, and nominations for two Academy Awards and a BAFTA Award.","label":"Ryan Gosling","categories":["1980 births","20th-century Canadian male actors","21st-century Canadian male actors","21st-century Canadian male musicians","Best Musical or Comedy Actor Golden Globe (film) winners","Canadian documentary film producers","Canadian expatriate film directors in the United States","Canadian expatriate male actors in the United States","Canadian expatriate musicians in the United States","Canadian expatriate writers in the United States","Canadian film producers","Canadian folk rock musicians","Canadian indie rock musicians","Canadian male child actors","Canadian male film actors","Canadian male television actors","Canadian male voice actors","Canadian people of English descent","Canadian people of French descent","Canadian people of German descent","Canadian people of Irish descent","Canadian people of Scottish descent","Canadian philanthropists","Canadian restaurateurs","Film directors from London, Ontario","Former Latter Day Saints","Franco-Ontarian people","Independent Spirit Award for Best Male Lead winners","Living people","Male actors from London, Ontario","Mouseketeers","Musicians from London, Ontario","People from Burlington, Ontario","People from Cornwall, Ontario","Writers from London, Ontario"],"types":["http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]},{"start":55,"end":59,"spot":"star","confidence":0.7404,"id":7767613,"title":"Star! (film)","uri":"http://en.wikipedia.org/wiki/Star%21_%28film%29","abstract":"Star! (re-titled Those Were the Happy Times for its 1969 re-release) is a 1968 American biographical musical film directed by Robert Wise and starring Julie Andrews. The screenplay by William Fairchild is based on the life and career of British performer Gertrude Lawrence.","label":"Star!","categories":["1960s American films","1960s English-language films","1968 films","1968 musical films","20th Century Fox films","American biographical films","American musical films","Biographical films about actors","Films directed by Robert Wise","Films featuring a Best Supporting Actor Golden Globe winning performance","Films scored by Lennie Hayton","Films set in London","Films set in New York City","Films set in the 1910s","Films set in the 1940s","Musical films based on actual events"],"types":["http://dbpedia.org/ontology/Film","http://dbpedia.org/ontology/Work"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:07:22.758"}
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 18
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Film
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 23
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 37
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Carey_Mulligan
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 42
[2m2023-10-27 14:07:22.780[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 54
[2m2023-10-27 14:07:22.781[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Ryan_Gosling
[2m2023-10-27 14:07:22.781[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 55
[2m2023-10-27 14:07:22.781[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 59
[2m2023-10-27 14:07:22.781[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Star%21_%28film%29
[2m2023-10-27 14:07:22.786[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827
[2m2023-10-27 14:07:22.786[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4943aed5
[2m2023-10-27 14:07:22.786[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:07:22.788[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Film" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.788[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Film" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.788[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Film" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.794[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@abbad4d
[2m2023-10-27 14:07:22.794[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:07:22.796[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Carey_Mulligan" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.796[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Carey_Mulligan" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.796[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Carey_Mulligan" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.803[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@31d86e97
[2m2023-10-27 14:07:22.803[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:07:22.805[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "55"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Ryan_Gosling" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.805[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "55"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Ryan_Gosling" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.805[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "55"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Ryan_Gosling" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.813[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5be5ccf5
[2m2023-10-27 14:07:22.813[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:07:22.815[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "55"^^xsd:nonNegativeInteger .
    _:b1 oa:end "60"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Star%21_%28film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.815[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "55"^^xsd:nonNegativeInteger .
    _:b1 oa:end "60"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Star%21_%28film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.816[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "55"^^xsd:nonNegativeInteger .
    _:b1 oa:end "60"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Star%21_%28film%29" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:22.822[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 196 ms
[2m2023-10-27 14:08:04.726[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86","outGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86"}
[2m2023-10-27 14:08:04.728[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86","outGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86"}
[2m2023-10-27 14:08:04.728[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86"},"inGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86","outGraph":"urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86"}
[2m2023-10-27 14:08:04.728[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@4e4789b6
[2m2023-10-27 14:08:04.737[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7c313427
[2m2023-10-27 14:08:04.737[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:08:04.738[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:04.738[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:04.745[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8
[2m2023-10-27 14:08:04.745[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8 found in urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86 at http://localhost:8080/sparql
[2m2023-10-27 14:08:04.746[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation is there female main character in hunter x hunter? 
[2m2023-10-27 14:08:04.746[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question is there female main character in hunter x hunter?
[2m2023-10-27 14:08:04.746[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=is+there+female+main+character+in+hunter+x+hunter%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:04.746[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=is+there+female+main+character+in+hunter+x+hunter%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:04.746[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:08:04.746[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-191225740
[2m2023-10-27 14:08:04.948[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@4a28311c
[2m2023-10-27 14:08:04.948[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:08:04.948[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:08:04.949[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=is+there+female+main+character+in+hunter+x+hunter%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":16,"end":30,"spot":"main character","confidence":0.6301,"id":68315,"title":"Protagonist","uri":"http://en.wikipedia.org/wiki/Protagonist","abstract":"A protagonist is the main character of a story. The protagonist makes key decisions that affect the plot, primarily influencing the story and propelling it forward, and is often the character who faces the most significant obstacles. If a story contains a subplot, or is a narrative made up of several stories, then each subplot may have its own protagonist.","label":"Protagonist","categories":["Ancient Greek theatre","Protagonists by role","Psychodrama"],"types":[]},{"start":34,"end":49,"spot":"hunter x hunter","confidence":0.8917,"id":771172,"title":"Hunter × Hunter","uri":"http://en.wikipedia.org/wiki/Hunter_%C3%97_Hunter","abstract":"Hunter × Hunter (stylized as HUNTER×HUNTER and pronounced \"hunter hunter\") is a Japanese manga series written and illustrated by Yoshihiro Togashi. It has been serialized in Shueisha's shōnen manga magazine Weekly Shōnen Jump since March 1998, although the manga has frequently gone on extended hiatuses since 2006. Its chapters have been collected in 37 tankōbon volumes as of November 2022. The story focuses on a young boy named Gon Freecss who discovers that his father, who left him at a young age, is actually a world-renowned Hunter, a licensed professional who specializes in fantastical pursuits such as locating rare or unidentified animal species, treasure hunting, surveying unexplored enclaves, or hunting down lawless individuals. Gon departs on a journey to become a Hunter and eventually find his father. Along the way, Gon meets various other Hunters and encounters the paranormal.","label":"Hunter × Hunter","categories":["1998 manga","1999 anime television series debuts","2002 anime OVAs","2011 Japanese television series debuts","Adventure anime and manga","Animated films based on manga","Anime series based on manga","Coming-of-age anime and manga","Fantasy anime and manga","Fuji TV original programming","Hunter × Hunter","Japanese-language films","Madhouse (company)","Manga adapted into films","Martial arts anime and manga","Muse Communication","Musicals based on anime and manga","Nippon Animation","Nippon TV original programming","Odex","Shueisha franchises","Shueisha manga","Shōnen manga","Toonami","Viz Media anime","Viz Media manga"],"types":["http://dbpedia.org/ontology/Manga","http://dbpedia.org/ontology/WrittenWork","http://dbpedia.org/ontology/Work","http://dbpedia.org/ontology/Comic"]}],"lang":"en","langConfidence":0.9999,"timestamp":"2023-10-27T12:08:04.928"}
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 16
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 30
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Protagonist
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 34
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 49
[2m2023-10-27 14:08:04.949[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Hunter_%C3%97_Hunter
[2m2023-10-27 14:08:04.954[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8
[2m2023-10-27 14:08:04.954[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@70c8ae95
[2m2023-10-27 14:08:04.954[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:08:04.956[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "31"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Protagonist" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:04.956[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "31"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Protagonist" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:04.956[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "16"^^xsd:nonNegativeInteger .
    _:b1 oa:end "31"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Protagonist" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:04.961[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4a45115e
[2m2023-10-27 14:08:04.962[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:08:04.963[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "34"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hunter_%C3%97_Hunter" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:04.963[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "34"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hunter_%C3%97_Hunter" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:04.963[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d550385e-329e-48c8-a9c6-f8c554392a86> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18c18c8f-4efd-4060-8681-c5b993cb44f8> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "34"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hunter_%C3%97_Hunter" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:04.969[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 242 ms
[2m2023-10-27 14:08:06.189[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c","outGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c"}
[2m2023-10-27 14:08:06.190[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c","outGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c"}
[2m2023-10-27 14:08:06.190[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c"},"inGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c","outGraph":"urn:graph:9804c557-d25c-4f21-bbac-274526304a1c"}
[2m2023-10-27 14:08:06.190[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@414e395a
[2m2023-10-27 14:08:06.197[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@328b9abe
[2m2023-10-27 14:08:06.197[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:08:06.197[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:06.198[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:06.203[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787
[2m2023-10-27 14:08:06.204[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787 found in urn:graph:9804c557-d25c-4f21-bbac-274526304a1c at http://localhost:8080/sparql
[2m2023-10-27 14:08:06.205[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What caused Kobe Bryant's Death? 
[2m2023-10-27 14:08:06.205[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question What caused Kobe Bryant's Death?
[2m2023-10-27 14:08:06.205[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+caused+Kobe+Bryant%27s+Death%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:06.205[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+caused+Kobe+Bryant%27s+Death%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:06.205[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:08:06.205[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-851927106
[2m2023-10-27 14:08:06.257[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@5bc508d2
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:08:06.258[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+caused+Kobe+Bryant%27s+Death%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":12,"end":23,"spot":"Kobe Bryant","confidence":0.9751,"id":246185,"title":"Kobe Bryant","uri":"http://en.wikipedia.org/wiki/Kobe_Bryant","abstract":"Kobe Bean Bryant (August 23, 1978 – January 26, 2020) was an American professional basketball player. A shooting guard, he spent his entire 20-year career with the Los Angeles Lakers in the National Basketball Association (NBA). Widely regarded as one of the greatest basketball players of all time, Bryant won five NBA championships, was an 18-time All-Star, a 15-time member of the All-NBA Team, a 12-time member of the All-Defensive Team, the 2008 NBA Most Valuable Player (MVP), and a two-time NBA Finals MVP. Bryant also led the NBA in scoring twice, and ranks fourth in league all-time regular season and postseason scoring. He was posthumously voted into the Naismith Memorial Basketball Hall of Fame in 2020 and named to the NBA 75th Anniversary Team in 2021.","label":"Kobe Bryant","categories":["1978 births","2020 deaths","Accidental deaths in California","African-American Catholics","African-American basketball players","American expatriate basketball people in Italy","American men's basketball players","American men podcasters","American philanthropists","American podcasters","Basketball players at the 2008 Summer Olympics","Basketball players at the 2012 Summer Olympics","Basketball players from Los Angeles","Basketball players from Philadelphia","Burials at Pacific View Memorial Park","Catholics from California","Catholics from Pennsylvania","Charlotte Hornets draft picks","Deaths from fire in the United States","Kobe Bryant","Los Angeles Lakers players","Lower Merion High School alumni","McDonald's High School All-Americans","Medalists at the 2008 Summer Olympics","Medalists at the 2012 Summer Olympics","Naismith Memorial Basketball Hall of Fame inductees","National Basketball Association All-Stars","National Basketball Association high school draftees","National Basketball Association players with retired numbers","Olympic gold medalists for the United States in basketball","Parade High School All-Americans (boys' basketball)","Philanthropists from California","Philanthropists from Pennsylvania","Producers who won the Best Animated Short Academy Award","Shooting guards","Sportspeople from Newport Beach, California","United States men's national basketball team players","Victims of aviation accidents or incidents in 2020","Victims of helicopter accidents or incidents in the United States"],"types":[]},{"start":17,"end":31,"spot":"Bryant's Death","confidence":0.8532,"id":62938434,"title":"2020 Calabasas helicopter crash","uri":"http://en.wikipedia.org/wiki/2020_Calabasas_helicopter_crash","abstract":"On January 26, 2020, a Sikorsky S-76B helicopter crashed in the city of Calabasas, California, around northwest of Downtown Los Angeles, while en route from John Wayne Airport to Camarillo Airport. All nine people on board were killed: retired professional basketball player Kobe Bryant, his 13-year-old daughter Gianna, baseball coach John Altobelli, his wife Keri, his daughter Alyssa, Payton Chester, her mother Sarah, basketball coach Christina Mauser, and the pilot, Ara Zobayan.","label":"2020 Calabasas helicopter crash","categories":["2020 in Los Angeles County, California","2020 in basketball","Accidents and incidents involving the Sikorsky S-76","Articles containing video clips","Aviation accidents and incidents caused by pilot error","Aviation accidents and incidents in California","Aviation accidents and incidents in the United States in 2020","Aviation accidents and incidents involving controlled flight into terrain","Calabasas, California","January 2020 events in the United States","Kobe Bryant","Los Angeles Lakers","Sports-related aviation accidents and incidents"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:08:06.235"}
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 12
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 23
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Kobe_Bryant
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 17
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 31
[2m2023-10-27 14:08:06.258[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/2020_Calabasas_helicopter_crash
[2m2023-10-27 14:08:06.263[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787
[2m2023-10-27 14:08:06.263[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2170084f
[2m2023-10-27 14:08:06.263[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:08:06.265[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Kobe_Bryant" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:06.265[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Kobe_Bryant" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:06.265[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "24"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Kobe_Bryant" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:06.270[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@114461d2
[2m2023-10-27 14:08:06.270[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:08:06.272[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "17"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/2020_Calabasas_helicopter_crash" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:06.272[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "17"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/2020_Calabasas_helicopter_crash" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:06.272[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:9804c557-d25c-4f21-bbac-274526304a1c> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_e3a81823-519d-4636-b548-20c5e7589787> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "17"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/2020_Calabasas_helicopter_crash" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:06.278[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 89 ms
[2m2023-10-27 14:08:24.296[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"}
[2m2023-10-27 14:08:24.296[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"}
[2m2023-10-27 14:08:24.296[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"},"inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"}
[2m2023-10-27 14:08:24.296[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@5b387afc
[2m2023-10-27 14:08:24.306[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3c87a411
[2m2023-10-27 14:08:24.306[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:08:24.307[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:24.307[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:24.315[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c
[2m2023-10-27 14:08:24.316[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c found in urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206 at http://localhost:8080/sparql
[2m2023-10-27 14:08:24.318[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How often was Naomi Novik nominated for a Hugo Award? 
[2m2023-10-27 14:08:24.318[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question How often was Naomi Novik nominated for a Hugo Award?
[2m2023-10-27 14:08:24.318[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=How+often+was+Naomi+Novik+nominated+for+a+Hugo+Award%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:24.318[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=How+often+was+Naomi+Novik+nominated+for+a+Hugo+Award%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:24.318[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:08:24.319[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1146220859
[2m2023-10-27 14:08:24.453[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@229d18ef
[2m2023-10-27 14:08:24.453[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:08:24.453[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:08:24.454[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=How+often+was+Naomi+Novik+nominated+for+a+Hugo+Award%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":14,"end":25,"spot":"Naomi Novik","confidence":0.964,"id":4734491,"title":"Naomi Novik","uri":"http://en.wikipedia.org/wiki/Naomi_Novik","abstract":"Naomi Novik (born 1973) is an American author of speculative fiction. She is known for the Temeraire series (2006–2016), an alternate history of the Napoleonic Wars involving dragons, and her Scholomance fantasy series (2020–2022). Her standalone fantasy novels Uprooted (2015) and Spinning Silver (2018) were inspired by Polish folklore and the Rumpelstiltskin fairy tale respectively. Novik has won many awards for her work, including the Alex, Audie, British Fantasy, Locus, Mythopoeic and Nebula Awards.","label":"Naomi Novik","categories":["1973 births","21st-century American novelists","21st-century American women writers","American alternate history writers","American fantasy writers","American historical novelists","American people of Lithuanian-Jewish descent","American people of Polish-Jewish descent","American women novelists","Brown University alumni","Columbia Graduate School of Arts and Sciences alumni","Fan fiction writers","John W. Campbell Award for Best New Writer winners","Living people","Nebula Award winners","Novelists from New York (state)","People from Roslyn Heights, New York","Women historical novelists","Women science fiction and fantasy writers"],"types":["http://dbpedia.org/ontology/Writer","http://dbpedia.org/ontology/Species","http://dbpedia.org/ontology/Person","http://dbpedia.org/ontology/Eukaryote","http://dbpedia.org/ontology/Animal"]},{"start":42,"end":52,"spot":"Hugo Award","confidence":0.9069,"id":28866471,"title":"Hugo Award","uri":"http://en.wikipedia.org/wiki/Hugo_Award","abstract":"The Hugo Award is an annual literary award for the best science fiction or fantasy works and achievements of the previous year, given at the World Science Fiction Convention and chosen by its members. The Hugo is widely considered the premier award in science fiction. The award is administered by the World Science Fiction Society. It is named after Hugo Gernsback, the founder of the pioneering science fiction magazine Amazing Stories. Hugos were first given in 1953, at the 11th World Science Fiction Convention, and have been awarded every year since 1955.","label":"Hugo Award","categories":["1953 establishments in the United States","Awards established in 1953","Fantasy awards","Hugo Awards","Science fiction awards"],"types":[]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:08:24.429"}
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 14
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 25
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Naomi_Novik
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 42
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 52
[2m2023-10-27 14:08:24.454[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Hugo_Award
[2m2023-10-27 14:08:24.462[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c
[2m2023-10-27 14:08:24.462[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3aea69da
[2m2023-10-27 14:08:24.462[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:08:24.465[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "14"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Naomi_Novik" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.465[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "14"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Naomi_Novik" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.465[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "14"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Naomi_Novik" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.477[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3b4cf5ba
[2m2023-10-27 14:08:24.477[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:08:24.480[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "53"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hugo_Award" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.480[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "53"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hugo_Award" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.480[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "53"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Hugo_Award" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.490[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 194 ms
[2m2023-10-27 14:09:00.349[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"}
[2m2023-10-27 14:09:00.349[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"}
[2m2023-10-27 14:09:00.349[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"},"inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"}
[2m2023-10-27 14:09:00.349[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@67a52fe5
[2m2023-10-27 14:09:00.358[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@67933974
[2m2023-10-27 14:09:00.359[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:09:00.359[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:09:00.359[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:09:00.367[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf
[2m2023-10-27 14:09:00.367[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf found in urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e at http://localhost:8080/sparql
[2m2023-10-27 14:09:00.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What language do they speak in Poland ? 
[2m2023-10-27 14:09:00.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Question What language do they speak in Poland ?
[2m2023-10-27 14:09:00.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m URL: https://api.dandelion.eu/datatxt/nex/v1/?text=What+language+do+they+speak+in+Poland+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:09:00.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP GET https://api.dandelion.eu/datatxt/nex/v1/?text=What+language+do+they+speak+in+Poland+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:09:00.369[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:09:00.370[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1792806726
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@2d24c9f5
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json;charset=UTF-8"
[2m2023-10-27 14:09:00.663[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m request was actually executed: https://api.dandelion.eu/datatxt/nex/v1/?text=What+language+do+they+speak+in+Poland+%3F&include=types%2Cabstract%2Ccategories&token=7d29f867b39a432e8884e99f69c194c9
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m JSON: {"time":1,"annotations":[{"start":31,"end":37,"spot":"Poland","confidence":0.7434,"id":343234,"title":"Polish–Lithuanian Commonwealth","uri":"http://en.wikipedia.org/wiki/Polish%E2%80%93Lithuanian_Commonwealth","abstract":"The Polish–Lithuanian Commonwealth, formally known as the Kingdom of Poland and the Grand Duchy of Lithuania, or simply Poland–Lithuania, was a bi-confederal state, sometimes called a federation, of Poland and Lithuania ruled by a common monarch in real union, who was both King of Poland and Grand Duke of Lithuania. It was one of the largest and most populous countries of 16th- to 17th-century Europe. At its largest territorial extent, in the early 17th century, the Commonwealth covered almost and as of 1618 sustained a multi-ethnic population of almost 12 million. Polish and Latin were the two co-official languages.","label":"Polish–Lithuanian Commonwealth","categories":["1569 establishments in Poland","16th century in Lithuania","16th century in Poland","16th century in Ukraine","1795 disestablishments in Poland","17th century in Lithuania","17th century in Poland","17th century in Ukraine","18th century in Lithuania","18th century in Poland","18th century in Ukraine","Christian states","Diarchies","Duchy of Livonia","Early Modern history of Belarus","Early Modern history of Lithuania","Early Modern history of Poland","Early Modern history of Ukraine","Former countries in Europe","Former monarchies of Europe","Former republics","Former state unions","History of Lithuania (1569–1795)","History of Transnistria","Lithuania–Poland relations","Polish–Lithuanian Commonwealth","Political history of Lithuania","Political history of Poland","Political history of Ukraine","States and territories disestablished in 1795","States and territories established in 1569"],"types":["http://dbpedia.org/ontology/Country","http://dbpedia.org/ontology/PopulatedPlace","http://dbpedia.org/ontology/Place","http://dbpedia.org/ontology/Location"]}],"lang":"en","langConfidence":1.0,"timestamp":"2023-10-27T12:09:00.616"}
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Begin: 31
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m End: 37
[2m2023-10-27 14:09:00.663[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m Link http://dbpedia.org/resource/Polish%E2%80%93Lithuanian_Commonwealth
[2m2023-10-27 14:09:00.671[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf
[2m2023-10-27 14:09:00.672[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@55708c22
[2m2023-10-27 14:09:00.672[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] .
    ?a oa:hasBody ?answer ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time)
}
[2m2023-10-27 14:09:00.675[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "31"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Polish%E2%80%93Lithuanian_Commonwealth" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:00.675[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.c.dandelion.ned.DandelionNED      [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "31"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Polish%E2%80%93Lithuanian_Commonwealth" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:00.675[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "31"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:hasBody "http://dbpedia.org/resource/Polish%E2%80%93Lithuanian_Commonwealth" .
    ?a oa:annotatedBy <urn:qanary:DandelionNED> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:00.683[0;39m [32mDEBUG[0;39m [35m28726[0;39m [2m---[0;39m [2m[nio-8088-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 334 ms
[2m2023-10-27 14:15:38.592[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | spring.application.name -> spring_application_name=DandelionNED
[2m2023-10-27 14:15:38.594[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | spring.application.description -> spring_application_description=DandelionNED is a Qanary component
[2m2023-10-27 14:15:38.594[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | springdoc.swagger-ui.path -> springdoc_swagger_ui_path=This text is shown as the property springdoc.swagger-ui.path is not defined (e.g., in application.properties).
[2m2023-10-27 14:15:38.594[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | spring.boot.admin.url -> spring_boot_admin_url=http://localhost:8080
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | rdfcomponentdescription=/component-description
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | ImplementationVersion=3.7.2
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | SpecificationVendor=null
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | SpecificationVersion=3.7
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | ImplementationTitle=qa.component
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | component_description_file=description
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | component_description_url=/description
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | SpecificationTitle=qa.component
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | ImplementationVendor=null
[2m2023-10-27 14:15:38.595[0;39m [32m INFO[0;39m [35m28726[0;39m [2m---[0;39m [2m[io-8088-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m session | Name=eu.wdaqua.qanary.component
