
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mTextRazor -- TextRazor is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 12:09:22.767[0;39m [32m INFO[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 9651 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/target/qanary-component-NER-TextRazor-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor)
[2m2023-10-27 12:09:22.824[0;39m [32mDEBUG[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 12:09:22.825[0;39m [32m INFO[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 12:09:42.059[0;39m [33m WARN[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 12:09:42.437[0;39m [33m WARN[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 12:09:42.598[0;39m [33m WARN[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'textRazor' defined in URL [jar:file:/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/target/qanary-component-NER-TextRazor-3.4.0.jar!/BOOT-INF/classes!/eu/wdaqua/qanary/component/textrazor/ner/TextRazor.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [eu.wdaqua.qanary.component.textrazor.ner.TextRazor]: Constructor threw exception; nested exception is eu.wdaqua.qanary.component.textrazor.ner.exception.ApiTokenIsNullOrEmptyException
[2m2023-10-27 12:09:42.985[0;39m [31mERROR[0;39m [35m9651[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.boot.SpringApplication              [0;39m [2m:[0;39m Application run failed

org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'textRazor' defined in URL [jar:file:/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/target/qanary-component-NER-TextRazor-3.4.0.jar!/BOOT-INF/classes!/eu/wdaqua/qanary/component/textrazor/ner/TextRazor.class]: Bean instantiation via constructor failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [eu.wdaqua.qanary.component.textrazor.ner.TextRazor]: Constructor threw exception; nested exception is eu.wdaqua.qanary.component.textrazor.ner.exception.ApiTokenIsNullOrEmptyException
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:315) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:296) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1372) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1222) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:582) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:542) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:335) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:333) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:208) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:953) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:918) ~[spring-context-5.3.19.jar!/:5.3.19]
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:583) ~[spring-context-5.3.19.jar!/:5.3.19]
	at org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:145) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.refresh(SpringApplication.java:740) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:415) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:303) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1312) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1301) ~[spring-boot-2.6.7.jar!/:2.6.7]
	at eu.wdaqua.qanary.component.textrazor.ner.Application.main(Application.java:36) ~[classes!/:3.4.0]
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
	at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
	at org.springframework.boot.loader.MainMethodRunner.run(MainMethodRunner.java:49) ~[qanary-component-NER-TextRazor-3.4.0.jar:3.4.0]
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:108) ~[qanary-component-NER-TextRazor-3.4.0.jar:3.4.0]
	at org.springframework.boot.loader.Launcher.launch(Launcher.java:58) ~[qanary-component-NER-TextRazor-3.4.0.jar:3.4.0]
	at org.springframework.boot.loader.JarLauncher.main(JarLauncher.java:88) ~[qanary-component-NER-TextRazor-3.4.0.jar:3.4.0]
Caused by: org.springframework.beans.BeanInstantiationException: Failed to instantiate [eu.wdaqua.qanary.component.textrazor.ner.TextRazor]: Constructor threw exception; nested exception is eu.wdaqua.qanary.component.textrazor.ner.exception.ApiTokenIsNullOrEmptyException
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:224) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.SimpleInstantiationStrategy.instantiate(SimpleInstantiationStrategy.java:117) ~[spring-beans-5.3.19.jar!/:5.3.19]
	at org.springframework.beans.factory.support.ConstructorResolver.instantiate(ConstructorResolver.java:311) ~[spring-beans-5.3.19.jar!/:5.3.19]
	... 25 common frames omitted
Caused by: eu.wdaqua.qanary.component.textrazor.ner.exception.ApiTokenIsNullOrEmptyException: null
	at eu.wdaqua.qanary.component.textrazor.ner.TextRazor.<init>(TextRazor.java:65) ~[classes!/:3.4.0]
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502) ~[na:na]
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486) ~[na:na]
	at org.springframework.beans.BeanUtils.instantiateClass(BeanUtils.java:211) ~[spring-beans-5.3.19.jar!/:5.3.19]
	... 27 common frames omitted


[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mTextRazor -- TextRazor is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 12:15:53.128[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 11764 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/target/qanary-component-NER-TextRazor-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor)
[2m2023-10-27 12:15:53.196[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 12:15:53.200[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 12:16:18.180[0;39m [33m WARN[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 12:16:18.860[0;39m [33m WARN[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 12:16:19.027[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6b5966e1
[2m2023-10-27 12:16:19.051[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:16:19.256[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 12:16:19.627[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 12:16:19.700[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:16:19.761[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the birthplace of Albert Einstein?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 12:16:19.879[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=726781760
[2m2023-10-27 12:16:20.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@1133ec6e
[2m2023-10-27 12:16:20.710[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:16:20.739[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 12:16:20.771[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 12:16:21.189[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}]},"time":0.00406,"ok":true}
[2m2023-10-27 12:16:21.194[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}
[2m2023-10-27 12:16:21.194[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 12:16:21.194[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 41
[2m2023-10-27 12:16:21.194[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:16:21.381[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@ca27722
[2m2023-10-27 12:16:21.382[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 12:16:21.383[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 12:16:21.389[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 12:16:21.390[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 12:16:21.390[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the birthplace of Albert Einstein?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 12:16:21.390[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=726781760
[2m2023-10-27 12:16:21.399[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@67427b69
[2m2023-10-27 12:16:21.621[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 12:16:21.622[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 12:16:21.622[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 12:16:21.623[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}]},"time":0.004069,"ok":true}
[2m2023-10-27 12:16:21.623[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}
[2m2023-10-27 12:16:21.623[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 12:16:21.623[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 41
[2m2023-10-27 12:16:21.624[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 12:16:21.625[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.textrazor.ner.TextRazor@544630b7
[2m2023-10-27 12:16:21.643[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8086
spring.application.name                  = TextRazor
spring.application.description           = TextRazor is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 12:16:21.849[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl
[2m2023-10-27 12:16:28.819[0;39m [33m WARN[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 12:16:28.847[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 12:16:38.914[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Started Application in 53.431 seconds (JVM running for 65.988)
[2m2023-10-27 12:16:40.606[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Application registered itself as 187c8cfccbc3
[2m2023-10-27 13:37:19.122[0;39m [33m WARN[0;39m [35m11764[0;39m [2m---[0;39m [2m[gistrationTask1][0;39m [36md.c.b.a.c.r.ApplicationRegistrator      [0;39m [2m:[0;39m Failed to register application as Application(name=TextRazor, managementUrl=http://0.0.0.0:8086/actuator, healthUrl=http://0.0.0.0:8086/actuator/health, serviceUrl=http://0.0.0.0:8086/) at spring-boot-admin ([http://localhost:8080/instances]): I/O error on POST request for "http://localhost:8080/instances": localhost:8080 failed to respond; nested exception is org.apache.http.NoHttpResponseException: localhost:8080 failed to respond. Further attempts are logged on DEBUG level

[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mTextRazor -- TextRazor is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 13:37:48.447[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 28731 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/target/qanary-component-NER-TextRazor-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor)
[2m2023-10-27 13:37:48.461[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 13:37:48.462[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 13:38:08.954[0;39m [33m WARN[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 13:38:09.580[0;39m [33m WARN[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 13:38:09.717[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6c345c5f
[2m2023-10-27 13:38:09.734[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:38:10.039[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:38:10.570[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:38:10.614[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:38:10.741[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the birthplace of Albert Einstein?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:38:10.848[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=726781760
[2m2023-10-27 13:38:11.324[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6063d80a
[2m2023-10-27 13:38:11.575[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:38:11.629[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:38:11.659[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:38:12.096[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}]},"time":0.004109,"ok":true}
[2m2023-10-27 13:38:12.121[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}
[2m2023-10-27 13:38:12.134[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 13:38:12.134[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 41
[2m2023-10-27 13:38:12.134[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:38:12.393[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@23a9ba52
[2m2023-10-27 13:38:12.394[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:38:12.405[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:38:12.406[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:38:12.406[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:38:12.407[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the birthplace of Albert Einstein?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:38:12.414[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=726781760
[2m2023-10-27 13:38:12.420[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@9573b3b
[2m2023-10-27 13:38:12.635[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:38:12.636[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:38:12.636[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:38:12.637[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}]},"time":0.004115,"ok":true}
[2m2023-10-27 13:38:12.637[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}
[2m2023-10-27 13:38:12.637[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 13:38:12.637[0;39m [32mDEBUG[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 41
[2m2023-10-27 13:38:12.637[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:38:12.638[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.textrazor.ner.TextRazor@78461bc4
[2m2023-10-27 13:38:12.651[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8086
spring.application.name                  = TextRazor
spring.application.description           = TextRazor is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 13:38:12.736[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl
[2m2023-10-27 13:38:18.523[0;39m [33m WARN[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 13:38:18.679[0;39m [32m INFO[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 13:38:28.365[0;39m [33m WARN[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8086 is already in use
[2m2023-10-27 13:38:28.727[0;39m [31mERROR[0;39m [35m28731[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.d.LoggingFailureAnalysisReporter  [0;39m [2m:[0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.


[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;19;12m [0m[48;2;0;71;47m.[0m[48;2;0;120;79m-[0m[48;2;0;165;109m=[0m[48;2;0;168;111m=[0m[48;2;0;153;101m-[0m[48;2;0;141;93m-[0m[48;2;0;162;107m=[0m[48;2;0;178;119m=[0m[48;2;0;168;113m=[0m[48;2;0;127;85m-[0m[48;2;0;85;58m:[0m[48;2;0;31;21m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;16;10m [0m[48;2;0;106;70m:[0m[48;2;0;169;111m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;98;64m:[0m[48;2;0;31;20m [0m[48;2;0;34;22m [0m[48;2;0;78;52m:[0m[48;2;0;25;17m [0m[48;2;0;46;30m.[0m[48;2;0;131;88m-[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;1;177;122m=[0m[48;2;1;114;79m:[0m[48;2;0;13;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;35;23m [0m[48;2;0;164;108m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;181;119m=[0m[48;2;0;54;35m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;23;15m [0m[48;2;0;75;50m.[0m[48;2;0;8;5m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;67;45m.[0m[48;2;1;137;94m-[0m[48;2;2;181;126m=[0m[48;2;3;182;128m=[0m[48;2;2;147;104m-[0m[48;2;0;8;6m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;1;0m [0m[48;2;0;18;12m [0m[48;2;0;167;110m=[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;157;104m=[0m[48;2;0;40;26m.[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;53;36m.[0m[48;2;2;126;88m-[0m[48;2;2;179;125m=[0m[48;2;2;177;125m=[0m[48;2;4;181;129m=[0m[48;2;1;76;55m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;122;80m-[0m[48;2;0;188;124m=[0m[48;2;0;169;111m=[0m[48;2;0;82;54m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;62;43m.[0m[48;2;3;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;3;178;126m=[0m[48;2;3;178;128m=[0m[48;2;3;116;84m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;9m [0m[48;2;1;31;24m [0m[48;2;2;42;34m.[0m[48;2;3;52;42m.[0m[48;2;3;49;41m.[0m[48;2;2;28;24m [0m[48;2;0;0;0m [0m[48;2;2;29;25m [0m[48;2;2;34;30m [0m[48;2;2;33;29m [0m[48;2;3;33;30m [0m[48;2;3;33;30m [0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;4;32;31m [0m[48;2;4;32;32m [0m[48;2;4;32;32m [0m[48;2;4;31;31m [0m[48;2;4;31;32m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;2;15;16m [0m[48;2;5;32;35m [0m[48;2;6;39;43m.[0m[48;2;6;35;39m.[0m[48;2;3;22;24m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;5;6m [0m[48;2;4;19;24m [0m[48;2;6;30;38m [0m[48;2;8;38;48m.[0m[48;2;8;38;49m.[0m[48;2;6;27;35m [0m[48;2;0;0;0m [0m[48;2;3;14;19m [0m[48;2;5;25;34m [0m[48;2;5;25;33m [0m[48;2;5;25;33m [0m[48;2;5;24;33m [0m[48;2;5;23;32m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;11;16m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;4;22;31m [0m[48;2;4;22;30m [0m[48;2;3;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;2;16;23m [0m[48;2;2;19;27m [0m[48;2;1;11;15m [0m[48;2;0;0;0m [0m[48;2;1;13;18m [0m[48;2;2;20;29m [0m[48;2;1;19;26m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;20m [0m[48;2;0;17;25m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;17;24m [0m[48;2;0;16;23m [0m
[48;2;0;0;0m [0m[48;2;0;30;20m [0m[48;2;0;188;124m=[0m[48;2;0;91;60m:[0m[48;2;0;14;9m [0m[48;2;0;38;25m [0m[48;2;0;126;83m-[0m[48;2;0;53;35m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;38;26m.[0m[48;2;2;177;124m=[0m[48;2;2;179;126m=[0m[48;2;3;180;128m=[0m[48;2;3;177;127m=[0m[48;2;4;178;130m=[0m[48;2;3;109;80m:[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;0;10;8m [0m[48;2;3;71;55m.[0m[48;2;6;126;99m-[0m[48;2;8;157;125m=[0m[48;2;10;171;138m=[0m[48;2;10;170;139m=[0m[48;2;11;169;139m=[0m[48;2;9;150;125m=[0m[48;2;10;151;128m=[0m[48;2;9;122;104m-[0m[48;2;12;159;138m=[0m[48;2;14;164;144m=[0m[48;2;15;162;145m=[0m[48;2;15;162;145m=[0m[48;2;16;160;146m=[0m[48;2;7;79;73m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;8;70;68m:[0m[48;2;19;154;151m=[0m[48;2;20;152;152m=[0m[48;2;20;151;153m=[0m[48;2;21;150;154m=[0m[48;2;21;149;154m=[0m[48;2;14;99;104m:[0m[48;2;19;124;132m-[0m[48;2;23;146;157m=[0m[48;2;23;145;157m=[0m[48;2;24;144;158m=[0m[48;2;24;142;158m=[0m[48;2;24;139;157m=[0m[48;2;20;115;132m-[0m[48;2;7;40;47m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;8;41;51m.[0m[48;2;18;87;108m:[0m[48;2;24;114;143m-[0m[48;2;27;127;161m=[0m[48;2;28;128;163m=[0m[48;2;28;128;163m=[0m[48;2;25;115;148m-[0m[48;2;25;112;146m-[0m[48;2;21;96;127m-[0m[48;2;24;107;142m-[0m[48;2;27;121;162m-[0m[48;2;27;120;161m-[0m[48;2;27;118;160m-[0m[48;2;26;117;159m-[0m[48;2;19;85;117m:[0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;1m [0m[48;2;17;86;121m:[0m[48;2;21;107;150m-[0m[48;2;20;106;148m-[0m[48;2;19;104;147m-[0m[48;2;18;103;145m-[0m[48;2;15;91;129m:[0m[48;2;7;45;63m.[0m[48;2;11;77;109m:[0m[48;2;13;94;133m:[0m[48;2;12;95;135m:[0m[48;2;12;95;135m:[0m[48;2;10;89;127m:[0m[48;2;6;57;81m.[0m[48;2;1;15;22m [0m[48;2;7;86;120m:[0m[48;2;6;79;112m:[0m[48;2;0;3;4m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;2;83;116m:[0m[48;2;2;84;118m:[0m[48;2;2;83;117m:[0m[48;2;1;82;116m:[0m[48;2;1;81;115m:[0m[48;2;0;54;77m.[0m
[48;2;0;1;0m [0m[48;2;0;60;39m.[0m[48;2;0;57;37m.[0m[48;2;0;42;27m.[0m[48;2;0;141;93m-[0m[48;2;0;188;124m=[0m[48;2;0;123;81m-[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;154;109m=[0m[48;2;4;181;129m=[0m[48;2;3;178;128m=[0m[48;2;4;176;128m=[0m[48;2;5;178;131m=[0m[48;2;2;71;52m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;65;50m.[0m[48;2;7;153;119m=[0m[48;2;9;173;136m=[0m[48;2;9;172;137m=[0m[48;2;10;171;138m=[0m[48;2;9;158;129m=[0m[48;2;4;72;59m:[0m[48;2;1;17;14m [0m[48;2;0;2;2m [0m[48;2;0;9;8m [0m[48;2;10;137;118m-[0m[48;2;14;164;144m=[0m[48;2;14;159;142m=[0m[48;2;14;159;143m=[0m[48;2;15;158;144m=[0m[48;2;14;149;137m=[0m[48;2;1;12;11m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;4;4m [0m[48;2;16;134;131m-[0m[48;2;19;152;151m=[0m[48;2;19;149;151m=[0m[48;2;20;149;153m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;18;123;130m-[0m[48;2;12;79;85m:[0m[48;2;11;73;79m:[0m[48;2;21;128;140m-[0m[48;2;23;140;156m=[0m[48;2;24;139;157m=[0m[48;2;24;139;158m=[0m[48;2;25;139;160m=[0m[48;2;23;126;146m-[0m[48;2;1;5;6m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;6;30;37m [0m[48;2;22;104;128m-[0m[48;2;28;131;163m=[0m[48;2;28;130;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;15;71;91m:[0m[48;2;4;19;24m [0m[48;2;0;3;4m [0m[48;2;0;3;4m [0m[48;2;17;75;99m:[0m[48;2;28;121;162m-[0m[48;2;26;117;157m-[0m[48;2;26;117;159m-[0m[48;2;25;115;157m-[0m[48;2;26;115;158m-[0m[48;2;6;30;42m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;5;28;39m [0m[48;2;21;107;150m-[0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;17;102;143m-[0m[48;2;17;102;143m-[0m[48;2;13;84;119m:[0m[48;2;9;60;85m.[0m[48;2;6;42;59m.[0m[48;2;8;63;89m.[0m[48;2;12;95;135m:[0m[48;2;11;94;133m:[0m[48;2;10;93;131m:[0m[48;2;8;82;116m:[0m[48;2;0;0;0m [0m[48;2;5;75;106m:[0m[48;2;3;41;57m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;1;45;63m.[0m[48;2;2;84;118m:[0m[48;2;1;81;114m:[0m[48;2;0;81;115m:[0m[48;2;0;80;114m:[0m[48;2;0;79;111m:[0m[48;2;0;14;20m [0m
[48;2;0;0;0m [0m[48;2;0;14;9m [0m[48;2;0;115;76m:[0m[48;2;0;188;124m=[0m[48;2;0;188;124m=[0m[48;2;0;151;99m-[0m[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;3;161;114m=[0m[48;2;4;180;130m=[0m[48;2;4;176;129m=[0m[48;2;4;177;129m=[0m[48;2;5;168;125m=[0m[48;2;0;18;13m [0m[48;2;0;0;0m [0m[48;2;4;98;76m:[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;8;167;133m=[0m[48;2;9;168;136m=[0m[48;2;8;151;123m=[0m[48;2;1;28;23m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;14;12m [0m[48;2;12;150;132m=[0m[48;2;13;162;143m=[0m[48;2;14;160;144m=[0m[48;2;15;157;143m=[0m[48;2;16;159;147m=[0m[48;2;10;92;87m:[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;52;51m.[0m[48;2;20;153;152m=[0m[48;2;19;149;151m=[0m[48;2;21;150;154m=[0m[48;2;20;147;152m=[0m[48;2;22;148;155m=[0m[48;2;12;83;88m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;12;76;86m:[0m[48;2;25;142;159m=[0m[48;2;24;137;155m=[0m[48;2;24;137;158m=[0m[48;2;25;136;158m=[0m[48;2;22;120;141m-[0m[48;2;0;4;5m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;9;47;58m.[0m[48;2;26;129;159m=[0m[48;2;28;131;163m=[0m[48;2;27;127;160m=[0m[48;2;27;125;159m-[0m[48;2;27;125;159m-[0m[48;2;9;42;54m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;20;91;121m:[0m[48;2;26;119;160m-[0m[48;2;26;116;158m-[0m[48;2;25;115;157m-[0m[48;2;25;114;157m-[0m[48;2;20;93;128m:[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;14;75;105m:[0m[48;2;20;106;148m-[0m[48;2;18;102;144m-[0m[48;2;17;102;143m-[0m[48;2;16;101;142m-[0m[48;2;14;88;125m:[0m[48;2;0;6;8m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;6;52;74m.[0m[48;2;6;57;81m.[0m[48;2;4;48;68m.[0m[48;2;2;27;39m [0m[48;2;4;55;78m.[0m[48;2;5;84;118m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;5;7m [0m[48;2;1;77;108m:[0m[48;2;1;82;116m:[0m[48;2;0;81;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;113m:[0m[48;2;0;56;80m.[0m[48;2;0;0;0m [0m
[48;2;0;16;11m [0m[48;2;0;151;99m-[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;122m=[0m[48;2;0;46;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;1;53;38m.[0m[48;2;4;180;130m=[0m[48;2;4;177;129m=[0m[48;2;4;174;127m=[0m[48;2;6;178;132m=[0m[48;2;2;85;64m:[0m[48;2;0;0;0m [0m[48;2;3;84;65m:[0m[48;2;8;174;135m=[0m[48;2;7;169;133m=[0m[48;2;8;170;135m=[0m[48;2;9;169;136m=[0m[48;2;9;167;136m=[0m[48;2;2;38;31m.[0m[48;2;0;0;0m [0m[48;2;0;4;3m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;7;81;72m:[0m[48;2;14;163;144m=[0m[48;2;14;158;142m=[0m[48;2;16;161;146m=[0m[48;2;15;158;146m=[0m[48;2;16;155;145m=[0m[48;2;2;26;24m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;15;118;118m-[0m[48;2;19;151;152m=[0m[48;2;20;148;152m=[0m[48;2;20;147;152m=[0m[48;2;21;147;154m=[0m[48;2;18;123;131m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;2;3m [0m[48;2;19;111;125m-[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;135;157m=[0m[48;2;26;137;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;6;32;40m [0m[48;2;27;132;162m=[0m[48;2;27;130;162m=[0m[48;2;27;128;161m=[0m[48;2;27;127;161m-[0m[48;2;28;128;163m=[0m[48;2;12;58;74m.[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;30;41m [0m[48;2;27;120;161m-[0m[48;2;26;117;158m-[0m[48;2;26;117;159m-[0m[48;2;25;114;156m-[0m[48;2;25;114;157m-[0m[48;2;9;44;61m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;19;104;146m-[0m[48;2;18;103;146m-[0m[48;2;18;103;145m-[0m[48;2;16;100;141m-[0m[48;2;16;100;142m-[0m[48;2;7;48;68m.[0m[48;2;0;0;0m [0m[48;2;0;3;5m [0m[48;2;0;1;2m [0m[48;2;1;12;18m [0m[48;2;8;77;109m:[0m[48;2;7;75;106m:[0m[48;2;6;76;108m:[0m[48;2;6;87;124m:[0m[48;2;6;88;125m:[0m[48;2;3;47;67m.[0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;34;49m.[0m[48;2;2;83;117m:[0m[48;2;0;81;114m:[0m[48;2;1;82;115m:[0m[48;2;0;80;113m:[0m[48;2;0;80;114m:[0m[48;2;0;22;31m [0m[48;2;0;0;0m [0m
[48;2;0;128;84m-[0m[48;2;0;188;124m=[0m[48;2;0;182;120m=[0m[48;2;0;188;124m=[0m[48;2;0;163;107m=[0m[48;2;0;3;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;16;11m [0m[48;2;3;156;112m=[0m[48;2;4;178;130m=[0m[48;2;4;173;126m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;1;1m [0m[48;2;1;24;19m [0m[48;2;7;170;132m=[0m[48;2;7;170;134m=[0m[48;2;8;171;136m=[0m[48;2;9;168;135m=[0m[48;2;10;170;138m=[0m[48;2;7;108;89m:[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;7;6m [0m[48;2;12;145;128m=[0m[48;2;14;161;144m=[0m[48;2;15;158;144m=[0m[48;2;15;156;144m=[0m[48;2;17;158;148m=[0m[48;2;12;111;105m-[0m[48;2;0;0;0m [0m[48;2;0;3;2m [0m[48;2;0;0;0m [0m[48;2;4;34;34m [0m[48;2;20;152;153m=[0m[48;2;20;148;152m=[0m[48;2;21;149;154m=[0m[48;2;21;145;152m=[0m[48;2;22;147;156m=[0m[48;2;9;61;65m.[0m[48;2;0;0;0m [0m[48;2;0;4;4m [0m[48;2;0;0;0m [0m[48;2;6;38;43m.[0m[48;2;25;140;159m=[0m[48;2;24;137;158m=[0m[48;2;25;137;159m=[0m[48;2;25;136;160m=[0m[48;2;24;129;152m-[0m[48;2;2;14;17m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;23;109;134m-[0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;27;128;161m=[0m[48;2;28;129;163m=[0m[48;2;23;109;139m-[0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;18;82;111m:[0m[48;2;27;119;160m-[0m[48;2;25;115;156m-[0m[48;2;25;115;156m-[0m[48;2;25;114;157m-[0m[48;2;21;102;141m-[0m[48;2;1;5;7m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;0;0;0m [0m[48;2;11;61;86m.[0m[48;2;19;104;147m-[0m[48;2;17;101;142m-[0m[48;2;16;101;143m-[0m[48;2;15;99;141m-[0m[48;2;14;94;133m:[0m[48;2;1;9;14m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;5;51;71m.[0m[48;2;9;92;130m:[0m[48;2;8;91;128m:[0m[48;2;7;90;127m:[0m[48;2;6;89;125m:[0m[48;2;5;83;119m:[0m[48;2;0;11;16m [0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;1;69;97m:[0m[48;2;0;81;115m:[0m[48;2;0;81;114m:[0m[48;2;0;80;113m:[0m[48;2;0;79;113m:[0m[48;2;0;66;94m.[0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m
[48;2;0;181;119m=[0m[48;2;0;185;122m=[0m[48;2;0;186;123m=[0m[48;2;0;188;124m=[0m[48;2;0;165;109m=[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;32;23m [0m[48;2;3;149;108m-[0m[48;2;5;180;130m=[0m[48;2;4;176;129m=[0m[48;2;6;178;132m=[0m[48;2;4;128;96m-[0m[48;2;0;9;6m [0m[48;2;0;0;0m [0m[48;2;3;81;63m:[0m[48;2;8;173;136m=[0m[48;2;8;169;134m=[0m[48;2;10;171;138m=[0m[48;2;9;168;136m=[0m[48;2;11;169;139m=[0m[48;2;3;48;40m.[0m[48;2;0;3;3m [0m[48;2;0;5;4m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;5;59;53m.[0m[48;2;15;162;145m=[0m[48;2;15;158;144m=[0m[48;2;16;159;147m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;5;44;42m.[0m[48;2;0;2;2m [0m[48;2;0;6;5m [0m[48;2;0;0;0m [0m[48;2;13;100;102m:[0m[48;2;21;150;154m=[0m[48;2;20;146;151m=[0m[48;2;21;147;154m=[0m[48;2;21;146;155m=[0m[48;2;21;134;143m=[0m[48;2;1;9;9m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;18;104;118m-[0m[48;2;25;139;160m=[0m[48;2;25;136;158m=[0m[48;2;25;134;158m=[0m[48;2;26;136;161m=[0m[48;2;14;73;87m:[0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;6;30;37m [0m[48;2;28;131;163m=[0m[48;2;27;128;161m=[0m[48;2;28;130;163m=[0m[48;2;27;126;160m-[0m[48;2;28;128;163m=[0m[48;2;15;68;87m:[0m[48;2;0;1;1m [0m[48;2;0;3;5m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;16;21m [0m[48;2;26;116;156m-[0m[48;2;25;116;158m-[0m[48;2;26;116;158m-[0m[48;2;24;112;154m-[0m[48;2;24;113;156m-[0m[48;2;12;58;81m.[0m[48;2;0;0;1m [0m[48;2;0;3;5m [0m[48;2;0;0;0m [0m[48;2;1;7;9m [0m[48;2;17;97;138m-[0m[48;2;17;102;144m-[0m[48;2;16;101;143m-[0m[48;2;15;98;139m-[0m[48;2;15;99;140m-[0m[48;2;9;60;86m.[0m[48;2;0;0;0m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;0;6;8m [0m[48;2;8;84;119m:[0m[48;2;7;90;127m:[0m[48;2;6;88;125m:[0m[48;2;6;87;122m:[0m[48;2;6;87;124m:[0m[48;2;3;58;81m.[0m[48;2;0;0;0m [0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;24;34m [0m[48;2;1;82;116m:[0m[48;2;0;81;113m:[0m[48;2;0;81;115m:[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;32;46m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m
[48;2;0;161;106m=[0m[48;2;0;188;124m=[0m[48;2;0;184;121m=[0m[48;2;0;185;123m=[0m[48;2;1;187;125m=[0m[48;2;0;110;74m:[0m[48;2;0;89;61m:[0m[48;2;1;103;70m:[0m[48;2;1;119;82m-[0m[48;2;1;119;82m-[0m[48;2;1;89;62m:[0m[48;2;0;46;32m.[0m[48;2;1;89;63m:[0m[48;2;3;173;125m=[0m[48;2;5;180;130m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;3;96;71m:[0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;5;98;77m:[0m[48;2;8;170;135m=[0m[48;2;9;166;133m=[0m[48;2;10;170;138m=[0m[48;2;10;167;137m=[0m[48;2;11;168;140m=[0m[48;2;3;51;43m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;29;26m [0m[48;2;13;147;131m=[0m[48;2;15;158;143m=[0m[48;2;15;157;145m=[0m[48;2;16;156;146m=[0m[48;2;17;157;149m=[0m[48;2;15;130;124m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;25;25m [0m[48;2;20;145;148m=[0m[48;2;20;148;153m=[0m[48;2;21;147;154m=[0m[48;2;21;144;153m=[0m[48;2;23;146;156m=[0m[48;2;12;79;85m:[0m[48;2;0;0;0m [0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;4;25;29m [0m[48;2;24;137;157m=[0m[48;2;25;136;158m=[0m[48;2;25;136;160m=[0m[48;2;25;135;160m=[0m[48;2;27;135;162m=[0m[48;2;3;19;22m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;7;35;44m.[0m[48;2;27;128;161m=[0m[48;2;27;125;159m-[0m[48;2;27;128;162m=[0m[48;2;27;125;160m-[0m[48;2;28;127;163m-[0m[48;2;15;70;91m:[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;8;11m [0m[48;2;20;89;121m:[0m[48;2;25;116;157m-[0m[48;2;25;114;156m-[0m[48;2;24;113;156m-[0m[48;2;23;112;155m-[0m[48;2;23;108;150m-[0m[48;2;2;10;13m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;12;68;97m:[0m[48;2;19;103;145m-[0m[48;2;16;100;142m-[0m[48;2;16;100;142m-[0m[48;2;14;98;138m-[0m[48;2;13;97;137m-[0m[48;2;2;18;26m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;3;34;48m.[0m[48;2;8;90;128m:[0m[48;2;6;88;125m:[0m[48;2;7;89;125m:[0m[48;2;5;86;122m:[0m[48;2;5;86;122m:[0m[48;2;1;21;30m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;12;16m [0m[48;2;0;70;100m:[0m[48;2;0;81;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;73;104m:[0m[48;2;0;4;6m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;56;36m.[0m[48;2;0;183;121m=[0m[48;2;0;187;124m=[0m[48;2;1;187;125m=[0m[48;2;0;184;124m=[0m[48;2;1;185;126m=[0m[48;2;1;110;75m:[0m[48;2;0;61;42m.[0m[48;2;1;71;49m.[0m[48;2;2;156;109m=[0m[48;2;3;182;128m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;5;180;130m=[0m[48;2;4;163;119m=[0m[48;2;4;120;89m-[0m[48;2;1;40;30m.[0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;4;3m [0m[48;2;0;0;0m [0m[48;2;2;46;37m.[0m[48;2;10;171;137m=[0m[48;2;10;170;138m=[0m[48;2;10;168;138m=[0m[48;2;10;165;137m=[0m[48;2;11;164;138m=[0m[48;2;11;145;124m=[0m[48;2;6;84;73m:[0m[48;2;7;82;72m:[0m[48;2;11;119;106m-[0m[48;2;14;157;141m=[0m[48;2;14;144;131m=[0m[48;2;16;159;147m=[0m[48;2;16;157;147m=[0m[48;2;16;154;146m=[0m[48;2;17;153;146m=[0m[48;2;17;142;138m=[0m[48;2;9;73;71m:[0m[48;2;7;59;59m.[0m[48;2;11;86;87m:[0m[48;2;18;136;138m-[0m[48;2;20;147;152m=[0m[48;2;21;146;153m=[0m[48;2;21;145;154m=[0m[48;2;22;144;154m=[0m[48;2;22;141;152m=[0m[48;2;3;19;21m [0m[48;2;0;0;0m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;6;34;40m.[0m[48;2;26;138;160m=[0m[48;2;26;137;161m=[0m[48;2;25;134;159m=[0m[48;2;26;132;159m=[0m[48;2;26;131;159m=[0m[48;2;18;92;113m:[0m[48;2;13;62;76m.[0m[48;2;15;73;92m:[0m[48;2;24;114;143m-[0m[48;2;28;129;163m=[0m[48;2;28;129;163m=[0m[48;2;28;128;163m=[0m[48;2;27;125;161m-[0m[48;2;27;124;160m-[0m[48;2;26;117;154m-[0m[48;2;16;70;92m:[0m[48;2;13;58;78m.[0m[48;2;17;79;106m:[0m[48;2;25;113;152m-[0m[48;2;23;105;142m-[0m[48;2;26;116;158m-[0m[48;2;25;114;157m-[0m[48;2;24;111;154m-[0m[48;2;23;109;151m-[0m[48;2;22;107;150m-[0m[48;2;12;63;88m:[0m[48;2;7;39;55m.[0m[48;2;10;53;76m.[0m[48;2;15;87;122m:[0m[48;2;19;103;146m-[0m[48;2;16;100;141m-[0m[48;2;15;99;140m-[0m[48;2;15;96;136m-[0m[48;2;13;97;137m-[0m[48;2;10;71;101m:[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;2m [0m[48;2;0;0;0m [0m[48;2;3;36;51m.[0m[48;2;8;90;127m:[0m[48;2;6;88;124m:[0m[48;2;5;86;122m:[0m[48;2;4;85;120m:[0m[48;2;4;86;121m:[0m[48;2;2;63;88m.[0m[48;2;0;41;58m.[0m[48;2;1;55;78m.[0m[48;2;0;78;111m:[0m[48;2;1;82;115m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;42;61m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;39;26m.[0m[48;2;0;126;84m-[0m[48;2;0;171;115m=[0m[48;2;1;185;126m=[0m[48;2;2;185;126m=[0m[48;2;2;184;127m=[0m[48;2;2;183;127m=[0m[48;2;3;183;128m=[0m[48;2;3;182;129m=[0m[48;2;4;181;129m=[0m[48;2;4;180;130m=[0m[48;2;4;174;125m=[0m[48;2;4;177;129m=[0m[48;2;3;113;83m-[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;3;60;49m.[0m[48;2;9;141;116m-[0m[48;2;11;168;140m=[0m[48;2;12;167;141m=[0m[48;2;13;166;142m=[0m[48;2;13;165;143m=[0m[48;2;14;164;143m=[0m[48;2;14;163;144m=[0m[48;2;11;121;108m-[0m[48;2;3;39;35m.[0m[48;2;1;14;13m [0m[48;2;13;124;115m-[0m[48;2;17;157;149m=[0m[48;2;18;156;150m=[0m[48;2;18;155;150m=[0m[48;2;19;154;151m=[0m[48;2;20;153;152m=[0m[48;2;19;148;149m=[0m[48;2;17;123;124m-[0m[48;2;21;149;154m=[0m[48;2;22;148;155m=[0m[48;2;22;147;156m=[0m[48;2;23;146;156m=[0m[48;2;23;145;157m=[0m[48;2;16;96;104m:[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;13;70;83m:[0m[48;2;24;126;149m-[0m[48;2;27;135;162m=[0m[48;2;27;134;162m=[0m[48;2;27;133;162m=[0m[48;2;27;132;162m=[0m[48;2;28;131;163m=[0m[48;2;26;123;154m-[0m[48;2;15;71;90m:[0m[48;2;7;35;45m.[0m[48;2;21;96;123m-[0m[48;2;27;125;160m-[0m[48;2;28;126;163m-[0m[48;2;28;124;163m-[0m[48;2;28;123;162m-[0m[48;2;28;122;162m-[0m[48;2;27;120;161m-[0m[48;2;22;99;133m-[0m[48;2;10;46;63m.[0m[48;2;0;4;6m [0m[48;2;15;72;99m:[0m[48;2;24;111;153m-[0m[48;2;24;111;155m-[0m[48;2;23;110;153m-[0m[48;2;22;109;152m-[0m[48;2;21;107;150m-[0m[48;2;20;106;149m-[0m[48;2;15;82;115m:[0m[48;2;14;75;106m:[0m[48;2;17;102;144m-[0m[48;2;16;100;142m-[0m[48;2;15;99;140m-[0m[48;2;14;98;139m-[0m[48;2;13;97;137m:[0m[48;2;3;28;41m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;4;5m [0m[48;2;4;57;80m.[0m[48;2;5;86;121m:[0m[48;2;5;87;122m:[0m[48;2;4;86;121m:[0m[48;2;2;84;119m:[0m[48;2;3;84;119m:[0m[48;2;1;82;117m:[0m[48;2;0;64;90m.[0m[48;2;0;67;95m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;77;110m:[0m[48;2;0;10;15m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;1;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;13;8m [0m[48;2;0;39;26m.[0m[48;2;0;56;38m.[0m[48;2;0;65;45m.[0m[48;2;1;68;47m.[0m[48;2;1;62;44m.[0m[48;2;0;48;34m.[0m[48;2;0;39;28m.[0m[48;2;4;156;113m=[0m[48;2;5;179;131m=[0m[48;2;5;176;130m=[0m[48;2;6;177;133m=[0m[48;2;6;151;114m=[0m[48;2;3;94;71m:[0m[48;2;2;54;42m.[0m[48;2;2;46;36m.[0m[48;2;1;35;27m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;2;2m [0m[48;2;2;31;26m [0m[48;2;3;52;44m.[0m[48;2;4;60;51m.[0m[48;2;4;54;47m.[0m[48;2;3;35;31m [0m[48;2;1;10;9m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;31;29m [0m[48;2;6;51;50m.[0m[48;2;6;56;55m.[0m[48;2;6;48;48m.[0m[48;2;4;30;30m [0m[48;2;0;7;7m [0m[48;2;0;0;0m [0m[48;2;5;37;39m.[0m[48;2;5;38;40m.[0m[48;2;6;38;40m.[0m[48;2;5;37;40m.[0m[48;2;6;37;41m.[0m[48;2;2;12;14m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;2;10;12m [0m[48;2;6;33;40m.[0m[48;2;9;45;55m.[0m[48;2;9;48;59m.[0m[48;2;8;40;49m.[0m[48;2;5;23;29m [0m[48;2;0;2;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;4;18;23m [0m[48;2;8;36;47m.[0m[48;2;10;44;58m.[0m[48;2;9;42;56m.[0m[48;2;6;30;40m [0m[48;2;2;13;17m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;3;17;23m [0m[48;2;7;34;47m.[0m[48;2;8;39;55m.[0m[48;2;7;36;50m.[0m[48;2;4;24;35m [0m[48;2;1;9;13m [0m[48;2;0;0;0m [0m[48;2;1;11;15m [0m[48;2;4;26;37m [0m[48;2;4;25;36m [0m[48;2;3;25;36m [0m[48;2;3;25;35m [0m[48;2;3;24;34m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;11;15m [0m[48;2;1;20;29m [0m[48;2;1;37;52m.[0m[48;2;1;57;80m.[0m[48;2;1;61;86m.[0m[48;2;0;52;73m.[0m[48;2;0;44;62m.[0m[48;2;0;75;107m:[0m[48;2;0;79;113m:[0m[48;2;0;79;113m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;1;0m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;26;19m [0m[48;2;4;131;97m-[0m[48;2;5;175;131m=[0m[48;2;7;176;133m=[0m[48;2;7;175;134m=[0m[48;2;8;174;135m=[0m[48;2;8;173;136m=[0m[48;2;7;151;120m=[0m[48;2;2;49;39m.[0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;1;42;59m.[0m[48;2;2;68;95m:[0m[48;2;1;46;66m.[0m[48;2;0;21;30m [0m[48;2;0;3;5m [0m[48;2;0;40;56m.[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;80;114m:[0m[48;2;0;78;111m:[0m[48;2;0;80;114m:[0m[48;2;0;18;26m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;1;30;22m [0m[48;2;2;57;44m.[0m[48;2;3;68;52m.[0m[48;2;2;63;49m.[0m[48;2;2;42;33m.[0m[48;2;0;3;3m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;2m [0m[48;2;0;1;2m [0m[48;2;0;1;1m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;1;48;68m.[0m[48;2;3;84;119m:[0m[48;2;1;53;74m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;14;21m [0m[48;2;0;73;104m:[0m[48;2;0;79;112m:[0m[48;2;0;78;112m:[0m[48;2;0;79;113m:[0m[48;2;0;80;114m:[0m[48;2;0;53;76m.[0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;1m [0m[48;2;0;0;0m [0m[48;2;1;37;52m.[0m[48;2;2;83;118m:[0m[48;2;0;80;114m:[0m[48;2;0;64;90m.[0m[48;2;0;61;87m.[0m[48;2;0;79;112m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;80;114m:[0m[48;2;0;79;113m:[0m[48;2;0;50;72m.[0m[48;2;0;3;4m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m
[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;1;1m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;2m [0m[48;2;0;2;1m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;27;38m [0m[48;2;0;59;83m.[0m[48;2;0;77;109m:[0m[48;2;0;81;114m:[0m[48;2;0;78;112m:[0m[48;2;0;74;105m:[0m[48;2;0;65;93m.[0m[48;2;0;48;68m.[0m[48;2;0;20;29m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m[48;2;0;0;0m [0m


[49m[32mTextRazor -- TextRazor is a Qanary component 
[49m[92mFramework@GitHub:       https://github.com/WDAqua/Qanary 
[49m[36mComponents@GitHub:      https://github.com/WDAqua/Qanary-question-answering-components
[49m[94mComponent Version:      3.4.0       
[49m[34mSpring Boot Version:    2.6.7      
[47m[30mQanary System endpoint: http://localhost:8080 [49m[39m

[2m2023-10-27 13:38:55.741[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Starting Application v3.4.0 using Java 21 on fedora with PID 30122 (/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/target/qanary-component-NER-TextRazor-3.4.0.jar started by dennisschiese in /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor)
[2m2023-10-27 13:38:55.795[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m Running with Spring Boot v2.6.7, Spring v5.3.19
[2m2023-10-27 13:38:55.800[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.textrazor.ner.Application       [0;39m [2m:[0;39m The following 1 profile is active: "local"
[2m2023-10-27 13:39:19.000[0;39m [33m WARN[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse: initialized
[2m2023-10-27 13:39:19.573[0;39m [33m WARN[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m eu.wdaqua.qanary.communications.RestTemplateWithCaching was initialized
[2m2023-10-27 13:39:19.647[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1568159
[2m2023-10-27 13:39:19.669[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:39:19.769[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:39:19.889[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:39:19.901[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:39:19.921[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the birthplace of Albert Einstein?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:39:19.967[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=726781760
[2m2023-10-27 13:39:20.382[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@54709809
[2m2023-10-27 13:39:20.598[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:39:20.627[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:39:20.651[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:39:20.976[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}]},"time":0.004575,"ok":true}
[2m2023-10-27 13:39:21.002[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}
[2m2023-10-27 13:39:21.009[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 13:39:21.011[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 41
[2m2023-10-27 13:39:21.011[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:39:21.157[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@9573b3b
[2m2023-10-27 13:39:21.158[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m API live testing is activated
[2m2023-10-27 13:39:21.159[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:39:21.168[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:39:21.179[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:39:21.180[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the birthplace of Albert Einstein?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:39:21.180[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=726781760
[2m2023-10-27 13:39:21.189[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@544630b7
[2m2023-10-27 13:39:21.445[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:39:21.451[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:39:21.451[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:39:21.456[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}]},"time":0.003601,"ok":true}
[2m2023-10-27 13:39:21.456[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Scientist"],"matchingTokens":[5,6],"entityId":"Albert Einstein","freebaseTypes":["/astronomy/astronomer","/award/award_winner","/film/person_or_entity_appearing_in_film","/music/group_member","/education/academic","/organization/organization_founder","/business/board_member","/organization/organization_member","/people/family_member","/symbols/name_source","/book/book_subject","/award/hall_of_fame_inductee","/food/diet_follower","/book/author","/people/deceased_person","/fictional_universe/person_in_fiction","/visual_art/art_subject","/music/artist","/influence/influence_node","/people/person","/law/inventor","/award/ranked_item","/film/film_subject"],"confidenceScore":2.791,"wikiLink":"http://en.wikipedia.org/wiki/Albert_Einstein","matchedText":"Albert Einstein","freebaseId":"/m/0jcx","relevanceScore":0,"entityEnglishId":"Albert Einstein","startingPos":26,"endingPos":41,"wikidataId":"Q937"}
[2m2023-10-27 13:39:21.459[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 13:39:21.460[0;39m [32mDEBUG[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 41
[2m2023-10-27 13:39:21.460[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Functionality works as expected
[2m2023-10-27 13:39:21.461[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m qanaryComponent: eu.wdaqua.qanary.component.textrazor.ner.TextRazor@1095f122
[2m2023-10-27 13:39:21.521[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.q.c.QanaryComponentConfiguration    [0;39m [2m:[0;39m Current Component Configuration: 
server.host                              = null
server.port                              = 8086
spring.application.name                  = TextRazor
spring.application.description           = TextRazor is a Qanary component
spring.boot.admin.url                    = http://localhost:8080
spring.boot.admin.client.url             = http://localhost:8080

[2m2023-10-27 13:39:21.668[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m location of component-description.ttl: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl
[2m2023-10-27 13:39:25.847[0;39m [33m WARN[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36mq.c.QanaryComponentDescriptionController[0;39m [2m:[0;39m could not find a Turtle service description at '/home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl': org.apache.jena.riot.RiotNotFoundException: Not found: /home/dennisschiese/wseresearch/forked_repos/Qanary-question-answering-components/qanary-component-NER-TextRazor/src/main/resources/component-description.ttl. Please consider to store a component description file to enable automatic pipeline compositions.
[2m2023-10-27 13:39:25.970[0;39m [32m INFO[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36me.w.qanary.commons.config.CacheConfig   [0;39m [2m:[0;39m cacheManager configuration: maximumSize=10000,expireAfterAccess=5s
[2m2023-10-27 13:39:32.490[0;39m [33m WARN[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36mConfigServletWebServerApplicationContext[0;39m [2m:[0;39m Exception encountered during context initialization - cancelling refresh attempt: org.springframework.context.ApplicationContextException: Failed to start bean 'webServerStartStop'; nested exception is org.springframework.boot.web.server.PortInUseException: Port 8086 is already in use
[2m2023-10-27 13:39:32.821[0;39m [31mERROR[0;39m [35m30122[0;39m [2m---[0;39m [2m[           main][0;39m [36mo.s.b.d.LoggingFailureAnalysisReporter  [0;39m [2m:[0;39m 

***************************
APPLICATION FAILED TO START
***************************

Description:

Web server failed to start. Port 8086 was already in use.

Action:

Identify and stop the process that's listening on port 8086 or configure this application to listen on another port.

[2m2023-10-27 13:54:11.902[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"}
[2m2023-10-27 13:54:11.999[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"}
[2m2023-10-27 13:54:12.412[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"},"inGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6","outGraph":"urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6"}
[2m2023-10-27 13:54:12.955[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@37b2e5ac
[2m2023-10-27 13:54:13.114[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7f3aaf78
[2m2023-10-27 13:54:13.152[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:54:13.513[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:13.514[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:13.950[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236
[2m2023-10-27 13:54:13.951[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236 found in urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6 at http://localhost:8080/sparql
[2m2023-10-27 13:54:13.969[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Did Kobe Bryant leave the Lakers when LeBron James joined that team? 
[2m2023-10-27 13:54:13.969[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Did Kobe Bryant leave the Lakers when LeBron James joined that team?
[2m2023-10-27 13:54:13.973[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:54:13.974[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:54:13.975[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:54:13.975[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Did Kobe Bryant leave the Lakers when LeBron James joined that team?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:54:14.261[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=647116524
[2m2023-10-27 13:54:14.447[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6bcbd5cc
[2m2023-10-27 13:54:14.672[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:54:14.672[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:54:14.672[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:54:14.672[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Organisation","SportsTeam","BasketballTeam"],"matchingTokens":[5],"entityId":"Los Angeles Lakers","freebaseTypes":["/sports/sports_team","/basketball/basketball_team","/business/employer","/organization/organization","/sports/professional_sports_team","/award/award_nominee","/business/business_operation","/award/award_winner"],"confidenceScore":38.64,"wikiLink":"http://en.wikipedia.org/wiki/Los_Angeles_Lakers","matchedText":"Lakers","freebaseId":"/m/0jmk7","relevanceScore":0.3103,"entityEnglishId":"Los Angeles Lakers","startingPos":26,"endingPos":32,"wikidataId":"Q121783","crunchbaseId":"los-angeles-lakers"},{"id":1,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[7,8],"entityId":"LeBron James","freebaseTypes":["/tv/tv_program_guest","/people/person","/sports/drafted_athlete","/film/person_or_entity_appearing_in_film","/tv/tv_producer","/tv/tv_actor","/award/award_nominee","/tv/tv_writer","/music/artist","/tv/tv_personality","/film/producer","/film/actor","/basketball/basketball_player","/sports/pro_athlete","/award/award_winner","/olympics/olympic_athlete","/business/product_endorser","/book/author","/sports/sports_award_winner","/book/book_subject","/people/measured_person","/business/sponsored_recipient"],"confidenceScore":36.72,"wikiLink":"http://en.wikipedia.org/wiki/LeBron_James","matchedText":"LeBron James","freebaseId":"/m/01jz6d","relevanceScore":0.2458,"entityEnglishId":"LeBron James","startingPos":38,"endingPos":50,"wikidataId":"Q36159"},{"id":2,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[1,2],"entityId":"Kobe Bryant","freebaseTypes":["/film/film_subject","/sports/sports_award_winner","/olympics/olympic_athlete","/basketball/basketball_player","/sports/pro_athlete","/business/product_endorser","/tv/tv_personality","/business/sponsored_recipient","/tv/tv_actor","/film/person_or_entity_appearing_in_film","/music/artist","/people/person","/sports/drafted_athlete","/award/award_nominee","/music/group_member","/celebrities/celebrity","/people/measured_person","/award/award_winner","/music/featured_artist","/organization/organization","/business/employer"],"confidenceScore":48.08,"wikiLink":"http://en.wikipedia.org/wiki/Kobe_Bryant","matchedText":"Kobe Bryant","freebaseId":"/m/0cn_06n","relevanceScore":0.3447,"entityEnglishId":"Kobe Bryant","startingPos":4,"endingPos":15,"wikidataId":"Q25369","crunchbaseId":"black-mamba"}]},"time":0.007004,"ok":true}
[2m2023-10-27 13:54:14.672[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Organisation","SportsTeam","BasketballTeam"],"matchingTokens":[5],"entityId":"Los Angeles Lakers","freebaseTypes":["/sports/sports_team","/basketball/basketball_team","/business/employer","/organization/organization","/sports/professional_sports_team","/award/award_nominee","/business/business_operation","/award/award_winner"],"confidenceScore":38.64,"wikiLink":"http://en.wikipedia.org/wiki/Los_Angeles_Lakers","matchedText":"Lakers","freebaseId":"/m/0jmk7","relevanceScore":0.3103,"entityEnglishId":"Los Angeles Lakers","startingPos":26,"endingPos":32,"wikidataId":"Q121783","crunchbaseId":"los-angeles-lakers"}
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 32
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[7,8],"entityId":"LeBron James","freebaseTypes":["/tv/tv_program_guest","/people/person","/sports/drafted_athlete","/film/person_or_entity_appearing_in_film","/tv/tv_producer","/tv/tv_actor","/award/award_nominee","/tv/tv_writer","/music/artist","/tv/tv_personality","/film/producer","/film/actor","/basketball/basketball_player","/sports/pro_athlete","/award/award_winner","/olympics/olympic_athlete","/business/product_endorser","/book/author","/sports/sports_award_winner","/book/book_subject","/people/measured_person","/business/sponsored_recipient"],"confidenceScore":36.72,"wikiLink":"http://en.wikipedia.org/wiki/LeBron_James","matchedText":"LeBron James","freebaseId":"/m/01jz6d","relevanceScore":0.2458,"entityEnglishId":"LeBron James","startingPos":38,"endingPos":50,"wikidataId":"Q36159"}
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 38
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 50
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":2,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[1,2],"entityId":"Kobe Bryant","freebaseTypes":["/film/film_subject","/sports/sports_award_winner","/olympics/olympic_athlete","/basketball/basketball_player","/sports/pro_athlete","/business/product_endorser","/tv/tv_personality","/business/sponsored_recipient","/tv/tv_actor","/film/person_or_entity_appearing_in_film","/music/artist","/people/person","/sports/drafted_athlete","/award/award_nominee","/music/group_member","/celebrities/celebrity","/people/measured_person","/award/award_winner","/music/featured_artist","/organization/organization","/business/employer"],"confidenceScore":48.08,"wikiLink":"http://en.wikipedia.org/wiki/Kobe_Bryant","matchedText":"Kobe Bryant","freebaseId":"/m/0cn_06n","relevanceScore":0.3447,"entityEnglishId":"Kobe Bryant","startingPos":4,"endingPos":15,"wikidataId":"Q25369","crunchbaseId":"black-mamba"}
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 4
[2m2023-10-27 13:54:14.673[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 15
[2m2023-10-27 13:54:14.681[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236
[2m2023-10-27 13:54:14.681[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5384080f
[2m2023-10-27 13:54:14.681[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:54:14.693[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "26"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.694[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "26"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.694[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "26"^^xsd:nonNegativeInteger .
    _:b1 oa:end "32"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.703[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@cdb6461
[2m2023-10-27 13:54:14.704[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:54:14.706[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.706[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.706[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "50"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.714[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@463b285c
[2m2023-10-27 13:54:14.714[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:54:14.716[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.717[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.717[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:4efabb51-2b75-4ee1-be38-6662ff91d0e6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3c4e8088-cfe8-4547-9d34-7ba28f9ec236> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "4"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:54:14.723[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 2745 ms
[2m2023-10-27 13:54:17.575[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc","outGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc"}
[2m2023-10-27 13:54:17.576[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc","outGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc"}
[2m2023-10-27 13:54:17.576[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc"},"inGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc","outGraph":"urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc"}
[2m2023-10-27 13:54:17.576[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@7f27a5aa
[2m2023-10-27 13:54:17.584[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@25c21e8a
[2m2023-10-27 13:54:17.585[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:54:17.586[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:17.587[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:54:17.596[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_3c9bfd97-e166-426d-b320-890e99c0453d
[2m2023-10-27 13:54:17.597[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_3c9bfd97-e166-426d-b320-890e99c0453d found in urn:graph:86432fd6-eada-44da-8637-fd3539bcc4cc at http://localhost:8080/sparql
[2m2023-10-27 13:54:17.599[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many countries have never been members of the UN? 
[2m2023-10-27 13:54:17.599[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question How many countries have never been members of the UN?
[2m2023-10-27 13:54:17.599[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:54:17.599[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:54:17.599[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:54:17.599[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[How many countries have never been members of the UN?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:54:17.600[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=369039952
[2m2023-10-27 13:54:17.601[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@7930c74
[2m2023-10-27 13:54:17.818[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:54:17.818[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:54:17.818[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:54:17.819[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true},"time":0.002991,"ok":true}
[2m2023-10-27 13:54:17.819[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 243 ms
[2m2023-10-27 13:55:25.902[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f","outGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f"}
[2m2023-10-27 13:55:25.902[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f","outGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f"}
[2m2023-10-27 13:55:25.902[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f"},"inGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f","outGraph":"urn:graph:877984f8-f896-470c-a826-556572fb489f"}
[2m2023-10-27 13:55:25.902[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@4ece3469
[2m2023-10-27 13:55:25.920[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4009d3c0
[2m2023-10-27 13:55:25.920[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:55:25.922[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:877984f8-f896-470c-a826-556572fb489f>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:55:25.922[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:877984f8-f896-470c-a826-556572fb489f>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:55:25.930[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_ff73818d-9278-4ec0-854f-48e5b0a26936
[2m2023-10-27 13:55:25.930[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_ff73818d-9278-4ec0-854f-48e5b0a26936 found in urn:graph:877984f8-f896-470c-a826-556572fb489f at http://localhost:8080/sparql
[2m2023-10-27 13:55:25.933[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What is the website of NPR's “Tiny Desk Concert”? 
[2m2023-10-27 13:55:25.933[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question What is the website of NPR's “Tiny Desk Concert”?
[2m2023-10-27 13:55:25.933[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:55:25.933[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:55:25.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:55:25.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the website of NPR's “Tiny Desk Concert”?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:55:25.934[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=143736597
[2m2023-10-27 13:55:26.097[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@44365f19
[2m2023-10-27 13:55:26.309[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:55:26.309[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:55:26.310[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:55:26.310[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Organisation","Broadcaster","BroadcastNetwork","TelevisionStation"],"matchingTokens":[5],"entityId":"NPR","freebaseTypes":["/computer/software_developer","/award/award_winner","/broadcast/producer","/business/employer","/media_common/quotation_source","/book/book_subject","/government/polling_authority","/business/customer","/business/consumer_company","/business/business_operation","/organization/organization","/broadcast/radio_network","/organization/non_profit_organization","/internet/social_network_user"],"confidenceScore":2.935,"wikiLink":"http://en.wikipedia.org/wiki/NPR","matchedText":"NPR","freebaseId":"/m/0c0sl","relevanceScore":0,"entityEnglishId":"NPR","startingPos":23,"endingPos":26,"wikidataId":"Q671510","crunchbaseId":"npr","permid":"4296094825"}]},"time":0.004029,"ok":true}
[2m2023-10-27 13:55:26.310[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Organisation","Broadcaster","BroadcastNetwork","TelevisionStation"],"matchingTokens":[5],"entityId":"NPR","freebaseTypes":["/computer/software_developer","/award/award_winner","/broadcast/producer","/business/employer","/media_common/quotation_source","/book/book_subject","/government/polling_authority","/business/customer","/business/consumer_company","/business/business_operation","/organization/organization","/broadcast/radio_network","/organization/non_profit_organization","/internet/social_network_user"],"confidenceScore":2.935,"wikiLink":"http://en.wikipedia.org/wiki/NPR","matchedText":"NPR","freebaseId":"/m/0c0sl","relevanceScore":0,"entityEnglishId":"NPR","startingPos":23,"endingPos":26,"wikidataId":"Q671510","crunchbaseId":"npr","permid":"4296094825"}
[2m2023-10-27 13:55:26.310[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 23
[2m2023-10-27 13:55:26.312[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 26
[2m2023-10-27 13:55:26.318[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_ff73818d-9278-4ec0-854f-48e5b0a26936
[2m2023-10-27 13:55:26.318[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@134d9fb
[2m2023-10-27 13:55:26.318[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:55:26.320[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:877984f8-f896-470c-a826-556572fb489f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ff73818d-9278-4ec0-854f-48e5b0a26936> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:55:26.320[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:877984f8-f896-470c-a826-556572fb489f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ff73818d-9278-4ec0-854f-48e5b0a26936> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:55:26.320[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:877984f8-f896-470c-a826-556572fb489f> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ff73818d-9278-4ec0-854f-48e5b0a26936> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "26"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:55:26.328[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 426 ms
[2m2023-10-27 13:57:22.027[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681","outGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681"}
[2m2023-10-27 13:57:22.030[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681","outGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681"}
[2m2023-10-27 13:57:22.031[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681"},"inGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681","outGraph":"urn:graph:e77820f2-c070-4be9-8278-3399cf0da681"}
[2m2023-10-27 13:57:22.031[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@7c17a909
[2m2023-10-27 13:57:22.052[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@72d058fb
[2m2023-10-27 13:57:22.052[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:57:22.054[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e77820f2-c070-4be9-8278-3399cf0da681>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:22.054[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e77820f2-c070-4be9-8278-3399cf0da681>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:22.068[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_038d7036-1f4a-49c6-adea-9156f30ea3cb
[2m2023-10-27 13:57:22.068[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_038d7036-1f4a-49c6-adea-9156f30ea3cb found in urn:graph:e77820f2-c070-4be9-8278-3399cf0da681 at http://localhost:8080/sparql
[2m2023-10-27 13:57:22.071[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What is the twitter name of Running Wild? 
[2m2023-10-27 13:57:22.071[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question What is the twitter name of Running Wild?
[2m2023-10-27 13:57:22.071[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:57:22.072[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:57:22.072[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:57:22.072[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the twitter name of Running Wild?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:57:22.072[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=481231456
[2m2023-10-27 13:57:22.212[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@76efc279
[2m2023-10-27 13:57:22.424[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:57:22.425[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:57:22.425[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:57:22.425[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Work","Agent","Website","Organisation","Company"],"matchingTokens":[3],"entityId":"Twitter","freebaseTypes":["/media_common/quotation_source","/business/employer","/award/award_nominated_work","/book/book_subject","/media_common/quotation_subject","/organization/organization_partnership","/business/customer","/award/award_winning_work","/internet/website"],"confidenceScore":1.506,"wikiLink":"http://en.wikipedia.org/wiki/Twitter","matchedText":"twitter","freebaseId":"/m/0289n8t","relevanceScore":0,"entityEnglishId":"Twitter","startingPos":12,"endingPos":19,"wikidataId":"Q918","crunchbaseId":"twitter","lei":"549300I8RX485XMK6836","permid":"4296301199"}]},"time":0.00579,"ok":true}
[2m2023-10-27 13:57:22.433[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Work","Agent","Website","Organisation","Company"],"matchingTokens":[3],"entityId":"Twitter","freebaseTypes":["/media_common/quotation_source","/business/employer","/award/award_nominated_work","/book/book_subject","/media_common/quotation_subject","/organization/organization_partnership","/business/customer","/award/award_winning_work","/internet/website"],"confidenceScore":1.506,"wikiLink":"http://en.wikipedia.org/wiki/Twitter","matchedText":"twitter","freebaseId":"/m/0289n8t","relevanceScore":0,"entityEnglishId":"Twitter","startingPos":12,"endingPos":19,"wikidataId":"Q918","crunchbaseId":"twitter","lei":"549300I8RX485XMK6836","permid":"4296301199"}
[2m2023-10-27 13:57:22.434[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 12
[2m2023-10-27 13:57:22.434[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 19
[2m2023-10-27 13:57:22.455[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_038d7036-1f4a-49c6-adea-9156f30ea3cb
[2m2023-10-27 13:57:22.457[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@33ed52c0
[2m2023-10-27 13:57:22.457[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:57:22.465[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e77820f2-c070-4be9-8278-3399cf0da681> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_038d7036-1f4a-49c6-adea-9156f30ea3cb> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:22.466[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e77820f2-c070-4be9-8278-3399cf0da681> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_038d7036-1f4a-49c6-adea-9156f30ea3cb> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:22.466[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e77820f2-c070-4be9-8278-3399cf0da681> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_038d7036-1f4a-49c6-adea-9156f30ea3cb> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "12"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:57:22.485[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-6][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 455 ms
[2m2023-10-27 13:57:29.905[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0","outGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0"}
[2m2023-10-27 13:57:29.905[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0","outGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0"}
[2m2023-10-27 13:57:29.905[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0"},"inGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0","outGraph":"urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0"}
[2m2023-10-27 13:57:29.906[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@3eabd903
[2m2023-10-27 13:57:29.937[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@306c20a6
[2m2023-10-27 13:57:29.937[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:57:29.948[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:29.949[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:57:29.974[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_e5eacb42-e581-4f16-abae-707c3688e999
[2m2023-10-27 13:57:29.975[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_e5eacb42-e581-4f16-abae-707c3688e999 found in urn:graph:622817a4-c885-4b5b-9312-be8da002f1d0 at http://localhost:8080/sparql
[2m2023-10-27 13:57:29.985[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many different colors can water take? 
[2m2023-10-27 13:57:29.986[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question How many different colors can water take?
[2m2023-10-27 13:57:29.986[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:57:29.986[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:57:29.986[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:57:29.987[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[How many different colors can water take?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:57:29.987[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1937681384
[2m2023-10-27 13:57:30.098[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3453b273
[2m2023-10-27 13:57:30.316[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:57:30.317[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:57:30.317[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:57:30.317[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true},"time":0.008865,"ok":true}
[2m2023-10-27 13:57:30.317[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 412 ms
[2m2023-10-27 13:58:04.598[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6","outGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6"}
[2m2023-10-27 13:58:04.598[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6","outGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6"}
[2m2023-10-27 13:58:04.598[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6"},"inGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6","outGraph":"urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6"}
[2m2023-10-27 13:58:04.598[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@50a8452d
[2m2023-10-27 13:58:04.605[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5e6fb148
[2m2023-10-27 13:58:04.606[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 13:58:04.607[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:58:04.607[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 13:58:04.614[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db
[2m2023-10-27 13:58:04.614[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db found in urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6 at http://localhost:8080/sparql
[2m2023-10-27 13:58:04.616[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Who is the oldest cast member of the Netflix show “Queer Eye” ? 
[2m2023-10-27 13:58:04.616[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Who is the oldest cast member of the Netflix show “Queer Eye” ?
[2m2023-10-27 13:58:04.616[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 13:58:04.616[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 13:58:04.616[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 13:58:04.616[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Who is the oldest cast member of the Netflix show “Queer Eye” ?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 13:58:04.616[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=264905833
[2m2023-10-27 13:58:04.762[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@5a502e5d
[2m2023-10-27 13:58:05.003[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 13:58:05.003[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 13:58:05.003[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 13:58:05.003[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Work","Agent","Website","Organisation","Company"],"matchingTokens":[8],"entityId":"Netflix","freebaseTypes":["/business/business_operation","/award/award_nominee","/business/issuer","/business/employer","/award/award_winner","/venture_capital/venture_funded_company","/tv/tv_network","/internet/website_owner","/dataworld/information_source","/organization/organization"],"confidenceScore":4.163,"wikiLink":"http://en.wikipedia.org/wiki/Netflix","matchedText":"Netflix","freebaseId":"/m/017rf_","relevanceScore":0.01622,"entityEnglishId":"Netflix","startingPos":37,"endingPos":44,"wikidataId":"Q907311","crunchbaseId":"netflix","lei":"549300Y7VHGU0I7CE873","figi":"BBG001SF6L46","permid":"4295902158"},{"id":1,"type":["Work","TelevisionShow"],"matchingTokens":[10,11,12,13],"entityId":"Queer Eye (2018 TV series)","freebaseTypes":["/tv/tv_program"],"confidenceScore":1.209,"wikiLink":"http://en.wikipedia.org/wiki/Queer_Eye_(2018_TV_series)","matchedText":"“Queer Eye”","freebaseId":"","relevanceScore":0.2218,"entityEnglishId":"Queer Eye (2018 TV series)","startingPos":50,"endingPos":61,"wikidataId":"Q48817408"}]},"time":0.006571,"ok":true}
[2m2023-10-27 13:58:05.004[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Work","Agent","Website","Organisation","Company"],"matchingTokens":[8],"entityId":"Netflix","freebaseTypes":["/business/business_operation","/award/award_nominee","/business/issuer","/business/employer","/award/award_winner","/venture_capital/venture_funded_company","/tv/tv_network","/internet/website_owner","/dataworld/information_source","/organization/organization"],"confidenceScore":4.163,"wikiLink":"http://en.wikipedia.org/wiki/Netflix","matchedText":"Netflix","freebaseId":"/m/017rf_","relevanceScore":0.01622,"entityEnglishId":"Netflix","startingPos":37,"endingPos":44,"wikidataId":"Q907311","crunchbaseId":"netflix","lei":"549300Y7VHGU0I7CE873","figi":"BBG001SF6L46","permid":"4295902158"}
[2m2023-10-27 13:58:05.004[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 37
[2m2023-10-27 13:58:05.004[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 44
[2m2023-10-27 13:58:05.004[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Work","TelevisionShow"],"matchingTokens":[10,11,12,13],"entityId":"Queer Eye (2018 TV series)","freebaseTypes":["/tv/tv_program"],"confidenceScore":1.209,"wikiLink":"http://en.wikipedia.org/wiki/Queer_Eye_(2018_TV_series)","matchedText":"“Queer Eye”","freebaseId":"","relevanceScore":0.2218,"entityEnglishId":"Queer Eye (2018 TV series)","startingPos":50,"endingPos":61,"wikidataId":"Q48817408"}
[2m2023-10-27 13:58:05.004[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 50
[2m2023-10-27 13:58:05.004[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 61
[2m2023-10-27 13:58:05.009[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db
[2m2023-10-27 13:58:05.009[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1f52bb73
[2m2023-10-27 13:58:05.009[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:58:05.012[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "37"^^xsd:nonNegativeInteger .
    _:b1 oa:end "44"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:05.012[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "37"^^xsd:nonNegativeInteger .
    _:b1 oa:end "44"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:05.012[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "37"^^xsd:nonNegativeInteger .
    _:b1 oa:end "44"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:05.019[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@dc10499
[2m2023-10-27 13:58:05.019[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 13:58:05.021[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "50"^^xsd:nonNegativeInteger .
    _:b1 oa:end "61"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:05.021[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "50"^^xsd:nonNegativeInteger .
    _:b1 oa:end "61"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:05.021[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:905a363b-86dd-49fe-aa2c-c77f7c560ad6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_b9623dc5-97f5-497d-b3c7-ab106387c0db> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "50"^^xsd:nonNegativeInteger .
    _:b1 oa:end "61"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 13:58:05.027[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 429 ms
[2m2023-10-27 14:00:13.271[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a","outGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a"}
[2m2023-10-27 14:00:13.271[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a","outGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a"}
[2m2023-10-27 14:00:13.271[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a"},"inGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a","outGraph":"urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a"}
[2m2023-10-27 14:00:13.272[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@3ee6c8c8
[2m2023-10-27 14:00:13.282[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@307f9b07
[2m2023-10-27 14:00:13.282[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:00:13.283[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:13.284[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:13.290[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d
[2m2023-10-27 14:00:13.290[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d found in urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a at http://localhost:8080/sparql
[2m2023-10-27 14:00:13.292[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Who was the fellow Hobbit who was an enemy of Frodo? 
[2m2023-10-27 14:00:13.292[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Who was the fellow Hobbit who was an enemy of Frodo?
[2m2023-10-27 14:00:13.292[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:00:13.293[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:00:13.293[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:00:13.293[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Who was the fellow Hobbit who was an enemy of Frodo?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:00:13.293[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-2050175224
[2m2023-10-27 14:00:13.448[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@4647d486
[2m2023-10-27 14:00:14.000[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:00:14.000[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:00:14.001[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","FictionalCharacter"],"matchingTokens":[10],"entityId":"Frodo Baggins","freebaseTypes":["/theater/theater_character","/fictional_universe/fictional_character","/book/book_character","/fictional_universe/fictional_employer","/film/film_character"],"confidenceScore":6.111,"wikiLink":"http://en.wikipedia.org/wiki/Frodo_Baggins","matchedText":"Frodo","freebaseId":"/m/02vzw","relevanceScore":0.3331,"entityEnglishId":"Frodo Baggins","startingPos":46,"endingPos":51,"wikidataId":"Q177329"},{"id":1,"matchingTokens":[4],"entityId":"Hobbit","freebaseTypes":["/fictional_universe/character_species","/book/book_subject","/film/film_subject"],"confidenceScore":9.628,"wikiLink":"http://en.wikipedia.org/wiki/Hobbit","matchedText":"Hobbit","freebaseId":"/m/0g01s","relevanceScore":0.2816,"entityEnglishId":"Hobbit","startingPos":19,"endingPos":25,"wikidataId":"Q74359"}]},"time":0.006496,"ok":true}
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","FictionalCharacter"],"matchingTokens":[10],"entityId":"Frodo Baggins","freebaseTypes":["/theater/theater_character","/fictional_universe/fictional_character","/book/book_character","/fictional_universe/fictional_employer","/film/film_character"],"confidenceScore":6.111,"wikiLink":"http://en.wikipedia.org/wiki/Frodo_Baggins","matchedText":"Frodo","freebaseId":"/m/02vzw","relevanceScore":0.3331,"entityEnglishId":"Frodo Baggins","startingPos":46,"endingPos":51,"wikidataId":"Q177329"}
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 46
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 51
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"matchingTokens":[4],"entityId":"Hobbit","freebaseTypes":["/fictional_universe/character_species","/book/book_subject","/film/film_subject"],"confidenceScore":9.628,"wikiLink":"http://en.wikipedia.org/wiki/Hobbit","matchedText":"Hobbit","freebaseId":"/m/0g01s","relevanceScore":0.2816,"entityEnglishId":"Hobbit","startingPos":19,"endingPos":25,"wikidataId":"Q74359"}
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 19
[2m2023-10-27 14:00:14.001[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 25
[2m2023-10-27 14:00:14.007[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d
[2m2023-10-27 14:00:14.007[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@611b26b4
[2m2023-10-27 14:00:14.007[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:14.009[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "46"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:14.011[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "46"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:14.011[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "46"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:14.022[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@693312d7
[2m2023-10-27 14:00:14.023[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:14.026[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "19"^^xsd:nonNegativeInteger .
    _:b1 oa:end "25"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:14.026[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "19"^^xsd:nonNegativeInteger .
    _:b1 oa:end "25"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:14.027[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7a2c2d18-e5ce-4ee6-adae-ecaf6100915a> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2b029a22-5437-45fe-bc61-395a4f11a44d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "19"^^xsd:nonNegativeInteger .
    _:b1 oa:end "25"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:14.039[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 768 ms
[2m2023-10-27 14:00:20.826[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104","outGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104"}
[2m2023-10-27 14:00:20.826[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104","outGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104"}
[2m2023-10-27 14:00:20.827[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104"},"inGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104","outGraph":"urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104"}
[2m2023-10-27 14:00:20.827[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@2e870198
[2m2023-10-27 14:00:20.921[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@75fee0d3
[2m2023-10-27 14:00:20.922[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:00:20.922[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:20.923[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:20.930[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_49cb4b80-062e-4521-be09-283d1d2de152
[2m2023-10-27 14:00:20.930[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_49cb4b80-062e-4521-be09-283d1d2de152 found in urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104 at http://localhost:8080/sparql
[2m2023-10-27 14:00:20.933[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Through which countries does the Danube go? 
[2m2023-10-27 14:00:20.934[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Through which countries does the Danube go?
[2m2023-10-27 14:00:20.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:00:20.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:00:20.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:00:20.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Through which countries does the Danube go?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:00:20.934[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1513651188
[2m2023-10-27 14:00:21.100[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@7f7d443c
[2m2023-10-27 14:00:21.315[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:00:21.315[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:00:21.315[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:00:21.315[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Place","NaturalPlace","BodyOfWater","Stream","River"],"matchingTokens":[5],"entityId":"Danube","freebaseTypes":["/geography/body_of_water","/location/location","/book/book_subject","/geography/geographical_feature","/travel/travel_destination","/geography/river"],"confidenceScore":2.412,"wikiLink":"http://en.wikipedia.org/wiki/Danube","matchedText":"Danube","freebaseId":"/m/06xgl5","relevanceScore":0,"entityEnglishId":"Danube","startingPos":33,"endingPos":39,"wikidataId":"Q1653"}]},"time":0.003883,"ok":true}
[2m2023-10-27 14:00:21.315[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Place","NaturalPlace","BodyOfWater","Stream","River"],"matchingTokens":[5],"entityId":"Danube","freebaseTypes":["/geography/body_of_water","/location/location","/book/book_subject","/geography/geographical_feature","/travel/travel_destination","/geography/river"],"confidenceScore":2.412,"wikiLink":"http://en.wikipedia.org/wiki/Danube","matchedText":"Danube","freebaseId":"/m/06xgl5","relevanceScore":0,"entityEnglishId":"Danube","startingPos":33,"endingPos":39,"wikidataId":"Q1653"}
[2m2023-10-27 14:00:21.315[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 33
[2m2023-10-27 14:00:21.315[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 39
[2m2023-10-27 14:00:21.320[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_49cb4b80-062e-4521-be09-283d1d2de152
[2m2023-10-27 14:00:21.321[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7a1d6286
[2m2023-10-27 14:00:21.321[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:21.322[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_49cb4b80-062e-4521-be09-283d1d2de152> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "39"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:21.323[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_49cb4b80-062e-4521-be09-283d1d2de152> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "39"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:21.323[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:036fa638-7217-4c70-bc12-a3ebb3cb5104> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_49cb4b80-062e-4521-be09-283d1d2de152> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "39"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:21.329[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[io-8086-exec-10][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 503 ms
[2m2023-10-27 14:00:22.582[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"}
[2m2023-10-27 14:00:22.583[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"}
[2m2023-10-27 14:00:22.583[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"},"inGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6","outGraph":"urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6"}
[2m2023-10-27 14:00:22.583[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@68839916
[2m2023-10-27 14:00:22.592[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5549f88a
[2m2023-10-27 14:00:22.592[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:00:22.593[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:22.593[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:22.599[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f
[2m2023-10-27 14:00:22.599[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f found in urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6 at http://localhost:8080/sparql
[2m2023-10-27 14:00:22.601[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What is the second letter in the Greek alphabet? 
[2m2023-10-27 14:00:22.601[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question What is the second letter in the Greek alphabet?
[2m2023-10-27 14:00:22.601[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:00:22.601[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:00:22.602[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:00:22.602[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the second letter in the Greek alphabet?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:00:22.602[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=128651038
[2m2023-10-27 14:00:22.603[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@7a35716e
[2m2023-10-27 14:00:22.824[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:00:22.824[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:00:22.824[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:00:22.824[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Language"],"matchingTokens":[7],"entityId":"Greek language","freebaseTypes":["/book/book_subject","/fictional_universe/fictional_language","/language/human_language","/media_common/netflix_genre","/education/field_of_study","/language/languoid","/broadcast/genre"],"confidenceScore":2.339,"wikiLink":"http://en.wikipedia.org/wiki/Greek_language","matchedText":"Greek","freebaseId":"/m/0349s","relevanceScore":0.2026,"entityEnglishId":"Greek language","startingPos":33,"endingPos":38,"wikidataId":"Q9129"},{"id":1,"matchingTokens":[7,8],"entityId":"Greek alphabet","freebaseTypes":["/language/language_writing_system","/book/book_subject"],"confidenceScore":9.456,"wikiLink":"http://en.wikipedia.org/wiki/Greek_alphabet","matchedText":"Greek alphabet","freebaseId":"/m/0358gm","relevanceScore":0.165,"entityEnglishId":"Greek alphabet","startingPos":33,"endingPos":47,"wikidataId":"Q8216"},{"id":2,"matchingTokens":[8],"entityId":"Alphabet","freebaseTypes":["/book/book_subject","/film/film_subject","/language/language_writing_type"],"confidenceScore":1.45,"wikiLink":"http://en.wikipedia.org/wiki/Alphabet","matchedText":"alphabet","freebaseId":"/m/0hwf","relevanceScore":0.215,"entityEnglishId":"Alphabet","startingPos":39,"endingPos":47,"wikidataId":"Q9779"}]},"time":0.008499,"ok":true}
[2m2023-10-27 14:00:22.824[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Language"],"matchingTokens":[7],"entityId":"Greek language","freebaseTypes":["/book/book_subject","/fictional_universe/fictional_language","/language/human_language","/media_common/netflix_genre","/education/field_of_study","/language/languoid","/broadcast/genre"],"confidenceScore":2.339,"wikiLink":"http://en.wikipedia.org/wiki/Greek_language","matchedText":"Greek","freebaseId":"/m/0349s","relevanceScore":0.2026,"entityEnglishId":"Greek language","startingPos":33,"endingPos":38,"wikidataId":"Q9129"}
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 33
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 38
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"matchingTokens":[7,8],"entityId":"Greek alphabet","freebaseTypes":["/language/language_writing_system","/book/book_subject"],"confidenceScore":9.456,"wikiLink":"http://en.wikipedia.org/wiki/Greek_alphabet","matchedText":"Greek alphabet","freebaseId":"/m/0358gm","relevanceScore":0.165,"entityEnglishId":"Greek alphabet","startingPos":33,"endingPos":47,"wikidataId":"Q8216"}
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 33
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 47
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":2,"matchingTokens":[8],"entityId":"Alphabet","freebaseTypes":["/book/book_subject","/film/film_subject","/language/language_writing_type"],"confidenceScore":1.45,"wikiLink":"http://en.wikipedia.org/wiki/Alphabet","matchedText":"alphabet","freebaseId":"/m/0hwf","relevanceScore":0.215,"entityEnglishId":"Alphabet","startingPos":39,"endingPos":47,"wikidataId":"Q9779"}
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 39
[2m2023-10-27 14:00:22.825[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 47
[2m2023-10-27 14:00:22.831[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f
[2m2023-10-27 14:00:22.831[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2a042cb6
[2m2023-10-27 14:00:22.831[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:22.833[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.833[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.834[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "38"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.839[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5ebb4bc9
[2m2023-10-27 14:00:22.839[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:22.841[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "47"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.841[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "47"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.841[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "33"^^xsd:nonNegativeInteger .
    _:b1 oa:end "47"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.849[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@44ac753c
[2m2023-10-27 14:00:22.849[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:22.850[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "39"^^xsd:nonNegativeInteger .
    _:b1 oa:end "47"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.851[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "39"^^xsd:nonNegativeInteger .
    _:b1 oa:end "47"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.851[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:19e42ebb-96cf-402d-9aca-328c567544c6> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_18b7dc88-03aa-4145-8227-91ed42e4aa1f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "39"^^xsd:nonNegativeInteger .
    _:b1 oa:end "47"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:22.856[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 273 ms
[2m2023-10-27 14:00:31.028[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf","outGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf"}
[2m2023-10-27 14:00:31.029[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf","outGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf"}
[2m2023-10-27 14:00:31.029[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf"},"inGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf","outGraph":"urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf"}
[2m2023-10-27 14:00:31.029[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@315c1a2d
[2m2023-10-27 14:00:31.037[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@64c82932
[2m2023-10-27 14:00:31.038[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:00:31.039[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:31.040[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:00:31.045[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_01f786d5-3736-4ffd-b8f4-b0e4f195df61
[2m2023-10-27 14:00:31.045[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_01f786d5-3736-4ffd-b8f4-b0e4f195df61 found in urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf at http://localhost:8080/sparql
[2m2023-10-27 14:00:31.047[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Which of the dragons in Game of Thrones died? 
[2m2023-10-27 14:00:31.047[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Which of the dragons in Game of Thrones died?
[2m2023-10-27 14:00:31.047[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:00:31.047[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:00:31.048[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:00:31.048[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Which of the dragons in Game of Thrones died?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:00:31.048[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-1377505949
[2m2023-10-27 14:00:31.160[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@678c75c5
[2m2023-10-27 14:00:31.376[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:00:31.377[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:00:31.377[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:00:31.377[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Work","TelevisionShow"],"matchingTokens":[5,6,7],"entityId":"Game of Thrones","freebaseTypes":["/tv/tv_program","/award/award_nominated_work","/award/award_winning_work","/media_common/adapted_work","/media_common/netflix_title","/media_common/adaptation"],"confidenceScore":5.326,"wikiLink":"http://en.wikipedia.org/wiki/Game_of_Thrones","matchedText":"Game of Thrones","freebaseId":"/m/0524b41","relevanceScore":0.05312,"entityEnglishId":"Game of Thrones","startingPos":24,"endingPos":39,"wikidataId":"Q23572"}]},"time":0.004439,"ok":true}
[2m2023-10-27 14:00:31.377[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Work","TelevisionShow"],"matchingTokens":[5,6,7],"entityId":"Game of Thrones","freebaseTypes":["/tv/tv_program","/award/award_nominated_work","/award/award_winning_work","/media_common/adapted_work","/media_common/netflix_title","/media_common/adaptation"],"confidenceScore":5.326,"wikiLink":"http://en.wikipedia.org/wiki/Game_of_Thrones","matchedText":"Game of Thrones","freebaseId":"/m/0524b41","relevanceScore":0.05312,"entityEnglishId":"Game of Thrones","startingPos":24,"endingPos":39,"wikidataId":"Q23572"}
[2m2023-10-27 14:00:31.377[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 24
[2m2023-10-27 14:00:31.377[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 39
[2m2023-10-27 14:00:31.384[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_01f786d5-3736-4ffd-b8f4-b0e4f195df61
[2m2023-10-27 14:00:31.385[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@74e15945
[2m2023-10-27 14:00:31.385[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:00:31.392[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_01f786d5-3736-4ffd-b8f4-b0e4f195df61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "39"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:31.392[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_01f786d5-3736-4ffd-b8f4-b0e4f195df61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "39"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:31.392[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:2e48f36b-da5a-4a14-acd0-9d3025c730cf> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_01f786d5-3736-4ffd-b8f4-b0e4f195df61> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "24"^^xsd:nonNegativeInteger .
    _:b1 oa:end "39"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:00:31.400[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 371 ms
[2m2023-10-27 14:01:11.678[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62","outGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62"}
[2m2023-10-27 14:01:11.679[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62","outGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62"}
[2m2023-10-27 14:01:11.679[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62"},"inGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62","outGraph":"urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62"}
[2m2023-10-27 14:01:11.679[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@2386308e
[2m2023-10-27 14:01:11.688[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2d41da8e
[2m2023-10-27 14:01:11.689[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:01:11.690[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:01:11.690[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:01:11.698[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f
[2m2023-10-27 14:01:11.699[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f found in urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62 at http://localhost:8080/sparql
[2m2023-10-27 14:01:11.700[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many times did the Italian national soccer team win the Fifa World Cup? 
[2m2023-10-27 14:01:11.701[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question How many times did the Italian national soccer team win the Fifa World Cup?
[2m2023-10-27 14:01:11.701[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:01:11.701[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:01:11.701[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:01:11.701[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[How many times did the Italian national soccer team win the Fifa World Cup?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:01:11.701[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=888418286
[2m2023-10-27 14:01:11.811[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@297e5bfe
[2m2023-10-27 14:01:12.030[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:01:12.031[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:01:12.031[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Place","PopulatedPlace","Country"],"matchingTokens":[5],"entityId":"Italy","freebaseTypes":["/periodicals/newspaper_circulation_area","/organization/organization_member","/location/dated_location","/military/military_combatant","/law/court_jurisdiction_area","/location/country","/sports/sports_team_location","/sports/sport_country","/exhibitions/exhibition_subject","/organization/organization_scope","/symbols/name_source","/symbols/flag_referent","/government/governmental_jurisdiction","/location/administrative_division","/travel/travel_destination","/organization/organization_founder","/meteorology/forecast_zone","/fictional_universe/fictional_setting","/location/region","/media_common/netflix_genre","/location/statistical_region","/book/book_subject","/olympics/olympic_participating_country","/film/film_location","/exhibitions/exhibition_venue","/biology/breed_origin","/business/business_location","/food/beer_country_region","/business/employer","/location/location"],"confidenceScore":5.545,"wikiLink":"http://en.wikipedia.org/wiki/Italy","matchedText":"Italian","freebaseId":"/m/03rjj","relevanceScore":0.02572,"entityEnglishId":"Italy","startingPos":23,"endingPos":30,"wikidataId":"Q38"},{"id":1,"type":["Activity","Sport"],"matchingTokens":[7],"entityId":"Association football","freebaseTypes":["/olympics/olympic_participating_country","/interests/hobby","/book/book_subject","/olympics/olympic_sport","/media_common/media_genre","/organization/club_interest","/interests/hobbyist","/internet/website_category","/sports/sport","/award/competition_type","/award/award_discipline","/cvg/computer_game_subject","/film/film_subject","/interests/interest","/cvg/cvg_genre","/organization/organization_sector","/award/hall_of_fame_induction_category","/broadcast/genre","/media_common/netflix_genre","/book/periodical_subject","/tv/tv_subject","/exhibitions/exhibition_subject","/comic_books/comic_book_genre","/sports/school_sports_team","/award/hall_of_fame_discipline","/sports/sports_team"],"confidenceScore":30.55,"wikiLink":"http://en.wikipedia.org/wiki/Association_football","matchedText":"soccer","freebaseId":"/m/0fxc1s","relevanceScore":0.2286,"entityEnglishId":"Association football","startingPos":40,"endingPos":46,"wikidataId":"Q2736"},{"id":2,"type":["Agent","Organisation","SportsTeam","SoccerClub"],"matchingTokens":[5,6,7,8],"entityId":"Italy national football team","freebaseTypes":["/sports/sports_team","/award/award_winner","/award/award_nominee","/soccer/football_team","/organization/organization"],"confidenceScore":1.003,"wikiLink":"http://en.wikipedia.org/wiki/Italy_national_football_team","matchedText":"Italian national soccer team","freebaseId":"/m/01_lhg","relevanceScore":0.2105,"entityEnglishId":"Italy national football team","startingPos":23,"endingPos":51,"wikidataId":"Q676899"},{"id":3,"type":["Event","SocietalEvent","SportsEvent"],"matchingTokens":[11,12,13],"entityId":"FIFA World Cup","freebaseTypes":["/soccer/football_award","/time/recurring_event","/sports/sports_championship","/film/film_subject"],"confidenceScore":14.23,"wikiLink":"http://en.wikipedia.org/wiki/FIFA_World_Cup","matchedText":"Fifa World Cup","freebaseId":"/m/030q7","relevanceScore":0.04699,"entityEnglishId":"FIFA World Cup","startingPos":60,"endingPos":74,"wikidataId":"Q19317"}]},"time":0.0093,"ok":true}
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Place","PopulatedPlace","Country"],"matchingTokens":[5],"entityId":"Italy","freebaseTypes":["/periodicals/newspaper_circulation_area","/organization/organization_member","/location/dated_location","/military/military_combatant","/law/court_jurisdiction_area","/location/country","/sports/sports_team_location","/sports/sport_country","/exhibitions/exhibition_subject","/organization/organization_scope","/symbols/name_source","/symbols/flag_referent","/government/governmental_jurisdiction","/location/administrative_division","/travel/travel_destination","/organization/organization_founder","/meteorology/forecast_zone","/fictional_universe/fictional_setting","/location/region","/media_common/netflix_genre","/location/statistical_region","/book/book_subject","/olympics/olympic_participating_country","/film/film_location","/exhibitions/exhibition_venue","/biology/breed_origin","/business/business_location","/food/beer_country_region","/business/employer","/location/location"],"confidenceScore":5.545,"wikiLink":"http://en.wikipedia.org/wiki/Italy","matchedText":"Italian","freebaseId":"/m/03rjj","relevanceScore":0.02572,"entityEnglishId":"Italy","startingPos":23,"endingPos":30,"wikidataId":"Q38"}
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 23
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 30
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Activity","Sport"],"matchingTokens":[7],"entityId":"Association football","freebaseTypes":["/olympics/olympic_participating_country","/interests/hobby","/book/book_subject","/olympics/olympic_sport","/media_common/media_genre","/organization/club_interest","/interests/hobbyist","/internet/website_category","/sports/sport","/award/competition_type","/award/award_discipline","/cvg/computer_game_subject","/film/film_subject","/interests/interest","/cvg/cvg_genre","/organization/organization_sector","/award/hall_of_fame_induction_category","/broadcast/genre","/media_common/netflix_genre","/book/periodical_subject","/tv/tv_subject","/exhibitions/exhibition_subject","/comic_books/comic_book_genre","/sports/school_sports_team","/award/hall_of_fame_discipline","/sports/sports_team"],"confidenceScore":30.55,"wikiLink":"http://en.wikipedia.org/wiki/Association_football","matchedText":"soccer","freebaseId":"/m/0fxc1s","relevanceScore":0.2286,"entityEnglishId":"Association football","startingPos":40,"endingPos":46,"wikidataId":"Q2736"}
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 40
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 46
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":2,"type":["Agent","Organisation","SportsTeam","SoccerClub"],"matchingTokens":[5,6,7,8],"entityId":"Italy national football team","freebaseTypes":["/sports/sports_team","/award/award_winner","/award/award_nominee","/soccer/football_team","/organization/organization"],"confidenceScore":1.003,"wikiLink":"http://en.wikipedia.org/wiki/Italy_national_football_team","matchedText":"Italian national soccer team","freebaseId":"/m/01_lhg","relevanceScore":0.2105,"entityEnglishId":"Italy national football team","startingPos":23,"endingPos":51,"wikidataId":"Q676899"}
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 23
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 51
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":3,"type":["Event","SocietalEvent","SportsEvent"],"matchingTokens":[11,12,13],"entityId":"FIFA World Cup","freebaseTypes":["/soccer/football_award","/time/recurring_event","/sports/sports_championship","/film/film_subject"],"confidenceScore":14.23,"wikiLink":"http://en.wikipedia.org/wiki/FIFA_World_Cup","matchedText":"Fifa World Cup","freebaseId":"/m/030q7","relevanceScore":0.04699,"entityEnglishId":"FIFA World Cup","startingPos":60,"endingPos":74,"wikidataId":"Q19317"}
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 60
[2m2023-10-27 14:01:12.032[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 74
[2m2023-10-27 14:01:12.039[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f
[2m2023-10-27 14:01:12.039[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6c7cd0b5
[2m2023-10-27 14:01:12.039[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:01:12.042[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "30"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.042[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "30"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.042[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "30"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.052[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7eec9ff4
[2m2023-10-27 14:01:12.053[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:01:12.055[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "40"^^xsd:nonNegativeInteger .
    _:b1 oa:end "46"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.056[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "40"^^xsd:nonNegativeInteger .
    _:b1 oa:end "46"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.056[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "40"^^xsd:nonNegativeInteger .
    _:b1 oa:end "46"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.067[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5d5abf0d
[2m2023-10-27 14:01:12.068[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:01:12.071[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.072[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.072[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.084[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@620aef3
[2m2023-10-27 14:01:12.084[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:01:12.087[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "60"^^xsd:nonNegativeInteger .
    _:b1 oa:end "74"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.087[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "60"^^xsd:nonNegativeInteger .
    _:b1 oa:end "74"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.087[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:8eca2842-7d19-43fe-8092-adccfee78b62> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ec86fa85-f926-428e-9f21-020813de8b6f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "60"^^xsd:nonNegativeInteger .
    _:b1 oa:end "74"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:01:12.096[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-5][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 418 ms
[2m2023-10-27 14:02:10.903[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"}
[2m2023-10-27 14:02:10.904[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"}
[2m2023-10-27 14:02:10.904[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"},"inGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d","outGraph":"urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d"}
[2m2023-10-27 14:02:10.904[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@456fab76
[2m2023-10-27 14:02:10.913[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7f570b86
[2m2023-10-27 14:02:10.913[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:02:10.922[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:02:10.923[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:02:10.934[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d
[2m2023-10-27 14:02:10.934[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d found in urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d at http://localhost:8080/sparql
[2m2023-10-27 14:02:10.935[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Which started first: impressionism or expressionism (art movements)? 
[2m2023-10-27 14:02:10.936[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Which started first: impressionism or expressionism (art movements)?
[2m2023-10-27 14:02:10.936[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:02:10.936[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:02:10.936[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:02:10.936[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Which started first: impressionism or expressionism (art movements)?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:02:10.936[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1476072986
[2m2023-10-27 14:02:11.086[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3ed87818
[2m2023-10-27 14:02:11.306[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:02:11.306[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:02:11.306[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:02:11.306[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"matchingTokens":[4],"entityId":"Impressionism","freebaseTypes":["/book/book_subject","/visual_art/visual_art_support","/visual_art/art_period_movement","/interests/collection_category","/symbols/namesake","/exhibitions/exhibition_subject"],"confidenceScore":25.43,"wikiLink":"http://en.wikipedia.org/wiki/Impressionism","matchedText":"impressionism","freebaseId":"/m/03xj1","relevanceScore":0.6412,"entityEnglishId":"Impressionism","startingPos":21,"endingPos":34,"wikidataId":"Q40415"},{"id":1,"matchingTokens":[6],"entityId":"Expressionism","freebaseTypes":["/book/school_or_movement","/visual_art/art_period_movement","/film/film_genre","/architecture/architectural_style","/theater/theater_genre","/media_common/media_genre"],"confidenceScore":17.16,"wikiLink":"http://en.wikipedia.org/wiki/Expressionism","matchedText":"expressionism","freebaseId":"/m/0pybl","relevanceScore":0.7015,"entityEnglishId":"Expressionism","startingPos":38,"endingPos":51,"wikidataId":"Q80113"},{"id":2,"matchingTokens":[8],"entityId":"Art","freebaseTypes":["/business/consumer_product","/book/book_subject","/media_common/quotation_subject","/interests/hobby","/award/award_discipline","/business/industry","/education/field_of_study","/film/film_subject","/interests/collection_category","/book/periodical_subject","/business/product_theme","/internet/website_category","/interests/interest","/exhibitions/exhibition_subject","/organization/organization_sector"],"confidenceScore":3.297,"wikiLink":"http://en.wikipedia.org/wiki/Art","matchedText":"art","freebaseId":"/m/0jjw","relevanceScore":0.5816,"entityEnglishId":"Art","startingPos":53,"endingPos":56,"wikidataId":"Q735"},{"id":3,"matchingTokens":[8,9],"entityId":"Art movement","confidenceScore":3.83,"wikiLink":"http://en.wikipedia.org/wiki/Art_movement","matchedText":"art movements","freebaseId":"/m/01h8mp","relevanceScore":0.2373,"entityEnglishId":"Art movement","startingPos":53,"endingPos":66,"wikidataId":"Q968159"}]},"time":0.007981,"ok":true}
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"matchingTokens":[4],"entityId":"Impressionism","freebaseTypes":["/book/book_subject","/visual_art/visual_art_support","/visual_art/art_period_movement","/interests/collection_category","/symbols/namesake","/exhibitions/exhibition_subject"],"confidenceScore":25.43,"wikiLink":"http://en.wikipedia.org/wiki/Impressionism","matchedText":"impressionism","freebaseId":"/m/03xj1","relevanceScore":0.6412,"entityEnglishId":"Impressionism","startingPos":21,"endingPos":34,"wikidataId":"Q40415"}
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 21
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 34
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"matchingTokens":[6],"entityId":"Expressionism","freebaseTypes":["/book/school_or_movement","/visual_art/art_period_movement","/film/film_genre","/architecture/architectural_style","/theater/theater_genre","/media_common/media_genre"],"confidenceScore":17.16,"wikiLink":"http://en.wikipedia.org/wiki/Expressionism","matchedText":"expressionism","freebaseId":"/m/0pybl","relevanceScore":0.7015,"entityEnglishId":"Expressionism","startingPos":38,"endingPos":51,"wikidataId":"Q80113"}
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 38
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 51
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":2,"matchingTokens":[8],"entityId":"Art","freebaseTypes":["/business/consumer_product","/book/book_subject","/media_common/quotation_subject","/interests/hobby","/award/award_discipline","/business/industry","/education/field_of_study","/film/film_subject","/interests/collection_category","/book/periodical_subject","/business/product_theme","/internet/website_category","/interests/interest","/exhibitions/exhibition_subject","/organization/organization_sector"],"confidenceScore":3.297,"wikiLink":"http://en.wikipedia.org/wiki/Art","matchedText":"art","freebaseId":"/m/0jjw","relevanceScore":0.5816,"entityEnglishId":"Art","startingPos":53,"endingPos":56,"wikidataId":"Q735"}
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 53
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 56
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":3,"matchingTokens":[8,9],"entityId":"Art movement","confidenceScore":3.83,"wikiLink":"http://en.wikipedia.org/wiki/Art_movement","matchedText":"art movements","freebaseId":"/m/01h8mp","relevanceScore":0.2373,"entityEnglishId":"Art movement","startingPos":53,"endingPos":66,"wikidataId":"Q968159"}
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 53
[2m2023-10-27 14:02:11.307[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 66
[2m2023-10-27 14:02:11.312[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d
[2m2023-10-27 14:02:11.312[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4319e689
[2m2023-10-27 14:02:11.312[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:02:11.316[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "21"^^xsd:nonNegativeInteger .
    _:b1 oa:end "34"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.316[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "21"^^xsd:nonNegativeInteger .
    _:b1 oa:end "34"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.316[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "21"^^xsd:nonNegativeInteger .
    _:b1 oa:end "34"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.323[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7b95c187
[2m2023-10-27 14:02:11.323[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:02:11.325[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.325[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.325[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "51"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.333[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3cd9ee48
[2m2023-10-27 14:02:11.333[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:02:11.334[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "56"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.335[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "56"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "56"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.341[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@413c5973
[2m2023-10-27 14:02:11.341[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:02:11.343[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "66"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.343[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "66"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.343[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ac95aa37-aaa2-419d-8ad0-faa76662b64d> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_4324e046-5fed-4735-b8bd-2cb3204c2b3d> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "53"^^xsd:nonNegativeInteger .
    _:b1 oa:end "66"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:02:11.350[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 446 ms
[2m2023-10-27 14:03:01.324[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579","outGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579"}
[2m2023-10-27 14:03:01.325[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579","outGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579"}
[2m2023-10-27 14:03:01.325[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579"},"inGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579","outGraph":"urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579"}
[2m2023-10-27 14:03:01.325[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@74b316ab
[2m2023-10-27 14:03:01.336[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@367bf762
[2m2023-10-27 14:03:01.336[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:03:01.337[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:03:01.337[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:03:01.343[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968
[2m2023-10-27 14:03:01.343[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968 found in urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579 at http://localhost:8080/sparql
[2m2023-10-27 14:03:01.345[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation who has won more NBA awards, Michael Jordan or Kobe Bean Bryant？ 
[2m2023-10-27 14:03:01.345[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question who has won more NBA awards, Michael Jordan or Kobe Bean Bryant？
[2m2023-10-27 14:03:01.345[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:03:01.345[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:03:01.345[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:03:01.345[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[who has won more NBA awards, Michael Jordan or Kobe Bean Bryant？], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:03:01.345[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=800550060
[2m2023-10-27 14:03:01.534[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@3f88969
[2m2023-10-27 14:03:01.750[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:03:01.751[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:03:01.751[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Event","Organisation","SocietalEvent","SportsLeague","SportsEvent","BasketballLeague"],"matchingTokens":[4],"entityId":"National Basketball Association","freebaseTypes":["/book/book_subject","/business/customer","/organization/organization","/business/business_operation","/business/employer","/award/award_presenting_organization","/sports/sports_league"],"confidenceScore":53.36,"wikiLink":"http://en.wikipedia.org/wiki/National_Basketball_Association","matchedText":"NBA","freebaseId":"/m/05jvx","relevanceScore":0.1402,"entityEnglishId":"National Basketball Association","startingPos":17,"endingPos":20,"wikidataId":"Q155223","crunchbaseId":"national-basketball-association","permid":"5000294118"},{"id":1,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[7,8],"entityId":"Michael Jordan","freebaseTypes":["/people/measured_person","/celebrities/celebrity","/award/ranked_item","/award/hall_of_fame_inductee","/award/award_nominee","/film/person_or_entity_appearing_in_film","/people/person","/business/sponsored_recipient","/sports/pro_athlete","/tv/tv_subject","/award/award_winner","/sports/drafted_athlete","/olympics/olympic_athlete","/film/actor","/film/film_subject","/tv/tv_actor","/sports/sports_team_owner","/sports/sports_award_winner","/book/author","/baseball/baseball_player","/tv/tv_personality","/book/book_subject","/influence/influence_node","/basketball/basketball_player"],"confidenceScore":24.64,"wikiLink":"http://en.wikipedia.org/wiki/Michael_Jordan","matchedText":"Michael Jordan","freebaseId":"/m/054c1","relevanceScore":0.3442,"entityEnglishId":"Michael Jordan","startingPos":29,"endingPos":43,"wikidataId":"Q41421"},{"id":2,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[10,11,12],"entityId":"Kobe Bryant","freebaseTypes":["/film/film_subject","/sports/sports_award_winner","/olympics/olympic_athlete","/basketball/basketball_player","/sports/pro_athlete","/business/product_endorser","/tv/tv_personality","/business/sponsored_recipient","/tv/tv_actor","/film/person_or_entity_appearing_in_film","/music/artist","/people/person","/sports/drafted_athlete","/award/award_nominee","/music/group_member","/celebrities/celebrity","/people/measured_person","/award/award_winner","/music/featured_artist","/organization/organization","/business/employer"],"confidenceScore":1.785,"wikiLink":"http://en.wikipedia.org/wiki/Kobe_Bryant","matchedText":"Kobe Bean Bryant","freebaseId":"/m/0cn_06n","relevanceScore":0.2821,"entityEnglishId":"Kobe Bryant","startingPos":47,"endingPos":63,"wikidataId":"Q25369","crunchbaseId":"black-mamba"}]},"time":0.009304,"ok":true}
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Event","Organisation","SocietalEvent","SportsLeague","SportsEvent","BasketballLeague"],"matchingTokens":[4],"entityId":"National Basketball Association","freebaseTypes":["/book/book_subject","/business/customer","/organization/organization","/business/business_operation","/business/employer","/award/award_presenting_organization","/sports/sports_league"],"confidenceScore":53.36,"wikiLink":"http://en.wikipedia.org/wiki/National_Basketball_Association","matchedText":"NBA","freebaseId":"/m/05jvx","relevanceScore":0.1402,"entityEnglishId":"National Basketball Association","startingPos":17,"endingPos":20,"wikidataId":"Q155223","crunchbaseId":"national-basketball-association","permid":"5000294118"}
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 17
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 20
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[7,8],"entityId":"Michael Jordan","freebaseTypes":["/people/measured_person","/celebrities/celebrity","/award/ranked_item","/award/hall_of_fame_inductee","/award/award_nominee","/film/person_or_entity_appearing_in_film","/people/person","/business/sponsored_recipient","/sports/pro_athlete","/tv/tv_subject","/award/award_winner","/sports/drafted_athlete","/olympics/olympic_athlete","/film/actor","/film/film_subject","/tv/tv_actor","/sports/sports_team_owner","/sports/sports_award_winner","/book/author","/baseball/baseball_player","/tv/tv_personality","/book/book_subject","/influence/influence_node","/basketball/basketball_player"],"confidenceScore":24.64,"wikiLink":"http://en.wikipedia.org/wiki/Michael_Jordan","matchedText":"Michael Jordan","freebaseId":"/m/054c1","relevanceScore":0.3442,"entityEnglishId":"Michael Jordan","startingPos":29,"endingPos":43,"wikidataId":"Q41421"}
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 29
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 43
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":2,"type":["Agent","Person","Athlete","BasketballPlayer"],"matchingTokens":[10,11,12],"entityId":"Kobe Bryant","freebaseTypes":["/film/film_subject","/sports/sports_award_winner","/olympics/olympic_athlete","/basketball/basketball_player","/sports/pro_athlete","/business/product_endorser","/tv/tv_personality","/business/sponsored_recipient","/tv/tv_actor","/film/person_or_entity_appearing_in_film","/music/artist","/people/person","/sports/drafted_athlete","/award/award_nominee","/music/group_member","/celebrities/celebrity","/people/measured_person","/award/award_winner","/music/featured_artist","/organization/organization","/business/employer"],"confidenceScore":1.785,"wikiLink":"http://en.wikipedia.org/wiki/Kobe_Bryant","matchedText":"Kobe Bean Bryant","freebaseId":"/m/0cn_06n","relevanceScore":0.2821,"entityEnglishId":"Kobe Bryant","startingPos":47,"endingPos":63,"wikidataId":"Q25369","crunchbaseId":"black-mamba"}
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 47
[2m2023-10-27 14:03:01.752[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 63
[2m2023-10-27 14:03:01.760[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968
[2m2023-10-27 14:03:01.760[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1c97c5ce
[2m2023-10-27 14:03:01.760[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:03:01.762[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "17"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.763[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "17"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.763[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "17"^^xsd:nonNegativeInteger .
    _:b1 oa:end "20"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.775[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@70fd8eb9
[2m2023-10-27 14:03:01.775[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:03:01.778[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "29"^^xsd:nonNegativeInteger .
    _:b1 oa:end "43"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.778[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "29"^^xsd:nonNegativeInteger .
    _:b1 oa:end "43"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.778[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "29"^^xsd:nonNegativeInteger .
    _:b1 oa:end "43"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.789[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@19d4a723
[2m2023-10-27 14:03:01.789[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:03:01.791[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "47"^^xsd:nonNegativeInteger .
    _:b1 oa:end "63"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.791[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "47"^^xsd:nonNegativeInteger .
    _:b1 oa:end "63"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.791[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:13262209-56f6-4cf5-8bb4-f2d9d43ac579> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_a44148f5-b312-49f7-a22d-54a9a9f1e968> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "47"^^xsd:nonNegativeInteger .
    _:b1 oa:end "63"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:03:01.801[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 476 ms
[2m2023-10-27 14:04:26.953[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89","outGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89"}
[2m2023-10-27 14:04:26.955[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89","outGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89"}
[2m2023-10-27 14:04:26.955[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89"},"inGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89","outGraph":"urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89"}
[2m2023-10-27 14:04:26.955[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@4d9dd273
[2m2023-10-27 14:04:26.963[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1851abbe
[2m2023-10-27 14:04:26.963[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:04:26.964[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:04:26.964[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:04:26.971[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b
[2m2023-10-27 14:04:26.971[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b found in urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89 at http://localhost:8080/sparql
[2m2023-10-27 14:04:26.973[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Did the Chicago Bulls win at least two seasons of the NBA championship? 
[2m2023-10-27 14:04:26.973[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Did the Chicago Bulls win at least two seasons of the NBA championship?
[2m2023-10-27 14:04:26.973[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:04:26.973[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:04:26.973[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:04:26.973[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Did the Chicago Bulls win at least two seasons of the NBA championship?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:04:26.973[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-464899173
[2m2023-10-27 14:04:27.183[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6b89bd52
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:04:27.403[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Place","PopulatedPlace","Settlement","City"],"matchingTokens":[2],"entityId":"Chicago","freebaseTypes":["/book/book_subject","/periodicals/newspaper_circulation_area","/symbols/name_source","/location/dated_location","/location/hud_county_place","/location/place_with_neighborhoods","/location/capital_of_administrative_division","/travel/travel_destination","/fictional_universe/fictional_setting","/film/film_location","/government/governmental_jurisdiction","/organization/organization_scope","/exhibitions/exhibition_sponsor","/business/business_location","/award/award_discipline","/location/citytown","/sports/sports_team_location","/tv/tv_location","/location/administrative_division","/business/employer","/location/statistical_region","/location/location","/olympics/olympic_bidding_city"],"confidenceScore":11.35,"wikiLink":"http://en.wikipedia.org/wiki/Chicago","matchedText":"Chicago","freebaseId":"/m/01_d4","relevanceScore":0.07726,"entityEnglishId":"Chicago","startingPos":8,"endingPos":15,"wikidataId":"Q1297"},{"id":1,"type":["Agent","Organisation","SportsTeam","BasketballTeam"],"matchingTokens":[2,3],"entityId":"Chicago Bulls","freebaseTypes":["/sports/sports_team","/award/award_nominee","/sports/professional_sports_team","/award/award_winner","/basketball/basketball_team"],"confidenceScore":4.324,"wikiLink":"http://en.wikipedia.org/wiki/Chicago_Bulls","matchedText":"Chicago Bulls","freebaseId":"/m/0jm74","relevanceScore":0.2012,"entityEnglishId":"Chicago Bulls","startingPos":8,"endingPos":21,"wikidataId":"Q128109","crunchbaseId":"chicago-bulls"},{"id":2,"type":["Agent","Event","Organisation","SocietalEvent","SportsLeague","SportsEvent","BasketballLeague"],"matchingTokens":[11],"entityId":"National Basketball Association","freebaseTypes":["/book/book_subject","/business/customer","/organization/organization","/business/business_operation","/business/employer","/award/award_presenting_organization","/sports/sports_league"],"confidenceScore":6.66,"wikiLink":"http://en.wikipedia.org/wiki/National_Basketball_Association","matchedText":"NBA","freebaseId":"/m/05jvx","relevanceScore":0.1132,"entityEnglishId":"National Basketball Association","startingPos":54,"endingPos":57,"wikidataId":"Q155223","crunchbaseId":"national-basketball-association","permid":"5000294118"},{"id":3,"type":["Event","SocietalEvent","Convention"],"matchingTokens":[11,12],"entityId":"NBA Finals","freebaseTypes":["/sports/sports_championship","/time/recurring_event"],"confidenceScore":1.533,"wikiLink":"http://en.wikipedia.org/wiki/NBA_Finals","matchedText":"NBA championship","freebaseId":"/m/03m5x4","relevanceScore":0.1795,"entityEnglishId":"NBA Finals","startingPos":54,"endingPos":70,"wikidataId":"Q842375"}]},"time":0.008018,"ok":true}
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Place","PopulatedPlace","Settlement","City"],"matchingTokens":[2],"entityId":"Chicago","freebaseTypes":["/book/book_subject","/periodicals/newspaper_circulation_area","/symbols/name_source","/location/dated_location","/location/hud_county_place","/location/place_with_neighborhoods","/location/capital_of_administrative_division","/travel/travel_destination","/fictional_universe/fictional_setting","/film/film_location","/government/governmental_jurisdiction","/organization/organization_scope","/exhibitions/exhibition_sponsor","/business/business_location","/award/award_discipline","/location/citytown","/sports/sports_team_location","/tv/tv_location","/location/administrative_division","/business/employer","/location/statistical_region","/location/location","/olympics/olympic_bidding_city"],"confidenceScore":11.35,"wikiLink":"http://en.wikipedia.org/wiki/Chicago","matchedText":"Chicago","freebaseId":"/m/01_d4","relevanceScore":0.07726,"entityEnglishId":"Chicago","startingPos":8,"endingPos":15,"wikidataId":"Q1297"}
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 8
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 15
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Agent","Organisation","SportsTeam","BasketballTeam"],"matchingTokens":[2,3],"entityId":"Chicago Bulls","freebaseTypes":["/sports/sports_team","/award/award_nominee","/sports/professional_sports_team","/award/award_winner","/basketball/basketball_team"],"confidenceScore":4.324,"wikiLink":"http://en.wikipedia.org/wiki/Chicago_Bulls","matchedText":"Chicago Bulls","freebaseId":"/m/0jm74","relevanceScore":0.2012,"entityEnglishId":"Chicago Bulls","startingPos":8,"endingPos":21,"wikidataId":"Q128109","crunchbaseId":"chicago-bulls"}
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 8
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 21
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":2,"type":["Agent","Event","Organisation","SocietalEvent","SportsLeague","SportsEvent","BasketballLeague"],"matchingTokens":[11],"entityId":"National Basketball Association","freebaseTypes":["/book/book_subject","/business/customer","/organization/organization","/business/business_operation","/business/employer","/award/award_presenting_organization","/sports/sports_league"],"confidenceScore":6.66,"wikiLink":"http://en.wikipedia.org/wiki/National_Basketball_Association","matchedText":"NBA","freebaseId":"/m/05jvx","relevanceScore":0.1132,"entityEnglishId":"National Basketball Association","startingPos":54,"endingPos":57,"wikidataId":"Q155223","crunchbaseId":"national-basketball-association","permid":"5000294118"}
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 54
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 57
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":3,"type":["Event","SocietalEvent","Convention"],"matchingTokens":[11,12],"entityId":"NBA Finals","freebaseTypes":["/sports/sports_championship","/time/recurring_event"],"confidenceScore":1.533,"wikiLink":"http://en.wikipedia.org/wiki/NBA_Finals","matchedText":"NBA championship","freebaseId":"/m/03m5x4","relevanceScore":0.1795,"entityEnglishId":"NBA Finals","startingPos":54,"endingPos":70,"wikidataId":"Q842375"}
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 54
[2m2023-10-27 14:04:27.403[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 70
[2m2023-10-27 14:04:27.409[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b
[2m2023-10-27 14:04:27.409[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@48dd9691
[2m2023-10-27 14:04:27.409[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:04:27.410[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "8"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.410[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "8"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.410[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "8"^^xsd:nonNegativeInteger .
    _:b1 oa:end "15"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.416[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@6bf0dbb3
[2m2023-10-27 14:04:27.416[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:04:27.417[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "8"^^xsd:nonNegativeInteger .
    _:b1 oa:end "21"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.417[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "8"^^xsd:nonNegativeInteger .
    _:b1 oa:end "21"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.417[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "8"^^xsd:nonNegativeInteger .
    _:b1 oa:end "21"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.423[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7ee98128
[2m2023-10-27 14:04:27.423[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:04:27.424[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "54"^^xsd:nonNegativeInteger .
    _:b1 oa:end "57"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.424[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "54"^^xsd:nonNegativeInteger .
    _:b1 oa:end "57"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.424[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "54"^^xsd:nonNegativeInteger .
    _:b1 oa:end "57"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.430[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@582cc08a
[2m2023-10-27 14:04:27.430[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:04:27.431[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "54"^^xsd:nonNegativeInteger .
    _:b1 oa:end "70"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.432[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "54"^^xsd:nonNegativeInteger .
    _:b1 oa:end "70"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.432[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7850b7f6-85cc-4587-95e1-0b74b5aceb89> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_6fbb2af1-3f17-4020-84b9-76267493814b> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "54"^^xsd:nonNegativeInteger .
    _:b1 oa:end "70"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:27.437[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 482 ms
[2m2023-10-27 14:04:57.084[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"}
[2m2023-10-27 14:04:57.084[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"}
[2m2023-10-27 14:04:57.085[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"},"inGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2","outGraph":"urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2"}
[2m2023-10-27 14:04:57.085[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@1543c2c6
[2m2023-10-27 14:04:57.095[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1e293d44
[2m2023-10-27 14:04:57.095[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:04:57.096[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:04:57.096[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:04:57.108[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f
[2m2023-10-27 14:04:57.108[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f found in urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2 at http://localhost:8080/sparql
[2m2023-10-27 14:04:57.110[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What is the capital of the prefecture Tokyo ? 
[2m2023-10-27 14:04:57.110[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question What is the capital of the prefecture Tokyo ?
[2m2023-10-27 14:04:57.110[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:04:57.110[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:04:57.111[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:04:57.111[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What is the capital of the prefecture Tokyo ?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:04:57.111[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-570284519
[2m2023-10-27 14:04:57.263[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@1ac8d84b
[2m2023-10-27 14:04:57.480[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:04:57.480[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:04:57.481[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"matchingTokens":[6],"entityId":"Prefecture","confidenceScore":1.081,"wikiLink":"http://en.wikipedia.org/wiki/Prefecture","matchedText":"prefecture","freebaseId":"/m/0jw6r","relevanceScore":0.08958,"entityEnglishId":"Prefecture","startingPos":27,"endingPos":37,"wikidataId":"Q515716"},{"id":1,"type":["Place","PopulatedPlace","Settlement","City"],"matchingTokens":[7],"entityId":"Tokyo","freebaseTypes":["/travel/travel_destination","/location/citytown","/location/administrative_division","/location/statistical_region","/location/dated_location","/location/location","/location/jp_designated_city","/location/administrative_division","/location/statistical_region","/periodicals/newspaper_circulation_area","/location/jp_prefecture","/film/film_location","/book/book_subject","/olympics/olympic_host_city","/location/location","/government/governmental_jurisdiction","/location/jp_city_town","/travel/travel_destination","/business/employer","/location/citytown","/meteorology/cyclone_affected_area","/fictional_universe/fictional_setting","/organization/organization_scope","/symbols/name_source","/location/place_with_neighborhoods","/location/dated_location","/location/location"],"confidenceScore":2.29,"wikiLink":"http://en.wikipedia.org/wiki/Tokyo","matchedText":"Tokyo","freebaseId":"/m/0swk_t7","relevanceScore":0.1411,"entityEnglishId":"Tokyo","startingPos":38,"endingPos":43,"wikidataId":"Q1490"}]},"time":0.003488,"ok":true}
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"matchingTokens":[6],"entityId":"Prefecture","confidenceScore":1.081,"wikiLink":"http://en.wikipedia.org/wiki/Prefecture","matchedText":"prefecture","freebaseId":"/m/0jw6r","relevanceScore":0.08958,"entityEnglishId":"Prefecture","startingPos":27,"endingPos":37,"wikidataId":"Q515716"}
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 27
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 37
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Place","PopulatedPlace","Settlement","City"],"matchingTokens":[7],"entityId":"Tokyo","freebaseTypes":["/travel/travel_destination","/location/citytown","/location/administrative_division","/location/statistical_region","/location/dated_location","/location/location","/location/jp_designated_city","/location/administrative_division","/location/statistical_region","/periodicals/newspaper_circulation_area","/location/jp_prefecture","/film/film_location","/book/book_subject","/olympics/olympic_host_city","/location/location","/government/governmental_jurisdiction","/location/jp_city_town","/travel/travel_destination","/business/employer","/location/citytown","/meteorology/cyclone_affected_area","/fictional_universe/fictional_setting","/organization/organization_scope","/symbols/name_source","/location/place_with_neighborhoods","/location/dated_location","/location/location"],"confidenceScore":2.29,"wikiLink":"http://en.wikipedia.org/wiki/Tokyo","matchedText":"Tokyo","freebaseId":"/m/0swk_t7","relevanceScore":0.1411,"entityEnglishId":"Tokyo","startingPos":38,"endingPos":43,"wikidataId":"Q1490"}
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 38
[2m2023-10-27 14:04:57.481[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 43
[2m2023-10-27 14:04:57.487[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f
[2m2023-10-27 14:04:57.487[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3dea4bbb
[2m2023-10-27 14:04:57.488[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:04:57.489[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.489[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.489[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "27"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.495[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@36b4eb32
[2m2023-10-27 14:04:57.495[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:04:57.497[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "43"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.497[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "43"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.497[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:d5b6bca6-7417-420e-ae01-0b8e51573da2> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_bccd6d73-2a0f-442d-b9b6-ad14c11f791f> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "38"^^xsd:nonNegativeInteger .
    _:b1 oa:end "43"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:04:57.503[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 419 ms
[2m2023-10-27 14:06:01.592[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0","outGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0"}
[2m2023-10-27 14:06:01.592[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0","outGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0"}
[2m2023-10-27 14:06:01.592[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0"},"inGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0","outGraph":"urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0"}
[2m2023-10-27 14:06:01.593[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@71512a9d
[2m2023-10-27 14:06:01.599[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@11529675
[2m2023-10-27 14:06:01.600[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:06:01.600[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:06:01.601[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:06:01.607[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_ce36f50d-e6bd-42fa-a26b-060651e080dc
[2m2023-10-27 14:06:01.607[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_ce36f50d-e6bd-42fa-a26b-060651e080dc found in urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0 at http://localhost:8080/sparql
[2m2023-10-27 14:06:01.609[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How many poems did Allen Ginsberg published? 
[2m2023-10-27 14:06:01.609[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question How many poems did Allen Ginsberg published?
[2m2023-10-27 14:06:01.609[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:06:01.609[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:06:01.610[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:06:01.610[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[How many poems did Allen Ginsberg published?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:06:01.610[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-987132577
[2m2023-10-27 14:06:01.878[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@40eafde9
[2m2023-10-27 14:06:02.104[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:06:02.104[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:06:02.104[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:06:02.104[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Artist","Writer"],"matchingTokens":[4,5],"entityId":"Allen Ginsberg","freebaseTypes":["/music/composer","/film/film_story_contributor","/award/award_nominee","/music/group_member","/tv/tv_personality","/film/person_or_entity_appearing_in_film","/people/person","/people/deceased_person","/music/writer","/film/film_subject","/film/actor","/film/writer","/visual_art/visual_artist","/medicine/notable_person_with_medical_condition","/music/artist","/book/author","/tv/tv_actor","/award/award_winner","/fictional_universe/person_in_fiction","/music/lyricist","/organization/organization_founder","/influence/influence_node","/book/book_subject"],"confidenceScore":6.25,"wikiLink":"http://en.wikipedia.org/wiki/Allen_Ginsberg","matchedText":"Allen Ginsberg","freebaseId":"/m/0lrh","relevanceScore":0.3673,"entityEnglishId":"Allen Ginsberg","startingPos":19,"endingPos":33,"wikidataId":"Q6711"}]},"time":0.006951,"ok":true}
[2m2023-10-27 14:06:02.104[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Artist","Writer"],"matchingTokens":[4,5],"entityId":"Allen Ginsberg","freebaseTypes":["/music/composer","/film/film_story_contributor","/award/award_nominee","/music/group_member","/tv/tv_personality","/film/person_or_entity_appearing_in_film","/people/person","/people/deceased_person","/music/writer","/film/film_subject","/film/actor","/film/writer","/visual_art/visual_artist","/medicine/notable_person_with_medical_condition","/music/artist","/book/author","/tv/tv_actor","/award/award_winner","/fictional_universe/person_in_fiction","/music/lyricist","/organization/organization_founder","/influence/influence_node","/book/book_subject"],"confidenceScore":6.25,"wikiLink":"http://en.wikipedia.org/wiki/Allen_Ginsberg","matchedText":"Allen Ginsberg","freebaseId":"/m/0lrh","relevanceScore":0.3673,"entityEnglishId":"Allen Ginsberg","startingPos":19,"endingPos":33,"wikidataId":"Q6711"}
[2m2023-10-27 14:06:02.104[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 19
[2m2023-10-27 14:06:02.104[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 33
[2m2023-10-27 14:06:02.109[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_ce36f50d-e6bd-42fa-a26b-060651e080dc
[2m2023-10-27 14:06:02.109[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@69031fad
[2m2023-10-27 14:06:02.110[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:06:02.111[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ce36f50d-e6bd-42fa-a26b-060651e080dc> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "19"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:02.112[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ce36f50d-e6bd-42fa-a26b-060651e080dc> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "19"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:02.112[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:c39055db-3411-4c58-b014-324f3ddc7ff0> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_ce36f50d-e6bd-42fa-a26b-060651e080dc> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "19"^^xsd:nonNegativeInteger .
    _:b1 oa:end "33"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:02.129[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-7][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 537 ms
[2m2023-10-27 14:06:30.823[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716","outGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716"}
[2m2023-10-27 14:06:30.823[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716","outGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716"}
[2m2023-10-27 14:06:30.823[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716"},"inGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716","outGraph":"urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716"}
[2m2023-10-27 14:06:30.823[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@7ce1ac00
[2m2023-10-27 14:06:30.832[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1121cd6c
[2m2023-10-27 14:06:30.832[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:06:30.833[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:06:30.833[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:06:30.839[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_3a36a061-6862-4afb-b84e-e28819bdda58
[2m2023-10-27 14:06:30.839[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_3a36a061-6862-4afb-b84e-e28819bdda58 found in urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716 at http://localhost:8080/sparql
[2m2023-10-27 14:06:30.841[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Is Dr. Pepper named after its inventor? 
[2m2023-10-27 14:06:30.841[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Is Dr. Pepper named after its inventor?
[2m2023-10-27 14:06:30.841[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:06:30.841[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:06:30.841[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:06:30.841[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Is Dr. Pepper named after its inventor?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:06:30.841[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=967908090
[2m2023-10-27 14:06:30.953[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@23f3fea1
[2m2023-10-27 14:06:31.228[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:06:31.228[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:06:31.229[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:06:31.229[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Food","Beverage"],"matchingTokens":[1,2],"entityId":"Dr Pepper","freebaseTypes":["/business/brand","/food/beverage"],"confidenceScore":3.088,"wikiLink":"http://en.wikipedia.org/wiki/Dr_Pepper","matchedText":"Dr. Pepper","freebaseId":"/m/0128401y","relevanceScore":0,"entityEnglishId":"Dr Pepper","startingPos":3,"endingPos":13,"wikidataId":"Q623561"}]},"time":0.003654,"ok":true}
[2m2023-10-27 14:06:31.229[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Food","Beverage"],"matchingTokens":[1,2],"entityId":"Dr Pepper","freebaseTypes":["/business/brand","/food/beverage"],"confidenceScore":3.088,"wikiLink":"http://en.wikipedia.org/wiki/Dr_Pepper","matchedText":"Dr. Pepper","freebaseId":"/m/0128401y","relevanceScore":0,"entityEnglishId":"Dr Pepper","startingPos":3,"endingPos":13,"wikidataId":"Q623561"}
[2m2023-10-27 14:06:31.229[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 3
[2m2023-10-27 14:06:31.229[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 13
[2m2023-10-27 14:06:31.233[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_3a36a061-6862-4afb-b84e-e28819bdda58
[2m2023-10-27 14:06:31.234[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1d6552c5
[2m2023-10-27 14:06:31.234[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:06:31.235[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3a36a061-6862-4afb-b84e-e28819bdda58> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "13"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:31.235[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3a36a061-6862-4afb-b84e-e28819bdda58> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "13"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:31.235[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:37c59fa9-ccf9-41c2-bdbe-6612853a9716> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_3a36a061-6862-4afb-b84e-e28819bdda58> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "13"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:06:31.240[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-9][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 417 ms
[2m2023-10-27 14:07:22.827[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"}
[2m2023-10-27 14:07:22.827[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"}
[2m2023-10-27 14:07:22.827[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"},"inGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351","outGraph":"urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351"}
[2m2023-10-27 14:07:22.827[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@5e20c6b1
[2m2023-10-27 14:07:22.836[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7c3bd10e
[2m2023-10-27 14:07:22.836[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:07:22.837[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:07:22.837[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:07:22.844[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827
[2m2023-10-27 14:07:22.844[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827 found in urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351 at http://localhost:8080/sparql
[2m2023-10-27 14:07:22.846[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation In how many movies did Carey Mulligan and Ryan Gosling star together? 
[2m2023-10-27 14:07:22.846[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question In how many movies did Carey Mulligan and Ryan Gosling star together?
[2m2023-10-27 14:07:22.846[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:07:22.846[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:07:22.846[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:07:22.847[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[In how many movies did Carey Mulligan and Ryan Gosling star together?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:07:22.847[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1734149481
[2m2023-10-27 14:07:23.076[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@602f1076
[2m2023-10-27 14:07:23.334[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:07:23.335[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Artist","Actor"],"matchingTokens":[5,6],"entityId":"Carey Mulligan","freebaseTypes":["/influence/influence_node","/music/artist","/theater/theater_actor","/people/person","/tv/tv_actor","/film/actor","/award/award_winner","/award/award_nominee"],"confidenceScore":5.717,"wikiLink":"http://en.wikipedia.org/wiki/Carey_Mulligan","matchedText":"Carey Mulligan","freebaseId":"/m/0bwgc_","relevanceScore":0.1383,"entityEnglishId":"Carey Mulligan","startingPos":23,"endingPos":37,"wikidataId":"Q219655"},{"id":1,"type":["Agent","Person","Artist","Actor"],"matchingTokens":[8,9],"entityId":"Ryan Gosling","freebaseTypes":["/music/group_member","/tv/tv_program_guest","/music/artist","/film/director","/people/person","/film/actor","/film/producer","/tv/tv_actor","/film/person_or_entity_appearing_in_film","/film/writer","/celebrities/celebrity","/influence/influence_node","/award/award_nominee","/award/award_winner"],"confidenceScore":4.525,"wikiLink":"http://en.wikipedia.org/wiki/Ryan_Gosling","matchedText":"Ryan Gosling","freebaseId":"/m/03m6_z","relevanceScore":0.0659,"entityEnglishId":"Ryan Gosling","startingPos":42,"endingPos":54,"wikidataId":"Q193815"}]},"time":0.009594,"ok":true}
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Artist","Actor"],"matchingTokens":[5,6],"entityId":"Carey Mulligan","freebaseTypes":["/influence/influence_node","/music/artist","/theater/theater_actor","/people/person","/tv/tv_actor","/film/actor","/award/award_winner","/award/award_nominee"],"confidenceScore":5.717,"wikiLink":"http://en.wikipedia.org/wiki/Carey_Mulligan","matchedText":"Carey Mulligan","freebaseId":"/m/0bwgc_","relevanceScore":0.1383,"entityEnglishId":"Carey Mulligan","startingPos":23,"endingPos":37,"wikidataId":"Q219655"}
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 23
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 37
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Agent","Person","Artist","Actor"],"matchingTokens":[8,9],"entityId":"Ryan Gosling","freebaseTypes":["/music/group_member","/tv/tv_program_guest","/music/artist","/film/director","/people/person","/film/actor","/film/producer","/tv/tv_actor","/film/person_or_entity_appearing_in_film","/film/writer","/celebrities/celebrity","/influence/influence_node","/award/award_nominee","/award/award_winner"],"confidenceScore":4.525,"wikiLink":"http://en.wikipedia.org/wiki/Ryan_Gosling","matchedText":"Ryan Gosling","freebaseId":"/m/03m6_z","relevanceScore":0.0659,"entityEnglishId":"Ryan Gosling","startingPos":42,"endingPos":54,"wikidataId":"Q193815"}
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 42
[2m2023-10-27 14:07:23.335[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 54
[2m2023-10-27 14:07:23.339[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827
[2m2023-10-27 14:07:23.340[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5cfe5eef
[2m2023-10-27 14:07:23.340[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:07:23.341[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:23.341[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:23.341[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "23"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:23.347[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@4331e8f
[2m2023-10-27 14:07:23.347[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:07:23.348[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "54"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:23.348[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "54"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:23.348[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:42a3f459-09f0-40ae-8bd2-407eb9583351> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_85edbe91-acb3-4d98-819c-045251e4b827> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "54"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:07:23.353[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-2][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 526 ms
[2m2023-10-27 14:08:24.494[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"}
[2m2023-10-27 14:08:24.495[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"}
[2m2023-10-27 14:08:24.495[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"},"inGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206","outGraph":"urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206"}
[2m2023-10-27 14:08:24.495[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@25d81b55
[2m2023-10-27 14:08:24.510[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@5d43188c
[2m2023-10-27 14:08:24.511[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:08:24.512[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:24.513[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:08:24.525[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c
[2m2023-10-27 14:08:24.525[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c found in urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206 at http://localhost:8080/sparql
[2m2023-10-27 14:08:24.528[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation How often was Naomi Novik nominated for a Hugo Award? 
[2m2023-10-27 14:08:24.528[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question How often was Naomi Novik nominated for a Hugo Award?
[2m2023-10-27 14:08:24.528[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:08:24.528[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:08:24.528[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:08:24.528[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[How often was Naomi Novik nominated for a Hugo Award?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:08:24.529[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=2035953308
[2m2023-10-27 14:08:24.660[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@6555bb16
[2m2023-10-27 14:08:24.878[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:08:24.879[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Agent","Person","Artist","Writer"],"matchingTokens":[3,4],"entityId":"Naomi Novik","freebaseTypes":["/award/award_winner","/influence/influence_node","/award/award_nominee","/book/author","/people/person","/fictional_universe/fictional_character_creator"],"confidenceScore":2.733,"wikiLink":"http://en.wikipedia.org/wiki/Naomi_Novik","matchedText":"Naomi Novik","freebaseId":"/m/0ckkqp","relevanceScore":0.1639,"entityEnglishId":"Naomi Novik","startingPos":14,"endingPos":25,"wikidataId":"Q242643"},{"id":1,"type":["Award"],"matchingTokens":[8,9],"entityId":"Hugo Award","freebaseTypes":["/event/speech_topic","/symbols/namesake","/award/award"],"confidenceScore":3.854,"wikiLink":"http://en.wikipedia.org/wiki/Hugo_Award","matchedText":"Hugo Award","freebaseId":"/m/03gw9","relevanceScore":0.1182,"entityEnglishId":"Hugo Award","startingPos":42,"endingPos":52,"wikidataId":"Q188914"}]},"time":0.00652,"ok":true}
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Agent","Person","Artist","Writer"],"matchingTokens":[3,4],"entityId":"Naomi Novik","freebaseTypes":["/award/award_winner","/influence/influence_node","/award/award_nominee","/book/author","/people/person","/fictional_universe/fictional_character_creator"],"confidenceScore":2.733,"wikiLink":"http://en.wikipedia.org/wiki/Naomi_Novik","matchedText":"Naomi Novik","freebaseId":"/m/0ckkqp","relevanceScore":0.1639,"entityEnglishId":"Naomi Novik","startingPos":14,"endingPos":25,"wikidataId":"Q242643"}
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 14
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 25
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["Award"],"matchingTokens":[8,9],"entityId":"Hugo Award","freebaseTypes":["/event/speech_topic","/symbols/namesake","/award/award"],"confidenceScore":3.854,"wikiLink":"http://en.wikipedia.org/wiki/Hugo_Award","matchedText":"Hugo Award","freebaseId":"/m/03gw9","relevanceScore":0.1182,"entityEnglishId":"Hugo Award","startingPos":42,"endingPos":52,"wikidataId":"Q188914"}
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 42
[2m2023-10-27 14:08:24.879[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 52
[2m2023-10-27 14:08:24.883[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c
[2m2023-10-27 14:08:24.885[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@1401b8c1
[2m2023-10-27 14:08:24.886[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:08:24.887[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "14"^^xsd:nonNegativeInteger .
    _:b1 oa:end "25"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.888[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "14"^^xsd:nonNegativeInteger .
    _:b1 oa:end "25"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.888[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "14"^^xsd:nonNegativeInteger .
    _:b1 oa:end "25"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.893[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@71e61ba7
[2m2023-10-27 14:08:24.893[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:08:24.895[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "52"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.895[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "52"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.895[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:e908e49a-7abb-4e44-8823-b9668efe6206> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_1382d230-ed2b-4590-8756-5d0bbd7d3f2c> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "42"^^xsd:nonNegativeInteger .
    _:b1 oa:end "52"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:08:24.900[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-8][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 405 ms
[2m2023-10-27 14:09:00.691[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"}
[2m2023-10-27 14:09:00.693[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"}
[2m2023-10-27 14:09:00.693[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"},"inGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e","outGraph":"urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e"}
[2m2023-10-27 14:09:00.693[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@612033bd
[2m2023-10-27 14:09:00.710[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@3d76b552
[2m2023-10-27 14:09:00.711[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:09:00.714[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:09:00.714[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:09:00.728[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf
[2m2023-10-27 14:09:00.728[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf found in urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e at http://localhost:8080/sparql
[2m2023-10-27 14:09:00.731[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation What language do they speak in Poland ? 
[2m2023-10-27 14:09:00.731[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question What language do they speak in Poland ?
[2m2023-10-27 14:09:00.731[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:09:00.731[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:09:00.731[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:09:00.731[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[What language do they speak in Poland ?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:09:00.731[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=-27051051
[2m2023-10-27 14:09:00.843[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@52ae96d4
[2m2023-10-27 14:09:01.063[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:09:01.063[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:09:01.063[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:09:01.063[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"type":["Place","PopulatedPlace","Country"],"matchingTokens":[6],"entityId":"Poland","freebaseTypes":["/symbols/coat_of_arms_bearer","/media_common/netflix_genre","/business/employer","/biology/breed_origin","/organization/organization_member","/fictional_universe/fictional_setting","/symbols/name_source","/location/dated_location","/sports/sports_team_location","/location/country","/government/governmental_jurisdiction","/travel/travel_destination","/film/film_festival_focus","/location/statistical_region","/sports/sport_country","/military/military_combatant","/film/film_location","/location/location","/organization/organization_scope","/food/beer_country_region","/book/book_subject","/organization/organization_founder","/symbols/flag_referent","/business/business_location","/periodicals/newspaper_circulation_area","/olympics/olympic_participating_country"],"confidenceScore":3.754,"wikiLink":"http://en.wikipedia.org/wiki/Poland","matchedText":"Poland","freebaseId":"/m/05qhw","relevanceScore":0,"entityEnglishId":"Poland","startingPos":31,"endingPos":37,"wikidataId":"Q36"}]},"time":0.003654,"ok":true}
[2m2023-10-27 14:09:01.063[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"type":["Place","PopulatedPlace","Country"],"matchingTokens":[6],"entityId":"Poland","freebaseTypes":["/symbols/coat_of_arms_bearer","/media_common/netflix_genre","/business/employer","/biology/breed_origin","/organization/organization_member","/fictional_universe/fictional_setting","/symbols/name_source","/location/dated_location","/sports/sports_team_location","/location/country","/government/governmental_jurisdiction","/travel/travel_destination","/film/film_festival_focus","/location/statistical_region","/sports/sport_country","/military/military_combatant","/film/film_location","/location/location","/organization/organization_scope","/food/beer_country_region","/book/book_subject","/organization/organization_founder","/symbols/flag_referent","/business/business_location","/periodicals/newspaper_circulation_area","/olympics/olympic_participating_country"],"confidenceScore":3.754,"wikiLink":"http://en.wikipedia.org/wiki/Poland","matchedText":"Poland","freebaseId":"/m/05qhw","relevanceScore":0,"entityEnglishId":"Poland","startingPos":31,"endingPos":37,"wikidataId":"Q36"}
[2m2023-10-27 14:09:01.063[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 31
[2m2023-10-27 14:09:01.063[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 37
[2m2023-10-27 14:09:01.070[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf
[2m2023-10-27 14:09:01.071[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@43d20ac8
[2m2023-10-27 14:09:01.071[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:09:01.072[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "31"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:01.073[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "31"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:01.073[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:7b34e887-6dcd-407c-ac37-3a69753eae3e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_df9a4c23-1c84-4dea-9437-904ee1cccfdf> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "31"^^xsd:nonNegativeInteger .
    _:b1 oa:end "37"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:01.083[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-1][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 391 ms
[2m2023-10-27 14:09:10.786[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m annotatequestion: {"values":{"urn:qanary#outGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e","outGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e"}
[2m2023-10-27 14:09:10.786[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m construct QanaryMessage: {"values":{"urn:qanary#outGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e"},"endpoint":"http://localhost:8080/sparql","inGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e","outGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e"}
[2m2023-10-27 14:09:10.787[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryMessage  [0;39m [2m:[0;39m constructed json: {"endpoint":"http://localhost:8080/sparql","values":{"urn:qanary#outGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e","urn:qanary#endpoint":"http://localhost:8080/sparql","urn:qanary#inGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e"},"inGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e","outGraph":"urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e"}
[2m2023-10-27 14:09:10.787[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m process: eu.wdaqua.qanary.commons.QanaryMessage@4bfeb21
[2m2023-10-27 14:09:10.800[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/select_uri_textual_representation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@7e2bb164
[2m2023-10-27 14:09:10.800[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: PREFIX qa: <http://www.wdaqua.eu/qa#>
PREFIX oa: <http://www.w3.org/ns/openannotation/core/>
SELECT ?uri 
FROM ?graph { 
  ?q a qa:Question .
  ?a a qa:AnnotationOfTextRepresentation . 
  ?a oa:hasTarget ?q .
  ?a oa:hasBody ?uri .
}
[2m2023-10-27 14:09:10.800[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated SELECT query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:09:10.801[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

SELECT  ?uri
FROM <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e>
WHERE
  { ?q  a             qa:Question .
    ?a  a             qa:AnnotationOfTextRepresentation ;
        oa:hasTarget  ?q ;
        oa:hasBody    ?uri
  }

[2m2023-10-27 14:09:10.807[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0: qa#Question = http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4
[2m2023-10-27 14:09:10.807[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m uriTextRepresentation http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4 found in urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e at http://localhost:8080/sparql
[2m2023-10-27 14:09:10.808[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m textRepresentation Is samurai champloo a piece of original work or an adaptation? 
[2m2023-10-27 14:09:10.808[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question Is samurai champloo a piece of original work or an adaptation?
[2m2023-10-27 14:09:10.808[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m URL: http://api.textrazor.com
[2m2023-10-27 14:09:10.808[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m HTTP POST http://api.textrazor.com
[2m2023-10-27 14:09:10.808[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Accept=[text/plain, application/xml, text/xml, application/json, application/cbor, application/*+xml, application/*+json, */*]
[2m2023-10-27 14:09:10.808[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Writing [{text=[Is samurai champloo a piece of original work or an adaptation?], extractors=[entities]}] as "application/x-www-form-urlencoded"
[2m2023-10-27 14:09:10.808[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.CacheOfRestTemplateResponse     [0;39m [2m:[0;39m CacheResponse.getResponse: cache miss --> send request, hascode=1512567479
[2m2023-10-27 14:09:10.921[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36mq.c.RestTemplateCacheResponseInterceptor[0;39m [2m:[0;39m response received: org.springframework.http.client.BufferingClientHttpResponseWrapper@536bb63
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Response 200 OK
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.RestTemplateWithCaching         [0;39m [2m:[0;39m Reading to [java.lang.String] as "application/json"
[2m2023-10-27 14:09:11.142[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m request was actually executed: http://api.textrazor.com
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m JSON: {"response":{"language":"eng","languageIsReliable":true,"entities":[{"id":0,"matchingTokens":[1],"entityId":"Samurai","freebaseTypes":["/film/film_subject","/fictional_universe/character_occupation","/people/profession","/book/book_subject","/royalty/system_of_nobility","/royalty/noble_title"],"confidenceScore":3.575,"wikiLink":"http://en.wikipedia.org/wiki/Samurai","matchedText":"samurai","freebaseId":"/m/01183wql","relevanceScore":0.08118,"entityEnglishId":"Samurai","startingPos":3,"endingPos":10,"wikidataId":"Q38142"},{"id":1,"type":["ComicBook","Work","WrittenWork","Comics","Manga"],"matchingTokens":[1,2],"entityId":"Samurai Champloo","freebaseTypes":["/tv/tv_program"],"confidenceScore":1.669,"wikiLink":"http://en.wikipedia.org/wiki/Samurai_Champloo","matchedText":"samurai champloo","freebaseId":"/m/0324s1","relevanceScore":0.02947,"entityEnglishId":"Samurai Champloo","startingPos":3,"endingPos":19,"wikidataId":"Q143276"}]},"time":0.004887,"ok":true}
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":0,"matchingTokens":[1],"entityId":"Samurai","freebaseTypes":["/film/film_subject","/fictional_universe/character_occupation","/people/profession","/book/book_subject","/royalty/system_of_nobility","/royalty/noble_title"],"confidenceScore":3.575,"wikiLink":"http://en.wikipedia.org/wiki/Samurai","matchedText":"samurai","freebaseId":"/m/01183wql","relevanceScore":0.08118,"entityEnglishId":"Samurai","startingPos":3,"endingPos":10,"wikidataId":"Q38142"}
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 3
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 10
[2m2023-10-27 14:09:11.142[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: {"id":1,"type":["ComicBook","Work","WrittenWork","Comics","Manga"],"matchingTokens":[1,2],"entityId":"Samurai Champloo","freebaseTypes":["/tv/tv_program"],"confidenceScore":1.669,"wikiLink":"http://en.wikipedia.org/wiki/Samurai_Champloo","matchedText":"samurai champloo","freebaseId":"/m/0324s1","relevanceScore":0.02947,"entityEnglishId":"Samurai Champloo","startingPos":3,"endingPos":19,"wikidataId":"Q143276"}
[2m2023-10-27 14:09:11.143[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 3
[2m2023-10-27 14:09:11.143[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m Question: 19
[2m2023-10-27 14:09:11.147[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36meu.wdaqua.qanary.commons.QanaryQuestion [0;39m [2m:[0;39m 0/0: qa#Question = http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4
[2m2023-10-27 14:09:11.147[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@2a7f6ce6
[2m2023-10-27 14:09:11.147[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:09:11.149[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "10"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:11.149[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "10"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:11.149[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "10"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:11.156[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m filenameWithRelativePath: /queries/insert_one_annotation.rq, org.springframework.boot.loader.jar.ZipInflaterInputStream@46360bbf
[2m2023-10-27 14:09:11.156[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m readFileFromResourcesWithMap sparqlQueryString: prefix qa: <http://www.wdaqua.eu/qa#>
prefix oa: <http://www.w3.org/ns/openannotation/core/>
prefix xsd: <http://www.w3.org/2001/XMLSchema#>

INSERT {
GRAPH ?graph {
    ?a a qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget [
        a    oa:SpecificResource;
        oa:hasSource    ?targetQuestion;
        oa:hasSelector  [
            a oa:TextPositionSelector ;
            oa:start ?start ;
            oa:end  ?end
        ]
    ] ;
    oa:annotatedBy ?application ;
    oa:annotatedAt ?time .
}}
WHERE {
    BIND (IRI(str(RAND())) AS ?a) .
    BIND (now() as ?time) .
}
[2m2023-10-27 14:09:11.158[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.c.t.QanaryTripleStoreConnector    [0;39m [2m:[0;39m generated UPDATE query:
PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:11.158[0;39m [32m INFO[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.textrazor.ner.TextRazor [0;39m [2m:[0;39m SPARQL query: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:11.158[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36mQanaryTripleStoreConnectorQanaryInternal[0;39m [2m:[0;39m UPDATE on http://localhost:8080/sparql: PREFIX  qa:   <http://www.wdaqua.eu/qa#>
PREFIX  xsd:  <http://www.w3.org/2001/XMLSchema#>
PREFIX  oa:   <http://www.w3.org/ns/openannotation/core/>

INSERT {
  GRAPH <urn:graph:ed61a0af-1ed6-4197-924b-02e614a8a53e> {
    ?a <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> qa:AnnotationOfSpotInstance .
    ?a oa:hasTarget _:b0 .
    _:b0 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:SpecificResource .
    _:b0 oa:hasSource <http://localhost:8080/question/stored-question__text_2ffac394-fc6c-45c6-87bd-ff2df6d05df4> .
    _:b0 oa:hasSelector _:b1 .
    _:b1 <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> oa:TextPositionSelector .
    _:b1 oa:start "3"^^xsd:nonNegativeInteger .
    _:b1 oa:end "19"^^xsd:nonNegativeInteger .
    ?a oa:annotatedBy <urn:qanary:TextRazor> .
    ?a oa:annotatedAt ?time .
  }
}
WHERE
  { BIND(IRI(str(rand())) AS ?a)
    BIND(now() AS ?time)
  }

[2m2023-10-27 14:09:11.163[0;39m [32mDEBUG[0;39m [35m11764[0;39m [2m---[0;39m [2m[nio-8086-exec-3][0;39m [36me.w.q.component.QanaryServiceController [0;39m [2m:[0;39m processing took: 377 ms
